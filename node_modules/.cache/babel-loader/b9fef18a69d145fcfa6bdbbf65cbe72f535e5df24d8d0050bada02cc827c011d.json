{"ast":null,"code":"import clone from \"../Core/clone.js\";\nimport defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport EasingFunction from \"../Core/EasingFunction.js\";\nimport getTimestamp from \"../Core/getTimestamp.js\";\nimport TimeConstants from \"../Core/TimeConstants.js\";\nimport { Tween as TweenJS } from \"@tweenjs/tween.js\";\n\n/**\n * A tween is an animation that interpolates the properties of two objects using an {@link EasingFunction}.  Create\n * one using {@link Scene#tweens} and {@link TweenCollection#add} and related add functions.\n *\n * @alias Tween\n * @constructor\n *\n * @private\n */\nfunction Tween(tweens, tweenjs, startObject, stopObject, duration, delay, easingFunction, update, complete, cancel) {\n  this._tweens = tweens;\n  this._tweenjs = tweenjs;\n  this._startObject = clone(startObject);\n  this._stopObject = clone(stopObject);\n  this._duration = duration;\n  this._delay = delay;\n  this._easingFunction = easingFunction;\n  this._update = update;\n  this._complete = complete;\n\n  /**\n   * The callback to call if the tween is canceled either because {@link Tween#cancelTween}\n   * was called or because the tween was removed from the collection.\n   *\n   * @type {TweenCollection.TweenCancelledCallback}\n   */\n  this.cancel = cancel;\n\n  /**\n   * @private\n   */\n  this.needsStart = true;\n}\nObject.defineProperties(Tween.prototype, {\n  /**\n   * An object with properties for initial values of the tween.  The properties of this object are changed during the tween's animation.\n   * @memberof Tween.prototype\n   *\n   * @type {object}\n   * @readonly\n   */\n  startObject: {\n    get: function () {\n      return this._startObject;\n    }\n  },\n  /**\n   * An object with properties for the final values of the tween.\n   * @memberof Tween.prototype\n   *\n   * @type {object}\n   * @readonly\n   */\n  stopObject: {\n    get: function () {\n      return this._stopObject;\n    }\n  },\n  /**\n   * The duration, in seconds, for the tween.  The tween is automatically removed from the collection when it stops.\n   * @memberof Tween.prototype\n   *\n   * @type {number}\n   * @readonly\n   */\n  duration: {\n    get: function () {\n      return this._duration;\n    }\n  },\n  /**\n   * The delay, in seconds, before the tween starts animating.\n   * @memberof Tween.prototype\n   *\n   * @type {number}\n   * @readonly\n   */\n  delay: {\n    get: function () {\n      return this._delay;\n    }\n  },\n  /**\n   * Determines the curve for animtion.\n   * @memberof Tween.prototype\n   *\n   * @type {EasingFunction}\n   * @readonly\n   */\n  easingFunction: {\n    get: function () {\n      return this._easingFunction;\n    }\n  },\n  /**\n   * The callback to call at each animation update (usually tied to the a rendered frame).\n   * @memberof Tween.prototype\n   *\n   * @type {TweenCollection.TweenUpdateCallback}\n   * @readonly\n   */\n  update: {\n    get: function () {\n      return this._update;\n    }\n  },\n  /**\n   * The callback to call when the tween finishes animating.\n   * @memberof Tween.prototype\n   *\n   * @type {TweenCollection.TweenCompleteCallback}\n   * @readonly\n   */\n  complete: {\n    get: function () {\n      return this._complete;\n    }\n  },\n  /**\n   * @memberof Tween.prototype\n   *\n   * @private\n   */\n  tweenjs: {\n    get: function () {\n      return this._tweenjs;\n    }\n  }\n});\n\n/**\n * Cancels the tween calling the {@link Tween#cancel} callback if one exists.  This\n * has no effect if the tween finished or was already canceled.\n */\nTween.prototype.cancelTween = function () {\n  this._tweens.remove(this);\n};\n\n/**\n * A collection of tweens for animating properties.  Commonly accessed using {@link Scene#tweens}.\n *\n * @alias TweenCollection\n * @constructor\n *\n * @private\n */\nfunction TweenCollection() {\n  this._tweens = [];\n}\nObject.defineProperties(TweenCollection.prototype, {\n  /**\n   * The number of tweens in the collection.\n   * @memberof TweenCollection.prototype\n   *\n   * @type {number}\n   * @readonly\n   */\n  length: {\n    get: function () {\n      return this._tweens.length;\n    }\n  }\n});\n\n/**\n * Creates a tween for animating between two sets of properties.  The tween starts animating at the next call to {@link TweenCollection#update}, which\n * is implicit when {@link Viewer} or {@link CesiumWidget} render the scene.\n *\n * @param {object} [options] Object with the following properties:\n * @param {object} options.startObject An object with properties for initial values of the tween.  The properties of this object are changed during the tween's animation.\n * @param {object} options.stopObject An object with properties for the final values of the tween.\n * @param {number} options.duration The duration, in seconds, for the tween.  The tween is automatically removed from the collection when it stops.\n * @param {number} [options.delay=0.0] The delay, in seconds, before the tween starts animating.\n * @param {EasingFunction} [options.easingFunction=EasingFunction.LINEAR_NONE] Determines the curve for animtion.\n * @param {TweenCollection.TweenUpdateCallback} [options.update] The callback to call at each animation update (usually tied to the a rendered frame).\n * @param {TweenCollection.TweenCompleteCallback} [options.complete] The callback to call when the tween finishes animating.\n * @param {TweenCollection.TweenCancelledCallback} [options.cancel] The callback to call if the tween is canceled either because {@link Tween#cancelTween} was called or because the tween was removed from the collection.\n * @returns {Tween} The tween.\n *\n * @exception {DeveloperError} options.duration must be positive.\n */\nTweenCollection.prototype.add = function (options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(options.startObject) || !defined(options.stopObject)) {\n    throw new DeveloperError(\"options.startObject and options.stopObject are required.\");\n  }\n  if (!defined(options.duration) || options.duration < 0.0) {\n    throw new DeveloperError(\"options.duration is required and must be positive.\");\n  }\n  //>>includeEnd('debug');\n\n  if (options.duration === 0.0) {\n    if (defined(options.complete)) {\n      options.complete();\n    }\n    return new Tween(this);\n  }\n  const duration = options.duration / TimeConstants.SECONDS_PER_MILLISECOND;\n  const delayInSeconds = defaultValue(options.delay, 0.0);\n  const delay = delayInSeconds / TimeConstants.SECONDS_PER_MILLISECOND;\n  const easingFunction = defaultValue(options.easingFunction, EasingFunction.LINEAR_NONE);\n  const value = options.startObject;\n  const tweenjs = new TweenJS(value);\n  tweenjs.to(clone(options.stopObject), duration);\n  tweenjs.delay(delay);\n  tweenjs.easing(easingFunction);\n  if (defined(options.update)) {\n    tweenjs.onUpdate(function () {\n      options.update(value);\n    });\n  }\n  tweenjs.onComplete(defaultValue(options.complete, null));\n  tweenjs.repeat(defaultValue(options._repeat, 0.0));\n  const tween = new Tween(this, tweenjs, options.startObject, options.stopObject, options.duration, delayInSeconds, easingFunction, options.update, options.complete, options.cancel);\n  this._tweens.push(tween);\n  return tween;\n};\n\n/**\n * Creates a tween for animating a scalar property on the given object.  The tween starts animating at the next call to {@link TweenCollection#update}, which\n * is implicit when {@link Viewer} or {@link CesiumWidget} render the scene.\n *\n * @param {object} [options] Object with the following properties:\n * @param {object} options.object The object containing the property to animate.\n * @param {string} options.property The name of the property to animate.\n * @param {number} options.startValue The initial value.\n * @param {number} options.stopValue The final value.\n * @param {number} [options.duration=3.0] The duration, in seconds, for the tween.  The tween is automatically removed from the collection when it stops.\n * @param {number} [options.delay=0.0] The delay, in seconds, before the tween starts animating.\n * @param {EasingFunction} [options.easingFunction=EasingFunction.LINEAR_NONE] Determines the curve for animtion.\n * @param {TweenCollection.TweenUpdateCallback} [options.update] The callback to call at each animation update (usually tied to the a rendered frame).\n * @param {TweenCollection.TweenCompleteCallback} [options.complete] The callback to call when the tween finishes animating.\n * @param {TweenCollection.TweenCancelledCallback} [options.cancel] The callback to call if the tween is canceled either because {@link Tween#cancelTween} was called or because the tween was removed from the collection.\n * @returns {Tween} The tween.\n *\n * @exception {DeveloperError} options.object must have the specified property.\n * @exception {DeveloperError} options.duration must be positive.\n */\nTweenCollection.prototype.addProperty = function (options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n  const object = options.object;\n  const property = options.property;\n  const startValue = options.startValue;\n  const stopValue = options.stopValue;\n\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(object) || !defined(options.property)) {\n    throw new DeveloperError(\"options.object and options.property are required.\");\n  }\n  if (!defined(object[property])) {\n    throw new DeveloperError(\"options.object must have the specified property.\");\n  }\n  if (!defined(startValue) || !defined(stopValue)) {\n    throw new DeveloperError(\"options.startValue and options.stopValue are required.\");\n  }\n  //>>includeEnd('debug');\n\n  function update(value) {\n    object[property] = value.value;\n  }\n  return this.add({\n    startObject: {\n      value: startValue\n    },\n    stopObject: {\n      value: stopValue\n    },\n    duration: defaultValue(options.duration, 3.0),\n    delay: options.delay,\n    easingFunction: options.easingFunction,\n    update: update,\n    complete: options.complete,\n    cancel: options.cancel,\n    _repeat: options._repeat\n  });\n};\n\n/**\n * Creates a tween for animating the alpha of all color uniforms on a {@link Material}.  The tween starts animating at the next call to {@link TweenCollection#update}, which\n * is implicit when {@link Viewer} or {@link CesiumWidget} render the scene.\n *\n * @param {object} [options] Object with the following properties:\n * @param {Material} options.material The material to animate.\n * @param {number} [options.startValue=0.0] The initial alpha value.\n * @param {number} [options.stopValue=1.0] The final alpha value.\n * @param {number} [options.duration=3.0] The duration, in seconds, for the tween.  The tween is automatically removed from the collection when it stops.\n * @param {number} [options.delay=0.0] The delay, in seconds, before the tween starts animating.\n * @param {EasingFunction} [options.easingFunction=EasingFunction.LINEAR_NONE] Determines the curve for animtion.\n * @param {TweenCollection.TweenUpdateCallback} [options.update] The callback to call at each animation update (usually tied to the a rendered frame).\n * @param {TweenCollection.TweenCompleteCallback} [options.complete] The callback to call when the tween finishes animating.\n * @param {TweenCollection.TweenCancelledCallback} [options.cancel] The callback to call if the tween is canceled either because {@link Tween#cancelTween} was called or because the tween was removed from the collection.\n * @returns {Tween} The tween.\n *\n * @exception {DeveloperError} material has no properties with alpha components.\n * @exception {DeveloperError} options.duration must be positive.\n */\nTweenCollection.prototype.addAlpha = function (options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n  const material = options.material;\n\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(material)) {\n    throw new DeveloperError(\"options.material is required.\");\n  }\n  //>>includeEnd('debug');\n\n  const properties = [];\n  for (const property in material.uniforms) {\n    if (material.uniforms.hasOwnProperty(property) && defined(material.uniforms[property]) && defined(material.uniforms[property].alpha)) {\n      properties.push(property);\n    }\n  }\n\n  //>>includeStart('debug', pragmas.debug);\n  if (properties.length === 0) {\n    throw new DeveloperError(\"material has no properties with alpha components.\");\n  }\n  //>>includeEnd('debug');\n\n  function update(value) {\n    const length = properties.length;\n    for (let i = 0; i < length; ++i) {\n      material.uniforms[properties[i]].alpha = value.alpha;\n    }\n  }\n  return this.add({\n    startObject: {\n      alpha: defaultValue(options.startValue, 0.0) // Default to fade in\n    },\n    stopObject: {\n      alpha: defaultValue(options.stopValue, 1.0)\n    },\n    duration: defaultValue(options.duration, 3.0),\n    delay: options.delay,\n    easingFunction: options.easingFunction,\n    update: update,\n    complete: options.complete,\n    cancel: options.cancel\n  });\n};\n\n/**\n * Creates a tween for animating the offset uniform of a {@link Material}.  The tween starts animating at the next call to {@link TweenCollection#update}, which\n * is implicit when {@link Viewer} or {@link CesiumWidget} render the scene.\n *\n * @param {object} [options] Object with the following properties:\n * @param {Material} options.material The material to animate.\n * @param {number} options.startValue The initial alpha value.\n * @param {number} options.stopValue The final alpha value.\n * @param {number} [options.duration=3.0] The duration, in seconds, for the tween.  The tween is automatically removed from the collection when it stops.\n * @param {number} [options.delay=0.0] The delay, in seconds, before the tween starts animating.\n * @param {EasingFunction} [options.easingFunction=EasingFunction.LINEAR_NONE] Determines the curve for animtion.\n * @param {TweenCollection.TweenUpdateCallback} [options.update] The callback to call at each animation update (usually tied to the a rendered frame).\n * @param {TweenCollection.TweenCancelledCallback} [options.cancel] The callback to call if the tween is canceled either because {@link Tween#cancelTween} was called or because the tween was removed from the collection.\n * @returns {Tween} The tween.\n *\n * @exception {DeveloperError} material.uniforms must have an offset property.\n * @exception {DeveloperError} options.duration must be positive.\n */\nTweenCollection.prototype.addOffsetIncrement = function (options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n  const material = options.material;\n\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(material)) {\n    throw new DeveloperError(\"material is required.\");\n  }\n  if (!defined(material.uniforms.offset)) {\n    throw new DeveloperError(\"material.uniforms must have an offset property.\");\n  }\n  //>>includeEnd('debug');\n\n  const uniforms = material.uniforms;\n  return this.addProperty({\n    object: uniforms,\n    property: \"offset\",\n    startValue: uniforms.offset,\n    stopValue: uniforms.offset + 1,\n    duration: options.duration,\n    delay: options.delay,\n    easingFunction: options.easingFunction,\n    update: options.update,\n    cancel: options.cancel,\n    _repeat: Infinity\n  });\n};\n\n/**\n * Removes a tween from the collection.\n * <p>\n * This calls the {@link Tween#cancel} callback if the tween has one.\n * </p>\n *\n * @param {Tween} tween The tween to remove.\n * @returns {boolean} <code>true</code> if the tween was removed; <code>false</code> if the tween was not found in the collection.\n */\nTweenCollection.prototype.remove = function (tween) {\n  if (!defined(tween)) {\n    return false;\n  }\n  const index = this._tweens.indexOf(tween);\n  if (index !== -1) {\n    tween.tweenjs.stop();\n    if (defined(tween.cancel)) {\n      tween.cancel();\n    }\n    this._tweens.splice(index, 1);\n    return true;\n  }\n  return false;\n};\n\n/**\n * Removes all tweens from the collection.\n * <p>\n * This calls the {@link Tween#cancel} callback for each tween that has one.\n * </p>\n */\nTweenCollection.prototype.removeAll = function () {\n  const tweens = this._tweens;\n  for (let i = 0; i < tweens.length; ++i) {\n    const tween = tweens[i];\n    tween.tweenjs.stop();\n    if (defined(tween.cancel)) {\n      tween.cancel();\n    }\n  }\n  tweens.length = 0;\n};\n\n/**\n * Determines whether this collection contains a given tween.\n *\n * @param {Tween} tween The tween to check for.\n * @returns {boolean} <code>true</code> if this collection contains the tween, <code>false</code> otherwise.\n */\nTweenCollection.prototype.contains = function (tween) {\n  return defined(tween) && this._tweens.indexOf(tween) !== -1;\n};\n\n/**\n * Returns the tween in the collection at the specified index.  Indices are zero-based\n * and increase as tweens are added.  Removing a tween shifts all tweens after\n * it to the left, changing their indices.  This function is commonly used to iterate over\n * all the tween in the collection.\n *\n * @param {number} index The zero-based index of the tween.\n * @returns {Tween} The tween at the specified index.\n *\n * @example\n * // Output the duration of all the tweens in the collection.\n * const tweens = scene.tweens;\n * const length = tweens.length;\n * for (let i = 0; i < length; ++i) {\n *   console.log(tweens.get(i).duration);\n * }\n */\nTweenCollection.prototype.get = function (index) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(index)) {\n    throw new DeveloperError(\"index is required.\");\n  }\n  //>>includeEnd('debug');\n\n  return this._tweens[index];\n};\n\n/**\n * Updates the tweens in the collection to be at the provide time.  When a tween finishes, it is removed\n * from the collection.\n *\n * @param {number} [time=getTimestamp()] The time in seconds.  By default tweens are synced to the system clock.\n */\nTweenCollection.prototype.update = function (time) {\n  const tweens = this._tweens;\n  let i = 0;\n  time = defined(time) ? time / TimeConstants.SECONDS_PER_MILLISECOND : getTimestamp();\n  while (i < tweens.length) {\n    const tween = tweens[i];\n    const tweenjs = tween.tweenjs;\n    if (tween.needsStart) {\n      tween.needsStart = false;\n      tweenjs.start(time);\n    } else if (tweenjs.update(time)) {\n      i++;\n    } else {\n      tweenjs.stop();\n      tweens.splice(i, 1);\n    }\n  }\n};\n\n/**\n * A function that will execute when a tween completes.\n * @callback TweenCollection.TweenCompleteCallback\n */\n\n/**\n * A function that will execute when a tween updates.\n * @callback TweenCollection.TweenUpdateCallback\n */\n\n/**\n * A function that will execute when a tween is cancelled.\n * @callback TweenCollection.TweenCancelledCallback\n */\nexport default TweenCollection;","map":{"version":3,"names":["clone","defaultValue","defined","DeveloperError","EasingFunction","getTimestamp","TimeConstants","Tween","TweenJS","tweens","tweenjs","startObject","stopObject","duration","delay","easingFunction","update","complete","cancel","_tweens","_tweenjs","_startObject","_stopObject","_duration","_delay","_easingFunction","_update","_complete","needsStart","Object","defineProperties","prototype","get","cancelTween","remove","TweenCollection","length","add","options","EMPTY_OBJECT","SECONDS_PER_MILLISECOND","delayInSeconds","LINEAR_NONE","value","to","easing","onUpdate","onComplete","repeat","_repeat","tween","push","addProperty","object","property","startValue","stopValue","addAlpha","material","properties","uniforms","hasOwnProperty","alpha","i","addOffsetIncrement","offset","Infinity","index","indexOf","stop","splice","removeAll","contains","time","start"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/engine/Source/Scene/TweenCollection.js"],"sourcesContent":["import clone from \"../Core/clone.js\";\nimport defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport EasingFunction from \"../Core/EasingFunction.js\";\nimport getTimestamp from \"../Core/getTimestamp.js\";\nimport TimeConstants from \"../Core/TimeConstants.js\";\nimport { Tween as TweenJS } from \"@tweenjs/tween.js\";\n\n/**\n * A tween is an animation that interpolates the properties of two objects using an {@link EasingFunction}.  Create\n * one using {@link Scene#tweens} and {@link TweenCollection#add} and related add functions.\n *\n * @alias Tween\n * @constructor\n *\n * @private\n */\nfunction Tween(\n  tweens,\n  tweenjs,\n  startObject,\n  stopObject,\n  duration,\n  delay,\n  easingFunction,\n  update,\n  complete,\n  cancel,\n) {\n  this._tweens = tweens;\n  this._tweenjs = tweenjs;\n\n  this._startObject = clone(startObject);\n  this._stopObject = clone(stopObject);\n\n  this._duration = duration;\n  this._delay = delay;\n  this._easingFunction = easingFunction;\n\n  this._update = update;\n  this._complete = complete;\n\n  /**\n   * The callback to call if the tween is canceled either because {@link Tween#cancelTween}\n   * was called or because the tween was removed from the collection.\n   *\n   * @type {TweenCollection.TweenCancelledCallback}\n   */\n  this.cancel = cancel;\n\n  /**\n   * @private\n   */\n  this.needsStart = true;\n}\n\nObject.defineProperties(Tween.prototype, {\n  /**\n   * An object with properties for initial values of the tween.  The properties of this object are changed during the tween's animation.\n   * @memberof Tween.prototype\n   *\n   * @type {object}\n   * @readonly\n   */\n  startObject: {\n    get: function () {\n      return this._startObject;\n    },\n  },\n\n  /**\n   * An object with properties for the final values of the tween.\n   * @memberof Tween.prototype\n   *\n   * @type {object}\n   * @readonly\n   */\n  stopObject: {\n    get: function () {\n      return this._stopObject;\n    },\n  },\n\n  /**\n   * The duration, in seconds, for the tween.  The tween is automatically removed from the collection when it stops.\n   * @memberof Tween.prototype\n   *\n   * @type {number}\n   * @readonly\n   */\n  duration: {\n    get: function () {\n      return this._duration;\n    },\n  },\n\n  /**\n   * The delay, in seconds, before the tween starts animating.\n   * @memberof Tween.prototype\n   *\n   * @type {number}\n   * @readonly\n   */\n  delay: {\n    get: function () {\n      return this._delay;\n    },\n  },\n\n  /**\n   * Determines the curve for animtion.\n   * @memberof Tween.prototype\n   *\n   * @type {EasingFunction}\n   * @readonly\n   */\n  easingFunction: {\n    get: function () {\n      return this._easingFunction;\n    },\n  },\n\n  /**\n   * The callback to call at each animation update (usually tied to the a rendered frame).\n   * @memberof Tween.prototype\n   *\n   * @type {TweenCollection.TweenUpdateCallback}\n   * @readonly\n   */\n  update: {\n    get: function () {\n      return this._update;\n    },\n  },\n\n  /**\n   * The callback to call when the tween finishes animating.\n   * @memberof Tween.prototype\n   *\n   * @type {TweenCollection.TweenCompleteCallback}\n   * @readonly\n   */\n  complete: {\n    get: function () {\n      return this._complete;\n    },\n  },\n\n  /**\n   * @memberof Tween.prototype\n   *\n   * @private\n   */\n  tweenjs: {\n    get: function () {\n      return this._tweenjs;\n    },\n  },\n});\n\n/**\n * Cancels the tween calling the {@link Tween#cancel} callback if one exists.  This\n * has no effect if the tween finished or was already canceled.\n */\nTween.prototype.cancelTween = function () {\n  this._tweens.remove(this);\n};\n\n/**\n * A collection of tweens for animating properties.  Commonly accessed using {@link Scene#tweens}.\n *\n * @alias TweenCollection\n * @constructor\n *\n * @private\n */\nfunction TweenCollection() {\n  this._tweens = [];\n}\n\nObject.defineProperties(TweenCollection.prototype, {\n  /**\n   * The number of tweens in the collection.\n   * @memberof TweenCollection.prototype\n   *\n   * @type {number}\n   * @readonly\n   */\n  length: {\n    get: function () {\n      return this._tweens.length;\n    },\n  },\n});\n\n/**\n * Creates a tween for animating between two sets of properties.  The tween starts animating at the next call to {@link TweenCollection#update}, which\n * is implicit when {@link Viewer} or {@link CesiumWidget} render the scene.\n *\n * @param {object} [options] Object with the following properties:\n * @param {object} options.startObject An object with properties for initial values of the tween.  The properties of this object are changed during the tween's animation.\n * @param {object} options.stopObject An object with properties for the final values of the tween.\n * @param {number} options.duration The duration, in seconds, for the tween.  The tween is automatically removed from the collection when it stops.\n * @param {number} [options.delay=0.0] The delay, in seconds, before the tween starts animating.\n * @param {EasingFunction} [options.easingFunction=EasingFunction.LINEAR_NONE] Determines the curve for animtion.\n * @param {TweenCollection.TweenUpdateCallback} [options.update] The callback to call at each animation update (usually tied to the a rendered frame).\n * @param {TweenCollection.TweenCompleteCallback} [options.complete] The callback to call when the tween finishes animating.\n * @param {TweenCollection.TweenCancelledCallback} [options.cancel] The callback to call if the tween is canceled either because {@link Tween#cancelTween} was called or because the tween was removed from the collection.\n * @returns {Tween} The tween.\n *\n * @exception {DeveloperError} options.duration must be positive.\n */\nTweenCollection.prototype.add = function (options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(options.startObject) || !defined(options.stopObject)) {\n    throw new DeveloperError(\n      \"options.startObject and options.stopObject are required.\",\n    );\n  }\n\n  if (!defined(options.duration) || options.duration < 0.0) {\n    throw new DeveloperError(\n      \"options.duration is required and must be positive.\",\n    );\n  }\n  //>>includeEnd('debug');\n\n  if (options.duration === 0.0) {\n    if (defined(options.complete)) {\n      options.complete();\n    }\n    return new Tween(this);\n  }\n\n  const duration = options.duration / TimeConstants.SECONDS_PER_MILLISECOND;\n  const delayInSeconds = defaultValue(options.delay, 0.0);\n  const delay = delayInSeconds / TimeConstants.SECONDS_PER_MILLISECOND;\n  const easingFunction = defaultValue(\n    options.easingFunction,\n    EasingFunction.LINEAR_NONE,\n  );\n\n  const value = options.startObject;\n  const tweenjs = new TweenJS(value);\n  tweenjs.to(clone(options.stopObject), duration);\n  tweenjs.delay(delay);\n  tweenjs.easing(easingFunction);\n  if (defined(options.update)) {\n    tweenjs.onUpdate(function () {\n      options.update(value);\n    });\n  }\n  tweenjs.onComplete(defaultValue(options.complete, null));\n  tweenjs.repeat(defaultValue(options._repeat, 0.0));\n\n  const tween = new Tween(\n    this,\n    tweenjs,\n    options.startObject,\n    options.stopObject,\n    options.duration,\n    delayInSeconds,\n    easingFunction,\n    options.update,\n    options.complete,\n    options.cancel,\n  );\n  this._tweens.push(tween);\n  return tween;\n};\n\n/**\n * Creates a tween for animating a scalar property on the given object.  The tween starts animating at the next call to {@link TweenCollection#update}, which\n * is implicit when {@link Viewer} or {@link CesiumWidget} render the scene.\n *\n * @param {object} [options] Object with the following properties:\n * @param {object} options.object The object containing the property to animate.\n * @param {string} options.property The name of the property to animate.\n * @param {number} options.startValue The initial value.\n * @param {number} options.stopValue The final value.\n * @param {number} [options.duration=3.0] The duration, in seconds, for the tween.  The tween is automatically removed from the collection when it stops.\n * @param {number} [options.delay=0.0] The delay, in seconds, before the tween starts animating.\n * @param {EasingFunction} [options.easingFunction=EasingFunction.LINEAR_NONE] Determines the curve for animtion.\n * @param {TweenCollection.TweenUpdateCallback} [options.update] The callback to call at each animation update (usually tied to the a rendered frame).\n * @param {TweenCollection.TweenCompleteCallback} [options.complete] The callback to call when the tween finishes animating.\n * @param {TweenCollection.TweenCancelledCallback} [options.cancel] The callback to call if the tween is canceled either because {@link Tween#cancelTween} was called or because the tween was removed from the collection.\n * @returns {Tween} The tween.\n *\n * @exception {DeveloperError} options.object must have the specified property.\n * @exception {DeveloperError} options.duration must be positive.\n */\nTweenCollection.prototype.addProperty = function (options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n\n  const object = options.object;\n  const property = options.property;\n  const startValue = options.startValue;\n  const stopValue = options.stopValue;\n\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(object) || !defined(options.property)) {\n    throw new DeveloperError(\n      \"options.object and options.property are required.\",\n    );\n  }\n  if (!defined(object[property])) {\n    throw new DeveloperError(\n      \"options.object must have the specified property.\",\n    );\n  }\n  if (!defined(startValue) || !defined(stopValue)) {\n    throw new DeveloperError(\n      \"options.startValue and options.stopValue are required.\",\n    );\n  }\n  //>>includeEnd('debug');\n\n  function update(value) {\n    object[property] = value.value;\n  }\n\n  return this.add({\n    startObject: {\n      value: startValue,\n    },\n    stopObject: {\n      value: stopValue,\n    },\n    duration: defaultValue(options.duration, 3.0),\n    delay: options.delay,\n    easingFunction: options.easingFunction,\n    update: update,\n    complete: options.complete,\n    cancel: options.cancel,\n    _repeat: options._repeat,\n  });\n};\n\n/**\n * Creates a tween for animating the alpha of all color uniforms on a {@link Material}.  The tween starts animating at the next call to {@link TweenCollection#update}, which\n * is implicit when {@link Viewer} or {@link CesiumWidget} render the scene.\n *\n * @param {object} [options] Object with the following properties:\n * @param {Material} options.material The material to animate.\n * @param {number} [options.startValue=0.0] The initial alpha value.\n * @param {number} [options.stopValue=1.0] The final alpha value.\n * @param {number} [options.duration=3.0] The duration, in seconds, for the tween.  The tween is automatically removed from the collection when it stops.\n * @param {number} [options.delay=0.0] The delay, in seconds, before the tween starts animating.\n * @param {EasingFunction} [options.easingFunction=EasingFunction.LINEAR_NONE] Determines the curve for animtion.\n * @param {TweenCollection.TweenUpdateCallback} [options.update] The callback to call at each animation update (usually tied to the a rendered frame).\n * @param {TweenCollection.TweenCompleteCallback} [options.complete] The callback to call when the tween finishes animating.\n * @param {TweenCollection.TweenCancelledCallback} [options.cancel] The callback to call if the tween is canceled either because {@link Tween#cancelTween} was called or because the tween was removed from the collection.\n * @returns {Tween} The tween.\n *\n * @exception {DeveloperError} material has no properties with alpha components.\n * @exception {DeveloperError} options.duration must be positive.\n */\nTweenCollection.prototype.addAlpha = function (options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n\n  const material = options.material;\n\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(material)) {\n    throw new DeveloperError(\"options.material is required.\");\n  }\n  //>>includeEnd('debug');\n\n  const properties = [];\n\n  for (const property in material.uniforms) {\n    if (\n      material.uniforms.hasOwnProperty(property) &&\n      defined(material.uniforms[property]) &&\n      defined(material.uniforms[property].alpha)\n    ) {\n      properties.push(property);\n    }\n  }\n\n  //>>includeStart('debug', pragmas.debug);\n  if (properties.length === 0) {\n    throw new DeveloperError(\n      \"material has no properties with alpha components.\",\n    );\n  }\n  //>>includeEnd('debug');\n\n  function update(value) {\n    const length = properties.length;\n    for (let i = 0; i < length; ++i) {\n      material.uniforms[properties[i]].alpha = value.alpha;\n    }\n  }\n\n  return this.add({\n    startObject: {\n      alpha: defaultValue(options.startValue, 0.0), // Default to fade in\n    },\n    stopObject: {\n      alpha: defaultValue(options.stopValue, 1.0),\n    },\n    duration: defaultValue(options.duration, 3.0),\n    delay: options.delay,\n    easingFunction: options.easingFunction,\n    update: update,\n    complete: options.complete,\n    cancel: options.cancel,\n  });\n};\n\n/**\n * Creates a tween for animating the offset uniform of a {@link Material}.  The tween starts animating at the next call to {@link TweenCollection#update}, which\n * is implicit when {@link Viewer} or {@link CesiumWidget} render the scene.\n *\n * @param {object} [options] Object with the following properties:\n * @param {Material} options.material The material to animate.\n * @param {number} options.startValue The initial alpha value.\n * @param {number} options.stopValue The final alpha value.\n * @param {number} [options.duration=3.0] The duration, in seconds, for the tween.  The tween is automatically removed from the collection when it stops.\n * @param {number} [options.delay=0.0] The delay, in seconds, before the tween starts animating.\n * @param {EasingFunction} [options.easingFunction=EasingFunction.LINEAR_NONE] Determines the curve for animtion.\n * @param {TweenCollection.TweenUpdateCallback} [options.update] The callback to call at each animation update (usually tied to the a rendered frame).\n * @param {TweenCollection.TweenCancelledCallback} [options.cancel] The callback to call if the tween is canceled either because {@link Tween#cancelTween} was called or because the tween was removed from the collection.\n * @returns {Tween} The tween.\n *\n * @exception {DeveloperError} material.uniforms must have an offset property.\n * @exception {DeveloperError} options.duration must be positive.\n */\nTweenCollection.prototype.addOffsetIncrement = function (options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n\n  const material = options.material;\n\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(material)) {\n    throw new DeveloperError(\"material is required.\");\n  }\n  if (!defined(material.uniforms.offset)) {\n    throw new DeveloperError(\"material.uniforms must have an offset property.\");\n  }\n  //>>includeEnd('debug');\n\n  const uniforms = material.uniforms;\n  return this.addProperty({\n    object: uniforms,\n    property: \"offset\",\n    startValue: uniforms.offset,\n    stopValue: uniforms.offset + 1,\n    duration: options.duration,\n    delay: options.delay,\n    easingFunction: options.easingFunction,\n    update: options.update,\n    cancel: options.cancel,\n    _repeat: Infinity,\n  });\n};\n\n/**\n * Removes a tween from the collection.\n * <p>\n * This calls the {@link Tween#cancel} callback if the tween has one.\n * </p>\n *\n * @param {Tween} tween The tween to remove.\n * @returns {boolean} <code>true</code> if the tween was removed; <code>false</code> if the tween was not found in the collection.\n */\nTweenCollection.prototype.remove = function (tween) {\n  if (!defined(tween)) {\n    return false;\n  }\n\n  const index = this._tweens.indexOf(tween);\n  if (index !== -1) {\n    tween.tweenjs.stop();\n    if (defined(tween.cancel)) {\n      tween.cancel();\n    }\n    this._tweens.splice(index, 1);\n    return true;\n  }\n\n  return false;\n};\n\n/**\n * Removes all tweens from the collection.\n * <p>\n * This calls the {@link Tween#cancel} callback for each tween that has one.\n * </p>\n */\nTweenCollection.prototype.removeAll = function () {\n  const tweens = this._tweens;\n\n  for (let i = 0; i < tweens.length; ++i) {\n    const tween = tweens[i];\n    tween.tweenjs.stop();\n    if (defined(tween.cancel)) {\n      tween.cancel();\n    }\n  }\n  tweens.length = 0;\n};\n\n/**\n * Determines whether this collection contains a given tween.\n *\n * @param {Tween} tween The tween to check for.\n * @returns {boolean} <code>true</code> if this collection contains the tween, <code>false</code> otherwise.\n */\nTweenCollection.prototype.contains = function (tween) {\n  return defined(tween) && this._tweens.indexOf(tween) !== -1;\n};\n\n/**\n * Returns the tween in the collection at the specified index.  Indices are zero-based\n * and increase as tweens are added.  Removing a tween shifts all tweens after\n * it to the left, changing their indices.  This function is commonly used to iterate over\n * all the tween in the collection.\n *\n * @param {number} index The zero-based index of the tween.\n * @returns {Tween} The tween at the specified index.\n *\n * @example\n * // Output the duration of all the tweens in the collection.\n * const tweens = scene.tweens;\n * const length = tweens.length;\n * for (let i = 0; i < length; ++i) {\n *   console.log(tweens.get(i).duration);\n * }\n */\nTweenCollection.prototype.get = function (index) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(index)) {\n    throw new DeveloperError(\"index is required.\");\n  }\n  //>>includeEnd('debug');\n\n  return this._tweens[index];\n};\n\n/**\n * Updates the tweens in the collection to be at the provide time.  When a tween finishes, it is removed\n * from the collection.\n *\n * @param {number} [time=getTimestamp()] The time in seconds.  By default tweens are synced to the system clock.\n */\nTweenCollection.prototype.update = function (time) {\n  const tweens = this._tweens;\n\n  let i = 0;\n  time = defined(time)\n    ? time / TimeConstants.SECONDS_PER_MILLISECOND\n    : getTimestamp();\n  while (i < tweens.length) {\n    const tween = tweens[i];\n    const tweenjs = tween.tweenjs;\n\n    if (tween.needsStart) {\n      tween.needsStart = false;\n      tweenjs.start(time);\n    } else if (tweenjs.update(time)) {\n      i++;\n    } else {\n      tweenjs.stop();\n      tweens.splice(i, 1);\n    }\n  }\n};\n\n/**\n * A function that will execute when a tween completes.\n * @callback TweenCollection.TweenCompleteCallback\n */\n\n/**\n * A function that will execute when a tween updates.\n * @callback TweenCollection.TweenUpdateCallback\n */\n\n/**\n * A function that will execute when a tween is cancelled.\n * @callback TweenCollection.TweenCancelledCallback\n */\nexport default TweenCollection;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,kBAAkB;AACpC,OAAOC,YAAY,MAAM,yBAAyB;AAClD,OAAOC,OAAO,MAAM,oBAAoB;AACxC,OAAOC,cAAc,MAAM,2BAA2B;AACtD,OAAOC,cAAc,MAAM,2BAA2B;AACtD,OAAOC,YAAY,MAAM,yBAAyB;AAClD,OAAOC,aAAa,MAAM,0BAA0B;AACpD,SAASC,KAAK,IAAIC,OAAO,QAAQ,mBAAmB;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASD,KAAKA,CACZE,MAAM,EACNC,OAAO,EACPC,WAAW,EACXC,UAAU,EACVC,QAAQ,EACRC,KAAK,EACLC,cAAc,EACdC,MAAM,EACNC,QAAQ,EACRC,MAAM,EACN;EACA,IAAI,CAACC,OAAO,GAAGV,MAAM;EACrB,IAAI,CAACW,QAAQ,GAAGV,OAAO;EAEvB,IAAI,CAACW,YAAY,GAAGrB,KAAK,CAACW,WAAW,CAAC;EACtC,IAAI,CAACW,WAAW,GAAGtB,KAAK,CAACY,UAAU,CAAC;EAEpC,IAAI,CAACW,SAAS,GAAGV,QAAQ;EACzB,IAAI,CAACW,MAAM,GAAGV,KAAK;EACnB,IAAI,CAACW,eAAe,GAAGV,cAAc;EAErC,IAAI,CAACW,OAAO,GAAGV,MAAM;EACrB,IAAI,CAACW,SAAS,GAAGV,QAAQ;;EAEzB;AACF;AACA;AACA;AACA;AACA;EACE,IAAI,CAACC,MAAM,GAAGA,MAAM;;EAEpB;AACF;AACA;EACE,IAAI,CAACU,UAAU,GAAG,IAAI;AACxB;AAEAC,MAAM,CAACC,gBAAgB,CAACvB,KAAK,CAACwB,SAAS,EAAE;EACvC;AACF;AACA;AACA;AACA;AACA;AACA;EACEpB,WAAW,EAAE;IACXqB,GAAG,EAAE,SAAAA,CAAA,EAAY;MACf,OAAO,IAAI,CAACX,YAAY;IAC1B;EACF,CAAC;EAED;AACF;AACA;AACA;AACA;AACA;AACA;EACET,UAAU,EAAE;IACVoB,GAAG,EAAE,SAAAA,CAAA,EAAY;MACf,OAAO,IAAI,CAACV,WAAW;IACzB;EACF,CAAC;EAED;AACF;AACA;AACA;AACA;AACA;AACA;EACET,QAAQ,EAAE;IACRmB,GAAG,EAAE,SAAAA,CAAA,EAAY;MACf,OAAO,IAAI,CAACT,SAAS;IACvB;EACF,CAAC;EAED;AACF;AACA;AACA;AACA;AACA;AACA;EACET,KAAK,EAAE;IACLkB,GAAG,EAAE,SAAAA,CAAA,EAAY;MACf,OAAO,IAAI,CAACR,MAAM;IACpB;EACF,CAAC;EAED;AACF;AACA;AACA;AACA;AACA;AACA;EACET,cAAc,EAAE;IACdiB,GAAG,EAAE,SAAAA,CAAA,EAAY;MACf,OAAO,IAAI,CAACP,eAAe;IAC7B;EACF,CAAC;EAED;AACF;AACA;AACA;AACA;AACA;AACA;EACET,MAAM,EAAE;IACNgB,GAAG,EAAE,SAAAA,CAAA,EAAY;MACf,OAAO,IAAI,CAACN,OAAO;IACrB;EACF,CAAC;EAED;AACF;AACA;AACA;AACA;AACA;AACA;EACET,QAAQ,EAAE;IACRe,GAAG,EAAE,SAAAA,CAAA,EAAY;MACf,OAAO,IAAI,CAACL,SAAS;IACvB;EACF,CAAC;EAED;AACF;AACA;AACA;AACA;EACEjB,OAAO,EAAE;IACPsB,GAAG,EAAE,SAAAA,CAAA,EAAY;MACf,OAAO,IAAI,CAACZ,QAAQ;IACtB;EACF;AACF,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACAb,KAAK,CAACwB,SAAS,CAACE,WAAW,GAAG,YAAY;EACxC,IAAI,CAACd,OAAO,CAACe,MAAM,CAAC,IAAI,CAAC;AAC3B,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,eAAeA,CAAA,EAAG;EACzB,IAAI,CAAChB,OAAO,GAAG,EAAE;AACnB;AAEAU,MAAM,CAACC,gBAAgB,CAACK,eAAe,CAACJ,SAAS,EAAE;EACjD;AACF;AACA;AACA;AACA;AACA;AACA;EACEK,MAAM,EAAE;IACNJ,GAAG,EAAE,SAAAA,CAAA,EAAY;MACf,OAAO,IAAI,CAACb,OAAO,CAACiB,MAAM;IAC5B;EACF;AACF,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}