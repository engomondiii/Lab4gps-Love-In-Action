{"ast":null,"code":"import Check from \"../../../../Core/Check.js\";\n\n/**\n * @typedef {object} AnchorPointIndirect.ConstructorOptions\n *\n * Initialization options for the AnchorPointIndirect constructor\n *\n * @property {Cartesian3} position  Anchor point geographic coordinates\n * @property {Cartesian3} adjustmentParams The adjustment values in meters\n * @property {Matrix3} covarianceMatrix The 3x3 covariance matrix\n */\n\n/**\n * Metadata for one stored anchor point.\n *\n * This reflects the `anchronPointIndirect` definition of the\n * {@link https://nsgreg.nga.mil/csmwg.jsp|NGA_gpm_local} glTF extension.\n *\n * @constructor\n * @param {AnchorPointIndirect.ConstructorOptions} options An object describing initialization options\n * @experimental This feature is not final and is subject to change without Cesium's standard deprecation policy.\n */\nfunction AnchorPointIndirect(options) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.typeOf.object(\"options.position\", options.position);\n  Check.typeOf.object(\"options.adjustmentParams\", options.adjustmentParams);\n  Check.typeOf.object(\"options.covarianceMatrix\", options.covarianceMatrix);\n  //>>includeEnd('debug');\n\n  this._position = options.position;\n  this._adjustmentParams = options.adjustmentParams;\n  this._covarianceMatrix = options.covarianceMatrix;\n}\nObject.defineProperties(AnchorPointIndirect.prototype, {\n  /**\n   * Anchor point geographic coordinates in meters as X/Easting, Y/Northing, Z/HAE\n   *\n   * @memberof AnchorPointIndirect.prototype\n   * @type {Cartesian3}\n   * @readonly\n   */\n  position: {\n    get: function () {\n      return this._position;\n    }\n  },\n  /**\n   * The delta-x delta-y delta-z adjustment values in meters per anchor\n   * point.\n   *\n   * @memberof AnchorPointIndirect.prototype\n   * @type {Cartesian3}\n   * @readonly\n   */\n  adjustmentParams: {\n    get: function () {\n      return this._adjustmentParams;\n    }\n  },\n  /**\n   * The 3x3 covariance matrix.\n   *\n   * @memberof AnchorPointIndirect.prototype\n   * @type {Matrix3}\n   * @readonly\n   */\n  covarianceMatrix: {\n    get: function () {\n      return this._covarianceMatrix;\n    }\n  }\n});\nexport default AnchorPointIndirect;","map":{"version":3,"names":["Check","AnchorPointIndirect","options","typeOf","object","position","adjustmentParams","covarianceMatrix","_position","_adjustmentParams","_covarianceMatrix","Object","defineProperties","prototype","get"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/engine/Source/Scene/Model/Extensions/Gpm/AnchorPointIndirect.js"],"sourcesContent":["import Check from \"../../../../Core/Check.js\";\n\n/**\n * @typedef {object} AnchorPointIndirect.ConstructorOptions\n *\n * Initialization options for the AnchorPointIndirect constructor\n *\n * @property {Cartesian3} position  Anchor point geographic coordinates\n * @property {Cartesian3} adjustmentParams The adjustment values in meters\n * @property {Matrix3} covarianceMatrix The 3x3 covariance matrix\n */\n\n/**\n * Metadata for one stored anchor point.\n *\n * This reflects the `anchronPointIndirect` definition of the\n * {@link https://nsgreg.nga.mil/csmwg.jsp|NGA_gpm_local} glTF extension.\n *\n * @constructor\n * @param {AnchorPointIndirect.ConstructorOptions} options An object describing initialization options\n * @experimental This feature is not final and is subject to change without Cesium's standard deprecation policy.\n */\nfunction AnchorPointIndirect(options) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.typeOf.object(\"options.position\", options.position);\n  Check.typeOf.object(\"options.adjustmentParams\", options.adjustmentParams);\n  Check.typeOf.object(\"options.covarianceMatrix\", options.covarianceMatrix);\n  //>>includeEnd('debug');\n\n  this._position = options.position;\n  this._adjustmentParams = options.adjustmentParams;\n  this._covarianceMatrix = options.covarianceMatrix;\n}\n\nObject.defineProperties(AnchorPointIndirect.prototype, {\n  /**\n   * Anchor point geographic coordinates in meters as X/Easting, Y/Northing, Z/HAE\n   *\n   * @memberof AnchorPointIndirect.prototype\n   * @type {Cartesian3}\n   * @readonly\n   */\n  position: {\n    get: function () {\n      return this._position;\n    },\n  },\n\n  /**\n   * The delta-x delta-y delta-z adjustment values in meters per anchor\n   * point.\n   *\n   * @memberof AnchorPointIndirect.prototype\n   * @type {Cartesian3}\n   * @readonly\n   */\n  adjustmentParams: {\n    get: function () {\n      return this._adjustmentParams;\n    },\n  },\n\n  /**\n   * The 3x3 covariance matrix.\n   *\n   * @memberof AnchorPointIndirect.prototype\n   * @type {Matrix3}\n   * @readonly\n   */\n  covarianceMatrix: {\n    get: function () {\n      return this._covarianceMatrix;\n    },\n  },\n});\n\nexport default AnchorPointIndirect;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,2BAA2B;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,mBAAmBA,CAACC,OAAO,EAAE;EACpC;EACAF,KAAK,CAACG,MAAM,CAACC,MAAM,CAAC,kBAAkB,EAAEF,OAAO,CAACG,QAAQ,CAAC;EACzDL,KAAK,CAACG,MAAM,CAACC,MAAM,CAAC,0BAA0B,EAAEF,OAAO,CAACI,gBAAgB,CAAC;EACzEN,KAAK,CAACG,MAAM,CAACC,MAAM,CAAC,0BAA0B,EAAEF,OAAO,CAACK,gBAAgB,CAAC;EACzE;;EAEA,IAAI,CAACC,SAAS,GAAGN,OAAO,CAACG,QAAQ;EACjC,IAAI,CAACI,iBAAiB,GAAGP,OAAO,CAACI,gBAAgB;EACjD,IAAI,CAACI,iBAAiB,GAAGR,OAAO,CAACK,gBAAgB;AACnD;AAEAI,MAAM,CAACC,gBAAgB,CAACX,mBAAmB,CAACY,SAAS,EAAE;EACrD;AACF;AACA;AACA;AACA;AACA;AACA;EACER,QAAQ,EAAE;IACRS,GAAG,EAAE,SAAAA,CAAA,EAAY;MACf,OAAO,IAAI,CAACN,SAAS;IACvB;EACF,CAAC;EAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACEF,gBAAgB,EAAE;IAChBQ,GAAG,EAAE,SAAAA,CAAA,EAAY;MACf,OAAO,IAAI,CAACL,iBAAiB;IAC/B;EACF,CAAC;EAED;AACF;AACA;AACA;AACA;AACA;AACA;EACEF,gBAAgB,EAAE;IAChBO,GAAG,EAAE,SAAAA,CAAA,EAAY;MACf,OAAO,IAAI,CAACJ,iBAAiB;IAC/B;EACF;AACF,CAAC,CAAC;AAEF,eAAeT,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}