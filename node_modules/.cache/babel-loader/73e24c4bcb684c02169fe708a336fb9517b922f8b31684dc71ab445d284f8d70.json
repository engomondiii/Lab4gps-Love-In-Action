{"ast":null,"code":"import Check from \"../Core/Check.js\";\nimport clone from \"../Core/clone.js\";\nimport defaultValue from \"../Core/defaultValue.js\";\n\n/**\n * A metadata enum value.\n * <p>\n * See the {@link https://github.com/CesiumGS/3d-tiles/tree/main/specification/Metadata|3D Metadata Specification} for 3D Tiles\n * </p>\n *\n * @param {object} options Object with the following properties:\n * @param {number} options.value The integer value.\n * @param {string} options.name The name of the enum value.\n * @param {string} [options.description] The description of the enum value.\n * @param {*} [options.extras] Extra user-defined properties.\n * @param {object} [options.extensions] An object containing extensions.\n *\n * @alias MetadataEnumValue\n * @constructor\n * @experimental This feature is using part of the 3D Tiles spec that is not final and is subject to change without Cesium's standard deprecation policy.\n */\nfunction MetadataEnumValue(options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n  const value = options.value;\n  const name = options.name;\n\n  //>>includeStart('debug', pragmas.debug);\n  Check.typeOf.number(\"options.value\", value);\n  Check.typeOf.string(\"options.name\", name);\n\n  //>>includeEnd('debug');\n\n  this._value = value;\n  this._name = name;\n  this._description = options.description;\n  this._extras = clone(options.extras, true);\n  this._extensions = clone(options.extensions, true);\n}\n\n/**\n * Creates a {@link MetadataEnumValue} from either 3D Tiles 1.1, 3DTILES_metadata, EXT_structural_metadata, or EXT_feature_metadata.\n *\n * @param {object} value The enum value JSON object.\n *\n * @returns {MetadataEnumValue} The newly created metadata enum value.\n *\n * @private\n * @experimental This feature is using part of the 3D Tiles spec that is not final and is subject to change without Cesium's standard deprecation policy.\n */\nMetadataEnumValue.fromJson = function (value) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.typeOf.object(\"value\", value);\n  //>>includeEnd('debug');\n\n  return new MetadataEnumValue({\n    value: value.value,\n    name: value.name,\n    description: value.description,\n    extras: value.extras,\n    extensions: value.extensions\n  });\n};\nObject.defineProperties(MetadataEnumValue.prototype, {\n  /**\n   * The integer value.\n   *\n   * @memberof MetadataEnumValue.prototype\n   * @type {number}\n   * @readonly\n   */\n  value: {\n    get: function () {\n      return this._value;\n    }\n  },\n  /**\n   * The name of the enum value.\n   *\n   * @memberof MetadataEnumValue.prototype\n   * @type {string}\n   * @readonly\n   */\n  name: {\n    get: function () {\n      return this._name;\n    }\n  },\n  /**\n   * The description of the enum value.\n   *\n   * @memberof MetadataEnumValue.prototype\n   * @type {string}\n   * @readonly\n   */\n  description: {\n    get: function () {\n      return this._description;\n    }\n  },\n  /**\n   * Extra user-defined properties.\n   *\n   * @memberof MetadataEnumValue.prototype\n   * @type {*}\n   * @readonly\n   */\n  extras: {\n    get: function () {\n      return this._extras;\n    }\n  },\n  /**\n   * An object containing extensions.\n   *\n   * @memberof MetadataEnumValue.prototype\n   * @type {object}\n   * @readonly\n   */\n  extensions: {\n    get: function () {\n      return this._extensions;\n    }\n  }\n});\nexport default MetadataEnumValue;","map":{"version":3,"names":["Check","clone","defaultValue","MetadataEnumValue","options","EMPTY_OBJECT","value","name","typeOf","number","string","_value","_name","_description","description","_extras","extras","_extensions","extensions","fromJson","object","Object","defineProperties","prototype","get"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/engine/Source/Scene/MetadataEnumValue.js"],"sourcesContent":["import Check from \"../Core/Check.js\";\nimport clone from \"../Core/clone.js\";\nimport defaultValue from \"../Core/defaultValue.js\";\n\n/**\n * A metadata enum value.\n * <p>\n * See the {@link https://github.com/CesiumGS/3d-tiles/tree/main/specification/Metadata|3D Metadata Specification} for 3D Tiles\n * </p>\n *\n * @param {object} options Object with the following properties:\n * @param {number} options.value The integer value.\n * @param {string} options.name The name of the enum value.\n * @param {string} [options.description] The description of the enum value.\n * @param {*} [options.extras] Extra user-defined properties.\n * @param {object} [options.extensions] An object containing extensions.\n *\n * @alias MetadataEnumValue\n * @constructor\n * @experimental This feature is using part of the 3D Tiles spec that is not final and is subject to change without Cesium's standard deprecation policy.\n */\nfunction MetadataEnumValue(options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n  const value = options.value;\n  const name = options.name;\n\n  //>>includeStart('debug', pragmas.debug);\n  Check.typeOf.number(\"options.value\", value);\n  Check.typeOf.string(\"options.name\", name);\n\n  //>>includeEnd('debug');\n\n  this._value = value;\n  this._name = name;\n  this._description = options.description;\n  this._extras = clone(options.extras, true);\n  this._extensions = clone(options.extensions, true);\n}\n\n/**\n * Creates a {@link MetadataEnumValue} from either 3D Tiles 1.1, 3DTILES_metadata, EXT_structural_metadata, or EXT_feature_metadata.\n *\n * @param {object} value The enum value JSON object.\n *\n * @returns {MetadataEnumValue} The newly created metadata enum value.\n *\n * @private\n * @experimental This feature is using part of the 3D Tiles spec that is not final and is subject to change without Cesium's standard deprecation policy.\n */\nMetadataEnumValue.fromJson = function (value) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.typeOf.object(\"value\", value);\n  //>>includeEnd('debug');\n\n  return new MetadataEnumValue({\n    value: value.value,\n    name: value.name,\n    description: value.description,\n    extras: value.extras,\n    extensions: value.extensions,\n  });\n};\n\nObject.defineProperties(MetadataEnumValue.prototype, {\n  /**\n   * The integer value.\n   *\n   * @memberof MetadataEnumValue.prototype\n   * @type {number}\n   * @readonly\n   */\n  value: {\n    get: function () {\n      return this._value;\n    },\n  },\n\n  /**\n   * The name of the enum value.\n   *\n   * @memberof MetadataEnumValue.prototype\n   * @type {string}\n   * @readonly\n   */\n  name: {\n    get: function () {\n      return this._name;\n    },\n  },\n\n  /**\n   * The description of the enum value.\n   *\n   * @memberof MetadataEnumValue.prototype\n   * @type {string}\n   * @readonly\n   */\n  description: {\n    get: function () {\n      return this._description;\n    },\n  },\n\n  /**\n   * Extra user-defined properties.\n   *\n   * @memberof MetadataEnumValue.prototype\n   * @type {*}\n   * @readonly\n   */\n  extras: {\n    get: function () {\n      return this._extras;\n    },\n  },\n\n  /**\n   * An object containing extensions.\n   *\n   * @memberof MetadataEnumValue.prototype\n   * @type {object}\n   * @readonly\n   */\n  extensions: {\n    get: function () {\n      return this._extensions;\n    },\n  },\n});\n\nexport default MetadataEnumValue;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,kBAAkB;AACpC,OAAOC,KAAK,MAAM,kBAAkB;AACpC,OAAOC,YAAY,MAAM,yBAAyB;;AAElD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,iBAAiBA,CAACC,OAAO,EAAE;EAClCA,OAAO,GAAGF,YAAY,CAACE,OAAO,EAAEF,YAAY,CAACG,YAAY,CAAC;EAC1D,MAAMC,KAAK,GAAGF,OAAO,CAACE,KAAK;EAC3B,MAAMC,IAAI,GAAGH,OAAO,CAACG,IAAI;;EAEzB;EACAP,KAAK,CAACQ,MAAM,CAACC,MAAM,CAAC,eAAe,EAAEH,KAAK,CAAC;EAC3CN,KAAK,CAACQ,MAAM,CAACE,MAAM,CAAC,cAAc,EAAEH,IAAI,CAAC;;EAEzC;;EAEA,IAAI,CAACI,MAAM,GAAGL,KAAK;EACnB,IAAI,CAACM,KAAK,GAAGL,IAAI;EACjB,IAAI,CAACM,YAAY,GAAGT,OAAO,CAACU,WAAW;EACvC,IAAI,CAACC,OAAO,GAAGd,KAAK,CAACG,OAAO,CAACY,MAAM,EAAE,IAAI,CAAC;EAC1C,IAAI,CAACC,WAAW,GAAGhB,KAAK,CAACG,OAAO,CAACc,UAAU,EAAE,IAAI,CAAC;AACpD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAf,iBAAiB,CAACgB,QAAQ,GAAG,UAAUb,KAAK,EAAE;EAC5C;EACAN,KAAK,CAACQ,MAAM,CAACY,MAAM,CAAC,OAAO,EAAEd,KAAK,CAAC;EACnC;;EAEA,OAAO,IAAIH,iBAAiB,CAAC;IAC3BG,KAAK,EAAEA,KAAK,CAACA,KAAK;IAClBC,IAAI,EAAED,KAAK,CAACC,IAAI;IAChBO,WAAW,EAAER,KAAK,CAACQ,WAAW;IAC9BE,MAAM,EAAEV,KAAK,CAACU,MAAM;IACpBE,UAAU,EAAEZ,KAAK,CAACY;EACpB,CAAC,CAAC;AACJ,CAAC;AAEDG,MAAM,CAACC,gBAAgB,CAACnB,iBAAiB,CAACoB,SAAS,EAAE;EACnD;AACF;AACA;AACA;AACA;AACA;AACA;EACEjB,KAAK,EAAE;IACLkB,GAAG,EAAE,SAAAA,CAAA,EAAY;MACf,OAAO,IAAI,CAACb,MAAM;IACpB;EACF,CAAC;EAED;AACF;AACA;AACA;AACA;AACA;AACA;EACEJ,IAAI,EAAE;IACJiB,GAAG,EAAE,SAAAA,CAAA,EAAY;MACf,OAAO,IAAI,CAACZ,KAAK;IACnB;EACF,CAAC;EAED;AACF;AACA;AACA;AACA;AACA;AACA;EACEE,WAAW,EAAE;IACXU,GAAG,EAAE,SAAAA,CAAA,EAAY;MACf,OAAO,IAAI,CAACX,YAAY;IAC1B;EACF,CAAC;EAED;AACF;AACA;AACA;AACA;AACA;AACA;EACEG,MAAM,EAAE;IACNQ,GAAG,EAAE,SAAAA,CAAA,EAAY;MACf,OAAO,IAAI,CAACT,OAAO;IACrB;EACF,CAAC;EAED;AACF;AACA;AACA;AACA;AACA;AACA;EACEG,UAAU,EAAE;IACVM,GAAG,EAAE,SAAAA,CAAA,EAAY;MACf,OAAO,IAAI,CAACP,WAAW;IACzB;EACF;AACF,CAAC,CAAC;AAEF,eAAed,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}