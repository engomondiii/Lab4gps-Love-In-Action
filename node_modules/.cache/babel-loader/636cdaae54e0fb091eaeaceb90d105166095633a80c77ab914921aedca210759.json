{"ast":null,"code":"/**\n * Information about metadata that is supposed to be picked.\n *\n * This is initialized in the `Scene.pickMetadata` function, and passed to\n * the `FrameState`. It is used to configure the draw commands that render\n * the metadata values of an object into the picking frame buffer. The\n * raw values are read from that buffer, and are then translated back into\n * proper metadata values in `Picking.pickMetadata`, using the structural\n * information about the metadata that is stored here.\n *\n * @private\n */\nfunction PickedMetadataInfo(schemaId, className, propertyName, classProperty, metadataProperty) {\n  /**\n   * The optional ID of the metadata schema\n   *\n   * @type {string|undefined}\n   */\n  this.schemaId = schemaId;\n  /**\n   * The name of the metadata class\n   *\n   * @type {string}\n   */\n  this.className = className;\n  /**\n   * The name of the metadata property\n   *\n   * @type {string}\n   */\n  this.propertyName = propertyName;\n\n  /**\n   * The the `MetadataClassProperty` that is described by this\n   * structure, as obtained from the `MetadataSchema`\n   *\n   * @type {MetadataClassProperty}\n   */\n  this.classProperty = classProperty;\n\n  /**\n   * The `PropertyTextureProperty` or `PropertyAttributeProperty` that\n   * is described by this structure, as obtained from the property texture\n   * or property attribute of the `StructuralMetadata` that matches the\n   * class name and property name.\n   *\n   * @type {object}\n   */\n  this.metadataProperty = metadataProperty;\n}\nexport default PickedMetadataInfo;","map":{"version":3,"names":["PickedMetadataInfo","schemaId","className","propertyName","classProperty","metadataProperty"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/engine/Source/Scene/PickedMetadataInfo.js"],"sourcesContent":["/**\n * Information about metadata that is supposed to be picked.\n *\n * This is initialized in the `Scene.pickMetadata` function, and passed to\n * the `FrameState`. It is used to configure the draw commands that render\n * the metadata values of an object into the picking frame buffer. The\n * raw values are read from that buffer, and are then translated back into\n * proper metadata values in `Picking.pickMetadata`, using the structural\n * information about the metadata that is stored here.\n *\n * @private\n */\nfunction PickedMetadataInfo(\n  schemaId,\n  className,\n  propertyName,\n  classProperty,\n  metadataProperty,\n) {\n  /**\n   * The optional ID of the metadata schema\n   *\n   * @type {string|undefined}\n   */\n  this.schemaId = schemaId;\n  /**\n   * The name of the metadata class\n   *\n   * @type {string}\n   */\n  this.className = className;\n  /**\n   * The name of the metadata property\n   *\n   * @type {string}\n   */\n  this.propertyName = propertyName;\n\n  /**\n   * The the `MetadataClassProperty` that is described by this\n   * structure, as obtained from the `MetadataSchema`\n   *\n   * @type {MetadataClassProperty}\n   */\n  this.classProperty = classProperty;\n\n  /**\n   * The `PropertyTextureProperty` or `PropertyAttributeProperty` that\n   * is described by this structure, as obtained from the property texture\n   * or property attribute of the `StructuralMetadata` that matches the\n   * class name and property name.\n   *\n   * @type {object}\n   */\n  this.metadataProperty = metadataProperty;\n}\nexport default PickedMetadataInfo;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,kBAAkBA,CACzBC,QAAQ,EACRC,SAAS,EACTC,YAAY,EACZC,aAAa,EACbC,gBAAgB,EAChB;EACA;AACF;AACA;AACA;AACA;EACE,IAAI,CAACJ,QAAQ,GAAGA,QAAQ;EACxB;AACF;AACA;AACA;AACA;EACE,IAAI,CAACC,SAAS,GAAGA,SAAS;EAC1B;AACF;AACA;AACA;AACA;EACE,IAAI,CAACC,YAAY,GAAGA,YAAY;;EAEhC;AACF;AACA;AACA;AACA;AACA;EACE,IAAI,CAACC,aAAa,GAAGA,aAAa;;EAElC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACE,IAAI,CAACC,gBAAgB,GAAGA,gBAAgB;AAC1C;AACA,eAAeL,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}