{"ast":null,"code":"import defined from \"./defined.js\";\nconst context2DsByWidthAndHeight = {};\n\n/**\n * Extract a pixel array from a loaded image.  Draws the image\n * into a canvas so it can read the pixels back.\n *\n * @function getImagePixels\n *\n * @param {HTMLImageElement|ImageBitmap} image The image to extract pixels from.\n * @param {number} width The width of the image. If not defined, then image.width is assigned.\n * @param {number} height The height of the image. If not defined, then image.height is assigned.\n * @returns {ImageData} The pixels of the image.\n */\nfunction getImagePixels(image, width, height) {\n  if (!defined(width)) {\n    width = image.width;\n  }\n  if (!defined(height)) {\n    height = image.height;\n  }\n  let context2DsByHeight = context2DsByWidthAndHeight[width];\n  if (!defined(context2DsByHeight)) {\n    context2DsByHeight = {};\n    context2DsByWidthAndHeight[width] = context2DsByHeight;\n  }\n  let context2d = context2DsByHeight[height];\n  if (!defined(context2d)) {\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = width;\n    canvas.height = height;\n    // Since we re-use contexts, use the willReadFrequently option – See https://html.spec.whatwg.org/multipage/canvas.html#concept-canvas-will-read-frequently\n    context2d = canvas.getContext(\"2d\", {\n      willReadFrequently: true\n    });\n    context2d.globalCompositeOperation = \"copy\";\n    context2DsByHeight[height] = context2d;\n  }\n  context2d.drawImage(image, 0, 0, width, height);\n  return context2d.getImageData(0, 0, width, height).data;\n}\nexport default getImagePixels;","map":{"version":3,"names":["defined","context2DsByWidthAndHeight","getImagePixels","image","width","height","context2DsByHeight","context2d","canvas","document","createElement","getContext","willReadFrequently","globalCompositeOperation","drawImage","getImageData","data"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/engine/Source/Core/getImagePixels.js"],"sourcesContent":["import defined from \"./defined.js\";\n\nconst context2DsByWidthAndHeight = {};\n\n/**\n * Extract a pixel array from a loaded image.  Draws the image\n * into a canvas so it can read the pixels back.\n *\n * @function getImagePixels\n *\n * @param {HTMLImageElement|ImageBitmap} image The image to extract pixels from.\n * @param {number} width The width of the image. If not defined, then image.width is assigned.\n * @param {number} height The height of the image. If not defined, then image.height is assigned.\n * @returns {ImageData} The pixels of the image.\n */\nfunction getImagePixels(image, width, height) {\n  if (!defined(width)) {\n    width = image.width;\n  }\n  if (!defined(height)) {\n    height = image.height;\n  }\n\n  let context2DsByHeight = context2DsByWidthAndHeight[width];\n  if (!defined(context2DsByHeight)) {\n    context2DsByHeight = {};\n    context2DsByWidthAndHeight[width] = context2DsByHeight;\n  }\n\n  let context2d = context2DsByHeight[height];\n  if (!defined(context2d)) {\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = width;\n    canvas.height = height;\n    // Since we re-use contexts, use the willReadFrequently option – See https://html.spec.whatwg.org/multipage/canvas.html#concept-canvas-will-read-frequently\n    context2d = canvas.getContext(\"2d\", { willReadFrequently: true });\n    context2d.globalCompositeOperation = \"copy\";\n    context2DsByHeight[height] = context2d;\n  }\n\n  context2d.drawImage(image, 0, 0, width, height);\n  return context2d.getImageData(0, 0, width, height).data;\n}\nexport default getImagePixels;\n"],"mappings":"AAAA,OAAOA,OAAO,MAAM,cAAc;AAElC,MAAMC,0BAA0B,GAAG,CAAC,CAAC;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,cAAcA,CAACC,KAAK,EAAEC,KAAK,EAAEC,MAAM,EAAE;EAC5C,IAAI,CAACL,OAAO,CAACI,KAAK,CAAC,EAAE;IACnBA,KAAK,GAAGD,KAAK,CAACC,KAAK;EACrB;EACA,IAAI,CAACJ,OAAO,CAACK,MAAM,CAAC,EAAE;IACpBA,MAAM,GAAGF,KAAK,CAACE,MAAM;EACvB;EAEA,IAAIC,kBAAkB,GAAGL,0BAA0B,CAACG,KAAK,CAAC;EAC1D,IAAI,CAACJ,OAAO,CAACM,kBAAkB,CAAC,EAAE;IAChCA,kBAAkB,GAAG,CAAC,CAAC;IACvBL,0BAA0B,CAACG,KAAK,CAAC,GAAGE,kBAAkB;EACxD;EAEA,IAAIC,SAAS,GAAGD,kBAAkB,CAACD,MAAM,CAAC;EAC1C,IAAI,CAACL,OAAO,CAACO,SAAS,CAAC,EAAE;IACvB,MAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;IAC/CF,MAAM,CAACJ,KAAK,GAAGA,KAAK;IACpBI,MAAM,CAACH,MAAM,GAAGA,MAAM;IACtB;IACAE,SAAS,GAAGC,MAAM,CAACG,UAAU,CAAC,IAAI,EAAE;MAAEC,kBAAkB,EAAE;IAAK,CAAC,CAAC;IACjEL,SAAS,CAACM,wBAAwB,GAAG,MAAM;IAC3CP,kBAAkB,CAACD,MAAM,CAAC,GAAGE,SAAS;EACxC;EAEAA,SAAS,CAACO,SAAS,CAACX,KAAK,EAAE,CAAC,EAAE,CAAC,EAAEC,KAAK,EAAEC,MAAM,CAAC;EAC/C,OAAOE,SAAS,CAACQ,YAAY,CAAC,CAAC,EAAE,CAAC,EAAEX,KAAK,EAAEC,MAAM,CAAC,CAACW,IAAI;AACzD;AACA,eAAed,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}