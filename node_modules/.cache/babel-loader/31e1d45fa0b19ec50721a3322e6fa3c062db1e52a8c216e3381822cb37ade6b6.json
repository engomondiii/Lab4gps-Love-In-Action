{"ast":null,"code":"import Check from \"../../../../Core/Check.js\";\n\n/**\n * @typedef {object} CorrelationGroup.ConstructorOptions\n *\n * Initialization options for the CorrelationGroup constructor\n *\n * @property {boolean[]} groupFlags Array of 3 booleans indicating if\n * parameters delta-x delta-y delta-z used in the correlation group\n * @property {Cartesian3} rotationThetas Rotations in milliradians\n * about X, Y, Z axes, respectively\n * @property {Spdcf[]} params Array of `Spdcf` (Strictly Positive-Definite\n * Correlation Function) parameters, for the U, V, W directions, respectively\n */\n\n/**\n * Metadata identifying parameters using same correlation modeling and\n * associated correlation parameters.\n *\n * This reflects the `correlationGroup` definition of the\n * {@link https://nsgreg.nga.mil/csmwg.jsp|NGA_gpm_local} glTF extension.\n *\n * @constructor\n * @param {CorrelationGroup.ConstructorOptions} options An object describing initialization options\n * @experimental This feature is not final and is subject to change without Cesium's standard deprecation policy.\n */\nfunction CorrelationGroup(options) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.typeOf.object(\"options.groupFlags\", options.groupFlags);\n  Check.typeOf.object(\"options.rotationThetas\", options.rotationThetas);\n  Check.typeOf.object(\"options.params\", options.params);\n  //>>includeEnd('debug');\n\n  this._groupFlags = options.groupFlags;\n  this._rotationThetas = options.rotationThetas;\n  this._params = options.params;\n}\nObject.defineProperties(CorrelationGroup.prototype, {\n  /**\n   * Array of 3 booleans indicating if parameters delta-x delta-y delta-z\n   * used in the correlation group\n   *\n   * @memberof CorrelationGroup.prototype\n   * @type {boolean[]}\n   * @readonly\n   */\n  groupFlags: {\n    get: function () {\n      return this._groupFlags;\n    }\n  },\n  /**\n   * Rotations in milliradians about X, Y, Z axes, respectively\n   *\n   * @memberof CorrelationGroup.prototype\n   * @type {Cartesian3}\n   * @readonly\n   */\n  rotationThetas: {\n    get: function () {\n      return this._rotationThetas;\n    }\n  },\n  /**\n   * Array of 3 sets of SPDCF parameters, for the U, V, W directions, respectively\n   *\n   * @memberof CorrelationGroup.prototype\n   * @type {Spdcf[]}\n   * @readonly\n   */\n  params: {\n    get: function () {\n      return this._params;\n    }\n  }\n});\nexport default CorrelationGroup;","map":{"version":3,"names":["Check","CorrelationGroup","options","typeOf","object","groupFlags","rotationThetas","params","_groupFlags","_rotationThetas","_params","Object","defineProperties","prototype","get"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/engine/Source/Scene/Model/Extensions/Gpm/CorrelationGroup.js"],"sourcesContent":["import Check from \"../../../../Core/Check.js\";\n\n/**\n * @typedef {object} CorrelationGroup.ConstructorOptions\n *\n * Initialization options for the CorrelationGroup constructor\n *\n * @property {boolean[]} groupFlags Array of 3 booleans indicating if\n * parameters delta-x delta-y delta-z used in the correlation group\n * @property {Cartesian3} rotationThetas Rotations in milliradians\n * about X, Y, Z axes, respectively\n * @property {Spdcf[]} params Array of `Spdcf` (Strictly Positive-Definite\n * Correlation Function) parameters, for the U, V, W directions, respectively\n */\n\n/**\n * Metadata identifying parameters using same correlation modeling and\n * associated correlation parameters.\n *\n * This reflects the `correlationGroup` definition of the\n * {@link https://nsgreg.nga.mil/csmwg.jsp|NGA_gpm_local} glTF extension.\n *\n * @constructor\n * @param {CorrelationGroup.ConstructorOptions} options An object describing initialization options\n * @experimental This feature is not final and is subject to change without Cesium's standard deprecation policy.\n */\nfunction CorrelationGroup(options) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.typeOf.object(\"options.groupFlags\", options.groupFlags);\n  Check.typeOf.object(\"options.rotationThetas\", options.rotationThetas);\n  Check.typeOf.object(\"options.params\", options.params);\n  //>>includeEnd('debug');\n\n  this._groupFlags = options.groupFlags;\n  this._rotationThetas = options.rotationThetas;\n  this._params = options.params;\n}\n\nObject.defineProperties(CorrelationGroup.prototype, {\n  /**\n   * Array of 3 booleans indicating if parameters delta-x delta-y delta-z\n   * used in the correlation group\n   *\n   * @memberof CorrelationGroup.prototype\n   * @type {boolean[]}\n   * @readonly\n   */\n  groupFlags: {\n    get: function () {\n      return this._groupFlags;\n    },\n  },\n\n  /**\n   * Rotations in milliradians about X, Y, Z axes, respectively\n   *\n   * @memberof CorrelationGroup.prototype\n   * @type {Cartesian3}\n   * @readonly\n   */\n  rotationThetas: {\n    get: function () {\n      return this._rotationThetas;\n    },\n  },\n\n  /**\n   * Array of 3 sets of SPDCF parameters, for the U, V, W directions, respectively\n   *\n   * @memberof CorrelationGroup.prototype\n   * @type {Spdcf[]}\n   * @readonly\n   */\n  params: {\n    get: function () {\n      return this._params;\n    },\n  },\n});\n\nexport default CorrelationGroup;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,2BAA2B;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,gBAAgBA,CAACC,OAAO,EAAE;EACjC;EACAF,KAAK,CAACG,MAAM,CAACC,MAAM,CAAC,oBAAoB,EAAEF,OAAO,CAACG,UAAU,CAAC;EAC7DL,KAAK,CAACG,MAAM,CAACC,MAAM,CAAC,wBAAwB,EAAEF,OAAO,CAACI,cAAc,CAAC;EACrEN,KAAK,CAACG,MAAM,CAACC,MAAM,CAAC,gBAAgB,EAAEF,OAAO,CAACK,MAAM,CAAC;EACrD;;EAEA,IAAI,CAACC,WAAW,GAAGN,OAAO,CAACG,UAAU;EACrC,IAAI,CAACI,eAAe,GAAGP,OAAO,CAACI,cAAc;EAC7C,IAAI,CAACI,OAAO,GAAGR,OAAO,CAACK,MAAM;AAC/B;AAEAI,MAAM,CAACC,gBAAgB,CAACX,gBAAgB,CAACY,SAAS,EAAE;EAClD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACER,UAAU,EAAE;IACVS,GAAG,EAAE,SAAAA,CAAA,EAAY;MACf,OAAO,IAAI,CAACN,WAAW;IACzB;EACF,CAAC;EAED;AACF;AACA;AACA;AACA;AACA;AACA;EACEF,cAAc,EAAE;IACdQ,GAAG,EAAE,SAAAA,CAAA,EAAY;MACf,OAAO,IAAI,CAACL,eAAe;IAC7B;EACF,CAAC;EAED;AACF;AACA;AACA;AACA;AACA;AACA;EACEF,MAAM,EAAE;IACNO,GAAG,EAAE,SAAAA,CAAA,EAAY;MACf,OAAO,IAAI,CAACJ,OAAO;IACrB;EACF;AACF,CAAC,CAAC;AAEF,eAAeT,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}