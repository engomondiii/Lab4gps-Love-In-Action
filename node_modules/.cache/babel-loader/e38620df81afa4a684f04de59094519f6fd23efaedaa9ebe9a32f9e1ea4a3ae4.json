{"ast":null,"code":"import defined from \"./defined.js\";\n\n/**\n * Describes a compressed texture and contains a compressed texture buffer.\n * @alias CompressedTextureBuffer\n * @constructor\n *\n * @param {PixelFormat} internalFormat The pixel format of the compressed texture.\n * @param {PixelDatatype} pixelDatatype The pixel datatype of the compressed texture.\n * @param {number} width The width of the texture.\n * @param {number} height The height of the texture.\n * @param {Uint8Array} buffer The compressed texture buffer.\n */\nfunction CompressedTextureBuffer(internalFormat, pixelDatatype, width, height, buffer) {\n  this._format = internalFormat;\n  this._datatype = pixelDatatype;\n  this._width = width;\n  this._height = height;\n  this._buffer = buffer;\n}\nObject.defineProperties(CompressedTextureBuffer.prototype, {\n  /**\n   * The format of the compressed texture.\n   * @type {PixelFormat}\n   * @readonly\n   * @memberof CompressedTextureBuffer.prototype\n   */\n  internalFormat: {\n    get: function () {\n      return this._format;\n    }\n  },\n  /**\n   * The datatype of the compressed texture.\n   * @type {PixelDatatype}\n   * @readonly\n   * @memberof CompressedTextureBuffer.prototype\n   */\n  pixelDatatype: {\n    get: function () {\n      return this._datatype;\n    }\n  },\n  /**\n   * The width of the texture.\n   * @type {number}\n   * @readonly\n   * @memberof CompressedTextureBuffer.prototype\n   */\n  width: {\n    get: function () {\n      return this._width;\n    }\n  },\n  /**\n   * The height of the texture.\n   * @type {number}\n   * @readonly\n   * @memberof CompressedTextureBuffer.prototype\n   */\n  height: {\n    get: function () {\n      return this._height;\n    }\n  },\n  /**\n   * The compressed texture buffer.\n   * @type {Uint8Array}\n   * @readonly\n   * @memberof CompressedTextureBuffer.prototype\n   */\n  bufferView: {\n    get: function () {\n      return this._buffer;\n    }\n  },\n  /**\n   * The compressed texture buffer. Alias for bufferView.\n   * @type {Uint8Array}\n   * @readonly\n   * @memberof CompressedTextureBuffer.prototype\n   */\n  arrayBufferView: {\n    get: function () {\n      return this._buffer;\n    }\n  }\n});\n\n/**\n * Creates a shallow clone of a compressed texture buffer.\n *\n * @param {CompressedTextureBuffer} object The compressed texture buffer to be cloned.\n * @return {CompressedTextureBuffer} A shallow clone of the compressed texture buffer.\n */\nCompressedTextureBuffer.clone = function (object) {\n  if (!defined(object)) {\n    return undefined;\n  }\n  return new CompressedTextureBuffer(object._format, object._datatype, object._width, object._height, object._buffer);\n};\n\n/**\n * Creates a shallow clone of this compressed texture buffer.\n *\n * @return {CompressedTextureBuffer} A shallow clone of the compressed texture buffer.\n */\nCompressedTextureBuffer.prototype.clone = function () {\n  return CompressedTextureBuffer.clone(this);\n};\nexport default CompressedTextureBuffer;","map":{"version":3,"names":["defined","CompressedTextureBuffer","internalFormat","pixelDatatype","width","height","buffer","_format","_datatype","_width","_height","_buffer","Object","defineProperties","prototype","get","bufferView","arrayBufferView","clone","object","undefined"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/engine/Source/Core/CompressedTextureBuffer.js"],"sourcesContent":["import defined from \"./defined.js\";\n\n/**\n * Describes a compressed texture and contains a compressed texture buffer.\n * @alias CompressedTextureBuffer\n * @constructor\n *\n * @param {PixelFormat} internalFormat The pixel format of the compressed texture.\n * @param {PixelDatatype} pixelDatatype The pixel datatype of the compressed texture.\n * @param {number} width The width of the texture.\n * @param {number} height The height of the texture.\n * @param {Uint8Array} buffer The compressed texture buffer.\n */\nfunction CompressedTextureBuffer(\n  internalFormat,\n  pixelDatatype,\n  width,\n  height,\n  buffer,\n) {\n  this._format = internalFormat;\n  this._datatype = pixelDatatype;\n  this._width = width;\n  this._height = height;\n  this._buffer = buffer;\n}\n\nObject.defineProperties(CompressedTextureBuffer.prototype, {\n  /**\n   * The format of the compressed texture.\n   * @type {PixelFormat}\n   * @readonly\n   * @memberof CompressedTextureBuffer.prototype\n   */\n  internalFormat: {\n    get: function () {\n      return this._format;\n    },\n  },\n  /**\n   * The datatype of the compressed texture.\n   * @type {PixelDatatype}\n   * @readonly\n   * @memberof CompressedTextureBuffer.prototype\n   */\n  pixelDatatype: {\n    get: function () {\n      return this._datatype;\n    },\n  },\n  /**\n   * The width of the texture.\n   * @type {number}\n   * @readonly\n   * @memberof CompressedTextureBuffer.prototype\n   */\n  width: {\n    get: function () {\n      return this._width;\n    },\n  },\n  /**\n   * The height of the texture.\n   * @type {number}\n   * @readonly\n   * @memberof CompressedTextureBuffer.prototype\n   */\n  height: {\n    get: function () {\n      return this._height;\n    },\n  },\n  /**\n   * The compressed texture buffer.\n   * @type {Uint8Array}\n   * @readonly\n   * @memberof CompressedTextureBuffer.prototype\n   */\n  bufferView: {\n    get: function () {\n      return this._buffer;\n    },\n  },\n  /**\n   * The compressed texture buffer. Alias for bufferView.\n   * @type {Uint8Array}\n   * @readonly\n   * @memberof CompressedTextureBuffer.prototype\n   */\n  arrayBufferView: {\n    get: function () {\n      return this._buffer;\n    },\n  },\n});\n\n/**\n * Creates a shallow clone of a compressed texture buffer.\n *\n * @param {CompressedTextureBuffer} object The compressed texture buffer to be cloned.\n * @return {CompressedTextureBuffer} A shallow clone of the compressed texture buffer.\n */\nCompressedTextureBuffer.clone = function (object) {\n  if (!defined(object)) {\n    return undefined;\n  }\n\n  return new CompressedTextureBuffer(\n    object._format,\n    object._datatype,\n    object._width,\n    object._height,\n    object._buffer,\n  );\n};\n\n/**\n * Creates a shallow clone of this compressed texture buffer.\n *\n * @return {CompressedTextureBuffer} A shallow clone of the compressed texture buffer.\n */\nCompressedTextureBuffer.prototype.clone = function () {\n  return CompressedTextureBuffer.clone(this);\n};\nexport default CompressedTextureBuffer;\n"],"mappings":"AAAA,OAAOA,OAAO,MAAM,cAAc;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,uBAAuBA,CAC9BC,cAAc,EACdC,aAAa,EACbC,KAAK,EACLC,MAAM,EACNC,MAAM,EACN;EACA,IAAI,CAACC,OAAO,GAAGL,cAAc;EAC7B,IAAI,CAACM,SAAS,GAAGL,aAAa;EAC9B,IAAI,CAACM,MAAM,GAAGL,KAAK;EACnB,IAAI,CAACM,OAAO,GAAGL,MAAM;EACrB,IAAI,CAACM,OAAO,GAAGL,MAAM;AACvB;AAEAM,MAAM,CAACC,gBAAgB,CAACZ,uBAAuB,CAACa,SAAS,EAAE;EACzD;AACF;AACA;AACA;AACA;AACA;EACEZ,cAAc,EAAE;IACda,GAAG,EAAE,SAAAA,CAAA,EAAY;MACf,OAAO,IAAI,CAACR,OAAO;IACrB;EACF,CAAC;EACD;AACF;AACA;AACA;AACA;AACA;EACEJ,aAAa,EAAE;IACbY,GAAG,EAAE,SAAAA,CAAA,EAAY;MACf,OAAO,IAAI,CAACP,SAAS;IACvB;EACF,CAAC;EACD;AACF;AACA;AACA;AACA;AACA;EACEJ,KAAK,EAAE;IACLW,GAAG,EAAE,SAAAA,CAAA,EAAY;MACf,OAAO,IAAI,CAACN,MAAM;IACpB;EACF,CAAC;EACD;AACF;AACA;AACA;AACA;AACA;EACEJ,MAAM,EAAE;IACNU,GAAG,EAAE,SAAAA,CAAA,EAAY;MACf,OAAO,IAAI,CAACL,OAAO;IACrB;EACF,CAAC;EACD;AACF;AACA;AACA;AACA;AACA;EACEM,UAAU,EAAE;IACVD,GAAG,EAAE,SAAAA,CAAA,EAAY;MACf,OAAO,IAAI,CAACJ,OAAO;IACrB;EACF,CAAC;EACD;AACF;AACA;AACA;AACA;AACA;EACEM,eAAe,EAAE;IACfF,GAAG,EAAE,SAAAA,CAAA,EAAY;MACf,OAAO,IAAI,CAACJ,OAAO;IACrB;EACF;AACF,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACAV,uBAAuB,CAACiB,KAAK,GAAG,UAAUC,MAAM,EAAE;EAChD,IAAI,CAACnB,OAAO,CAACmB,MAAM,CAAC,EAAE;IACpB,OAAOC,SAAS;EAClB;EAEA,OAAO,IAAInB,uBAAuB,CAChCkB,MAAM,CAACZ,OAAO,EACdY,MAAM,CAACX,SAAS,EAChBW,MAAM,CAACV,MAAM,EACbU,MAAM,CAACT,OAAO,EACdS,MAAM,CAACR,OACT,CAAC;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA;AACAV,uBAAuB,CAACa,SAAS,CAACI,KAAK,GAAG,YAAY;EACpD,OAAOjB,uBAAuB,CAACiB,KAAK,CAAC,IAAI,CAAC;AAC5C,CAAC;AACD,eAAejB,uBAAuB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}