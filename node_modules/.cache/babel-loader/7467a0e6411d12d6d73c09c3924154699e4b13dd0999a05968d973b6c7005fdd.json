{"ast":null,"code":"import ComponentDatatype from \"../Core/ComponentDatatype.js\";\nimport defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\n\n/**\n * @private\n */\nfunction Cesium3DTileFeatureTable(featureTableJson, featureTableBinary) {\n  this.json = featureTableJson;\n  this.buffer = featureTableBinary;\n  this._cachedTypedArrays = {};\n  this.featuresLength = 0;\n}\nfunction getTypedArrayFromBinary(featureTable, semantic, componentType, componentLength, count, byteOffset) {\n  const cachedTypedArrays = featureTable._cachedTypedArrays;\n  let typedArray = cachedTypedArrays[semantic];\n  if (!defined(typedArray)) {\n    typedArray = ComponentDatatype.createArrayBufferView(componentType, featureTable.buffer.buffer, featureTable.buffer.byteOffset + byteOffset, count * componentLength);\n    cachedTypedArrays[semantic] = typedArray;\n  }\n  return typedArray;\n}\nfunction getTypedArrayFromArray(featureTable, semantic, componentType, array) {\n  const cachedTypedArrays = featureTable._cachedTypedArrays;\n  let typedArray = cachedTypedArrays[semantic];\n  if (!defined(typedArray)) {\n    typedArray = ComponentDatatype.createTypedArray(componentType, array);\n    cachedTypedArrays[semantic] = typedArray;\n  }\n  return typedArray;\n}\nCesium3DTileFeatureTable.prototype.getGlobalProperty = function (semantic, componentType, componentLength) {\n  const jsonValue = this.json[semantic];\n  if (!defined(jsonValue)) {\n    return undefined;\n  }\n  if (defined(jsonValue.byteOffset)) {\n    componentType = defaultValue(componentType, ComponentDatatype.UNSIGNED_INT);\n    componentLength = defaultValue(componentLength, 1);\n    return getTypedArrayFromBinary(this, semantic, componentType, componentLength, 1, jsonValue.byteOffset);\n  }\n  return jsonValue;\n};\nCesium3DTileFeatureTable.prototype.hasProperty = function (semantic) {\n  return defined(this.json[semantic]);\n};\nCesium3DTileFeatureTable.prototype.getPropertyArray = function (semantic, componentType, componentLength) {\n  const jsonValue = this.json[semantic];\n  if (!defined(jsonValue)) {\n    return undefined;\n  }\n  if (defined(jsonValue.byteOffset)) {\n    if (defined(jsonValue.componentType)) {\n      componentType = ComponentDatatype.fromName(jsonValue.componentType);\n    }\n    return getTypedArrayFromBinary(this, semantic, componentType, componentLength, this.featuresLength, jsonValue.byteOffset);\n  }\n  return getTypedArrayFromArray(this, semantic, componentType, jsonValue);\n};\nCesium3DTileFeatureTable.prototype.getProperty = function (semantic, componentType, componentLength, featureId, result) {\n  const jsonValue = this.json[semantic];\n  if (!defined(jsonValue)) {\n    return undefined;\n  }\n  const typedArray = this.getPropertyArray(semantic, componentType, componentLength);\n  if (componentLength === 1) {\n    return typedArray[featureId];\n  }\n  for (let i = 0; i < componentLength; ++i) {\n    result[i] = typedArray[componentLength * featureId + i];\n  }\n  return result;\n};\nexport default Cesium3DTileFeatureTable;","map":{"version":3,"names":["ComponentDatatype","defaultValue","defined","Cesium3DTileFeatureTable","featureTableJson","featureTableBinary","json","buffer","_cachedTypedArrays","featuresLength","getTypedArrayFromBinary","featureTable","semantic","componentType","componentLength","count","byteOffset","cachedTypedArrays","typedArray","createArrayBufferView","getTypedArrayFromArray","array","createTypedArray","prototype","getGlobalProperty","jsonValue","undefined","UNSIGNED_INT","hasProperty","getPropertyArray","fromName","getProperty","featureId","result","i"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/engine/Source/Scene/Cesium3DTileFeatureTable.js"],"sourcesContent":["import ComponentDatatype from \"../Core/ComponentDatatype.js\";\nimport defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\n\n/**\n * @private\n */\nfunction Cesium3DTileFeatureTable(featureTableJson, featureTableBinary) {\n  this.json = featureTableJson;\n  this.buffer = featureTableBinary;\n  this._cachedTypedArrays = {};\n  this.featuresLength = 0;\n}\n\nfunction getTypedArrayFromBinary(\n  featureTable,\n  semantic,\n  componentType,\n  componentLength,\n  count,\n  byteOffset,\n) {\n  const cachedTypedArrays = featureTable._cachedTypedArrays;\n  let typedArray = cachedTypedArrays[semantic];\n  if (!defined(typedArray)) {\n    typedArray = ComponentDatatype.createArrayBufferView(\n      componentType,\n      featureTable.buffer.buffer,\n      featureTable.buffer.byteOffset + byteOffset,\n      count * componentLength,\n    );\n    cachedTypedArrays[semantic] = typedArray;\n  }\n  return typedArray;\n}\n\nfunction getTypedArrayFromArray(featureTable, semantic, componentType, array) {\n  const cachedTypedArrays = featureTable._cachedTypedArrays;\n  let typedArray = cachedTypedArrays[semantic];\n  if (!defined(typedArray)) {\n    typedArray = ComponentDatatype.createTypedArray(componentType, array);\n    cachedTypedArrays[semantic] = typedArray;\n  }\n  return typedArray;\n}\n\nCesium3DTileFeatureTable.prototype.getGlobalProperty = function (\n  semantic,\n  componentType,\n  componentLength,\n) {\n  const jsonValue = this.json[semantic];\n  if (!defined(jsonValue)) {\n    return undefined;\n  }\n\n  if (defined(jsonValue.byteOffset)) {\n    componentType = defaultValue(componentType, ComponentDatatype.UNSIGNED_INT);\n    componentLength = defaultValue(componentLength, 1);\n    return getTypedArrayFromBinary(\n      this,\n      semantic,\n      componentType,\n      componentLength,\n      1,\n      jsonValue.byteOffset,\n    );\n  }\n\n  return jsonValue;\n};\n\nCesium3DTileFeatureTable.prototype.hasProperty = function (semantic) {\n  return defined(this.json[semantic]);\n};\n\nCesium3DTileFeatureTable.prototype.getPropertyArray = function (\n  semantic,\n  componentType,\n  componentLength,\n) {\n  const jsonValue = this.json[semantic];\n  if (!defined(jsonValue)) {\n    return undefined;\n  }\n\n  if (defined(jsonValue.byteOffset)) {\n    if (defined(jsonValue.componentType)) {\n      componentType = ComponentDatatype.fromName(jsonValue.componentType);\n    }\n    return getTypedArrayFromBinary(\n      this,\n      semantic,\n      componentType,\n      componentLength,\n      this.featuresLength,\n      jsonValue.byteOffset,\n    );\n  }\n\n  return getTypedArrayFromArray(this, semantic, componentType, jsonValue);\n};\n\nCesium3DTileFeatureTable.prototype.getProperty = function (\n  semantic,\n  componentType,\n  componentLength,\n  featureId,\n  result,\n) {\n  const jsonValue = this.json[semantic];\n  if (!defined(jsonValue)) {\n    return undefined;\n  }\n\n  const typedArray = this.getPropertyArray(\n    semantic,\n    componentType,\n    componentLength,\n  );\n\n  if (componentLength === 1) {\n    return typedArray[featureId];\n  }\n\n  for (let i = 0; i < componentLength; ++i) {\n    result[i] = typedArray[componentLength * featureId + i];\n  }\n\n  return result;\n};\nexport default Cesium3DTileFeatureTable;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}