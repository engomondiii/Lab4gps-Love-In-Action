{"ast":null,"code":"import Check from \"../../Core/Check.js\";\nimport ModelAlphaOptions from \"./ModelAlphaOptions.js\";\nimport RenderState from \"../../Renderer/RenderState.js\";\nimport ShaderBuilder from \"../../Renderer/ShaderBuilder.js\";\nimport DepthFunction from \"../DepthFunction.js\";\n\n/**\n * Model render resources are for setting details that are consistent across\n * the entire model.\n *\n * @constructor\n * @param {Model} model The model that will be rendered\n *\n * @private\n */\nfunction ModelRenderResources(model) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.typeOf.object(\"model\", model);\n  //>>includeEnd('debug');\n\n  /**\n   * An object used to build a shader incrementally. Each pipeline stage\n   * may add lines of shader code to this object.\n   *\n   * @type {ShaderBuilder}\n   * @readonly\n   *\n   * @private\n   */\n  this.shaderBuilder = new ShaderBuilder();\n\n  /**\n   * A reference to the model.\n   *\n   * @type {Model}\n   * @readonly\n   *\n   * @private\n   */\n  this.model = model;\n\n  /**\n   * A dictionary mapping uniform name to functions that return the uniform\n   * values.\n   *\n   * @type {Object<string, Function>}\n   * @readonly\n   *\n   * @private\n   */\n  this.uniformMap = {};\n\n  /**\n   * Options for configuring the alpha stage such as pass and alpha cutoff.\n   *\n   * @type {ModelAlphaOptions}\n   * @readonly\n   *\n   * @private\n   */\n  this.alphaOptions = new ModelAlphaOptions();\n\n  /**\n   * An object storing options for creating a {@link RenderState}.\n   * The pipeline stages simply set the options, the render state is created\n   * when the {@link DrawCommand} is constructed.\n   *\n   * @type {object}\n   * @readonly\n   *\n   * @private\n   */\n  this.renderStateOptions = RenderState.getState(RenderState.fromCache({\n    depthTest: {\n      enabled: true,\n      func: DepthFunction.LESS_OR_EQUAL\n    }\n  }));\n\n  /**\n   * Whether the model has a silhouette. This value indicates what draw commands\n   * are needed and is set by ModelSilhouettePipelineStage.\n   *\n   * @type {boolean}\n   * @default false\n   *\n   * @private\n   */\n  this.hasSilhouette = false;\n\n  /**\n   * Whether the model is part of a tileset that uses the skipLevelOfDetail\n   * optimization. This value indicates what draw commands are needed and\n   * is set by TilesetPipelineStage.\n   *\n   * @type {boolean}\n   * @default false\n   *\n   * @private\n   */\n  this.hasSkipLevelOfDetail = false;\n}\nexport default ModelRenderResources;","map":{"version":3,"names":["Check","ModelAlphaOptions","RenderState","ShaderBuilder","DepthFunction","ModelRenderResources","model","typeOf","object","shaderBuilder","uniformMap","alphaOptions","renderStateOptions","getState","fromCache","depthTest","enabled","func","LESS_OR_EQUAL","hasSilhouette","hasSkipLevelOfDetail"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/engine/Source/Scene/Model/ModelRenderResources.js"],"sourcesContent":["import Check from \"../../Core/Check.js\";\nimport ModelAlphaOptions from \"./ModelAlphaOptions.js\";\nimport RenderState from \"../../Renderer/RenderState.js\";\nimport ShaderBuilder from \"../../Renderer/ShaderBuilder.js\";\nimport DepthFunction from \"../DepthFunction.js\";\n\n/**\n * Model render resources are for setting details that are consistent across\n * the entire model.\n *\n * @constructor\n * @param {Model} model The model that will be rendered\n *\n * @private\n */\nfunction ModelRenderResources(model) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.typeOf.object(\"model\", model);\n  //>>includeEnd('debug');\n\n  /**\n   * An object used to build a shader incrementally. Each pipeline stage\n   * may add lines of shader code to this object.\n   *\n   * @type {ShaderBuilder}\n   * @readonly\n   *\n   * @private\n   */\n  this.shaderBuilder = new ShaderBuilder();\n\n  /**\n   * A reference to the model.\n   *\n   * @type {Model}\n   * @readonly\n   *\n   * @private\n   */\n  this.model = model;\n\n  /**\n   * A dictionary mapping uniform name to functions that return the uniform\n   * values.\n   *\n   * @type {Object<string, Function>}\n   * @readonly\n   *\n   * @private\n   */\n  this.uniformMap = {};\n\n  /**\n   * Options for configuring the alpha stage such as pass and alpha cutoff.\n   *\n   * @type {ModelAlphaOptions}\n   * @readonly\n   *\n   * @private\n   */\n  this.alphaOptions = new ModelAlphaOptions();\n\n  /**\n   * An object storing options for creating a {@link RenderState}.\n   * The pipeline stages simply set the options, the render state is created\n   * when the {@link DrawCommand} is constructed.\n   *\n   * @type {object}\n   * @readonly\n   *\n   * @private\n   */\n  this.renderStateOptions = RenderState.getState(\n    RenderState.fromCache({\n      depthTest: {\n        enabled: true,\n        func: DepthFunction.LESS_OR_EQUAL,\n      },\n    }),\n  );\n\n  /**\n   * Whether the model has a silhouette. This value indicates what draw commands\n   * are needed and is set by ModelSilhouettePipelineStage.\n   *\n   * @type {boolean}\n   * @default false\n   *\n   * @private\n   */\n  this.hasSilhouette = false;\n\n  /**\n   * Whether the model is part of a tileset that uses the skipLevelOfDetail\n   * optimization. This value indicates what draw commands are needed and\n   * is set by TilesetPipelineStage.\n   *\n   * @type {boolean}\n   * @default false\n   *\n   * @private\n   */\n  this.hasSkipLevelOfDetail = false;\n}\n\nexport default ModelRenderResources;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,qBAAqB;AACvC,OAAOC,iBAAiB,MAAM,wBAAwB;AACtD,OAAOC,WAAW,MAAM,+BAA+B;AACvD,OAAOC,aAAa,MAAM,iCAAiC;AAC3D,OAAOC,aAAa,MAAM,qBAAqB;;AAE/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,oBAAoBA,CAACC,KAAK,EAAE;EACnC;EACAN,KAAK,CAACO,MAAM,CAACC,MAAM,CAAC,OAAO,EAAEF,KAAK,CAAC;EACnC;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,IAAI,CAACG,aAAa,GAAG,IAAIN,aAAa,CAAC,CAAC;;EAExC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACE,IAAI,CAACG,KAAK,GAAGA,KAAK;;EAElB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,IAAI,CAACI,UAAU,GAAG,CAAC,CAAC;;EAEpB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACE,IAAI,CAACC,YAAY,GAAG,IAAIV,iBAAiB,CAAC,CAAC;;EAE3C;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,IAAI,CAACW,kBAAkB,GAAGV,WAAW,CAACW,QAAQ,CAC5CX,WAAW,CAACY,SAAS,CAAC;IACpBC,SAAS,EAAE;MACTC,OAAO,EAAE,IAAI;MACbC,IAAI,EAAEb,aAAa,CAACc;IACtB;EACF,CAAC,CACH,CAAC;;EAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,IAAI,CAACC,aAAa,GAAG,KAAK;;EAE1B;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,IAAI,CAACC,oBAAoB,GAAG,KAAK;AACnC;AAEA,eAAef,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}