{"ast":null,"code":"import buildModuleUrl from \"./buildModuleUrl.js\";\nimport defaultValue from \"./defaultValue.js\";\nimport defined from \"./defined.js\";\nimport Iau2006XysSample from \"./Iau2006XysSample.js\";\nimport JulianDate from \"./JulianDate.js\";\nimport Resource from \"./Resource.js\";\nimport TimeStandard from \"./TimeStandard.js\";\n\n/**\n * A set of IAU2006 XYS data that is used to evaluate the transformation between the International\n * Celestial Reference Frame (ICRF) and the International Terrestrial Reference Frame (ITRF).\n *\n * @alias Iau2006XysData\n * @constructor\n *\n * @param {object} [options] Object with the following properties:\n * @param {Resource|string} [options.xysFileUrlTemplate='Assets/IAU2006_XYS/IAU2006_XYS_{0}.json'] A template URL for obtaining the XYS data.  In the template,\n *                 `{0}` will be replaced with the file index.\n * @param {number} [options.interpolationOrder=9] The order of interpolation to perform on the XYS data.\n * @param {number} [options.sampleZeroJulianEphemerisDate=2442396.5] The Julian ephemeris date (JED) of the\n *                 first XYS sample.\n * @param {number} [options.stepSizeDays=1.0] The step size, in days, between successive XYS samples.\n * @param {number} [options.samplesPerXysFile=1000] The number of samples in each XYS file.\n * @param {number} [options.totalSamples=27426] The total number of samples in all XYS files.\n *\n * @private\n */\nfunction Iau2006XysData(options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n  this._xysFileUrlTemplate = Resource.createIfNeeded(options.xysFileUrlTemplate);\n  this._interpolationOrder = defaultValue(options.interpolationOrder, 9);\n  this._sampleZeroJulianEphemerisDate = defaultValue(options.sampleZeroJulianEphemerisDate, 2442396.5);\n  this._sampleZeroDateTT = new JulianDate(this._sampleZeroJulianEphemerisDate, 0.0, TimeStandard.TAI);\n  this._stepSizeDays = defaultValue(options.stepSizeDays, 1.0);\n  this._samplesPerXysFile = defaultValue(options.samplesPerXysFile, 1000);\n  this._totalSamples = defaultValue(options.totalSamples, 27426);\n  this._samples = new Array(this._totalSamples * 3);\n  this._chunkDownloadsInProgress = [];\n  const order = this._interpolationOrder;\n\n  // Compute denominators and X values for interpolation.\n  const denom = this._denominators = new Array(order + 1);\n  const xTable = this._xTable = new Array(order + 1);\n  const stepN = Math.pow(this._stepSizeDays, order);\n  for (let i = 0; i <= order; ++i) {\n    denom[i] = stepN;\n    xTable[i] = i * this._stepSizeDays;\n    for (let j = 0; j <= order; ++j) {\n      if (j !== i) {\n        denom[i] *= i - j;\n      }\n    }\n    denom[i] = 1.0 / denom[i];\n  }\n\n  // Allocate scratch arrays for interpolation.\n  this._work = new Array(order + 1);\n  this._coef = new Array(order + 1);\n}\nconst julianDateScratch = new JulianDate(0, 0.0, TimeStandard.TAI);\nfunction getDaysSinceEpoch(xys, dayTT, secondTT) {\n  const dateTT = julianDateScratch;\n  dateTT.dayNumber = dayTT;\n  dateTT.secondsOfDay = secondTT;\n  return JulianDate.daysDifference(dateTT, xys._sampleZeroDateTT);\n}\n\n/**\n * Preloads XYS data for a specified date range.\n *\n * @param {number} startDayTT The Julian day number of the beginning of the interval to preload, expressed in\n *                 the Terrestrial Time (TT) time standard.\n * @param {number} startSecondTT The seconds past noon of the beginning of the interval to preload, expressed in\n *                 the Terrestrial Time (TT) time standard.\n * @param {number} stopDayTT The Julian day number of the end of the interval to preload, expressed in\n *                 the Terrestrial Time (TT) time standard.\n * @param {number} stopSecondTT The seconds past noon of the end of the interval to preload, expressed in\n *                 the Terrestrial Time (TT) time standard.\n * @returns {Promise<void>} A promise that, when resolved, indicates that the requested interval has been\n *                    preloaded.\n */\nIau2006XysData.prototype.preload = function (startDayTT, startSecondTT, stopDayTT, stopSecondTT) {\n  const startDaysSinceEpoch = getDaysSinceEpoch(this, startDayTT, startSecondTT);\n  const stopDaysSinceEpoch = getDaysSinceEpoch(this, stopDayTT, stopSecondTT);\n  let startIndex = startDaysSinceEpoch / this._stepSizeDays - this._interpolationOrder / 2 | 0;\n  if (startIndex < 0) {\n    startIndex = 0;\n  }\n  let stopIndex = stopDaysSinceEpoch / this._stepSizeDays - this._interpolationOrder / 2 | 0 + this._interpolationOrder;\n  if (stopIndex >= this._totalSamples) {\n    stopIndex = this._totalSamples - 1;\n  }\n  const startChunk = startIndex / this._samplesPerXysFile | 0;\n  const stopChunk = stopIndex / this._samplesPerXysFile | 0;\n  const promises = [];\n  for (let i = startChunk; i <= stopChunk; ++i) {\n    promises.push(requestXysChunk(this, i));\n  }\n  return Promise.all(promises);\n};\n\n/**\n * Computes the XYS values for a given date by interpolating.  If the required data is not yet downloaded,\n * this method will return undefined.\n *\n * @param {number} dayTT The Julian day number for which to compute the XYS value, expressed in\n *                 the Terrestrial Time (TT) time standard.\n * @param {number} secondTT The seconds past noon of the date for which to compute the XYS value, expressed in\n *                 the Terrestrial Time (TT) time standard.\n * @param {Iau2006XysSample} [result] The instance to which to copy the interpolated result.  If this parameter\n *                           is undefined, a new instance is allocated and returned.\n * @returns {Iau2006XysSample} The interpolated XYS values, or undefined if the required data for this\n *                             computation has not yet been downloaded.\n *\n * @see Iau2006XysData#preload\n */\nIau2006XysData.prototype.computeXysRadians = function (dayTT, secondTT, result) {\n  const daysSinceEpoch = getDaysSinceEpoch(this, dayTT, secondTT);\n  if (daysSinceEpoch < 0.0) {\n    // Can't evaluate prior to the epoch of the data.\n    return undefined;\n  }\n  const centerIndex = daysSinceEpoch / this._stepSizeDays | 0;\n  if (centerIndex >= this._totalSamples) {\n    // Can't evaluate after the last sample in the data.\n    return undefined;\n  }\n  const degree = this._interpolationOrder;\n  let firstIndex = centerIndex - (degree / 2 | 0);\n  if (firstIndex < 0) {\n    firstIndex = 0;\n  }\n  let lastIndex = firstIndex + degree;\n  if (lastIndex >= this._totalSamples) {\n    lastIndex = this._totalSamples - 1;\n    firstIndex = lastIndex - degree;\n    if (firstIndex < 0) {\n      firstIndex = 0;\n    }\n  }\n\n  // Are all the samples we need present?\n  // We can assume so if the first and last are present\n  let isDataMissing = false;\n  const samples = this._samples;\n  if (!defined(samples[firstIndex * 3])) {\n    requestXysChunk(this, firstIndex / this._samplesPerXysFile | 0);\n    isDataMissing = true;\n  }\n  if (!defined(samples[lastIndex * 3])) {\n    requestXysChunk(this, lastIndex / this._samplesPerXysFile | 0);\n    isDataMissing = true;\n  }\n  if (isDataMissing) {\n    return undefined;\n  }\n  if (!defined(result)) {\n    result = new Iau2006XysSample(0.0, 0.0, 0.0);\n  } else {\n    result.x = 0.0;\n    result.y = 0.0;\n    result.s = 0.0;\n  }\n  const x = daysSinceEpoch - firstIndex * this._stepSizeDays;\n  const work = this._work;\n  const denom = this._denominators;\n  const coef = this._coef;\n  const xTable = this._xTable;\n  let i, j;\n  for (i = 0; i <= degree; ++i) {\n    work[i] = x - xTable[i];\n  }\n  for (i = 0; i <= degree; ++i) {\n    coef[i] = 1.0;\n    for (j = 0; j <= degree; ++j) {\n      if (j !== i) {\n        coef[i] *= work[j];\n      }\n    }\n    coef[i] *= denom[i];\n    let sampleIndex = (firstIndex + i) * 3;\n    result.x += coef[i] * samples[sampleIndex++];\n    result.y += coef[i] * samples[sampleIndex++];\n    result.s += coef[i] * samples[sampleIndex];\n  }\n  return result;\n};\nfunction requestXysChunk(xysData, chunkIndex) {\n  if (xysData._chunkDownloadsInProgress[chunkIndex]) {\n    // Chunk has already been requested.\n    return xysData._chunkDownloadsInProgress[chunkIndex];\n  }\n  let chunkUrl;\n  const xysFileUrlTemplate = xysData._xysFileUrlTemplate;\n  if (defined(xysFileUrlTemplate)) {\n    chunkUrl = xysFileUrlTemplate.getDerivedResource({\n      templateValues: {\n        0: chunkIndex\n      }\n    });\n  } else {\n    chunkUrl = new Resource({\n      url: buildModuleUrl(`Assets/IAU2006_XYS/IAU2006_XYS_${chunkIndex}.json`)\n    });\n  }\n  const promise = chunkUrl.fetchJson().then(function (chunk) {\n    xysData._chunkDownloadsInProgress[chunkIndex] = false;\n    const samples = xysData._samples;\n    const newSamples = chunk.samples;\n    const startIndex = chunkIndex * xysData._samplesPerXysFile * 3;\n    for (let i = 0, len = newSamples.length; i < len; ++i) {\n      samples[startIndex + i] = newSamples[i];\n    }\n  });\n  xysData._chunkDownloadsInProgress[chunkIndex] = promise;\n  return promise;\n}\nexport default Iau2006XysData;","map":{"version":3,"names":["buildModuleUrl","defaultValue","defined","Iau2006XysSample","JulianDate","Resource","TimeStandard","Iau2006XysData","options","EMPTY_OBJECT","_xysFileUrlTemplate","createIfNeeded","xysFileUrlTemplate","_interpolationOrder","interpolationOrder","_sampleZeroJulianEphemerisDate","sampleZeroJulianEphemerisDate","_sampleZeroDateTT","TAI","_stepSizeDays","stepSizeDays","_samplesPerXysFile","samplesPerXysFile","_totalSamples","totalSamples","_samples","Array","_chunkDownloadsInProgress","order","denom","_denominators","xTable","_xTable","stepN","Math","pow","i","j","_work","_coef","julianDateScratch","getDaysSinceEpoch","xys","dayTT","secondTT","dateTT","dayNumber","secondsOfDay","daysDifference","prototype","preload","startDayTT","startSecondTT","stopDayTT","stopSecondTT","startDaysSinceEpoch","stopDaysSinceEpoch","startIndex","stopIndex","startChunk","stopChunk","promises","push","requestXysChunk","Promise","all","computeXysRadians","result","daysSinceEpoch","undefined","centerIndex","degree","firstIndex","lastIndex","isDataMissing","samples","x","y","s","work","coef","sampleIndex","xysData","chunkIndex","chunkUrl","getDerivedResource","templateValues","url","promise","fetchJson","then","chunk","newSamples","len","length"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/engine/Source/Core/Iau2006XysData.js"],"sourcesContent":["import buildModuleUrl from \"./buildModuleUrl.js\";\nimport defaultValue from \"./defaultValue.js\";\nimport defined from \"./defined.js\";\nimport Iau2006XysSample from \"./Iau2006XysSample.js\";\nimport JulianDate from \"./JulianDate.js\";\nimport Resource from \"./Resource.js\";\nimport TimeStandard from \"./TimeStandard.js\";\n\n/**\n * A set of IAU2006 XYS data that is used to evaluate the transformation between the International\n * Celestial Reference Frame (ICRF) and the International Terrestrial Reference Frame (ITRF).\n *\n * @alias Iau2006XysData\n * @constructor\n *\n * @param {object} [options] Object with the following properties:\n * @param {Resource|string} [options.xysFileUrlTemplate='Assets/IAU2006_XYS/IAU2006_XYS_{0}.json'] A template URL for obtaining the XYS data.  In the template,\n *                 `{0}` will be replaced with the file index.\n * @param {number} [options.interpolationOrder=9] The order of interpolation to perform on the XYS data.\n * @param {number} [options.sampleZeroJulianEphemerisDate=2442396.5] The Julian ephemeris date (JED) of the\n *                 first XYS sample.\n * @param {number} [options.stepSizeDays=1.0] The step size, in days, between successive XYS samples.\n * @param {number} [options.samplesPerXysFile=1000] The number of samples in each XYS file.\n * @param {number} [options.totalSamples=27426] The total number of samples in all XYS files.\n *\n * @private\n */\nfunction Iau2006XysData(options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n\n  this._xysFileUrlTemplate = Resource.createIfNeeded(\n    options.xysFileUrlTemplate,\n  );\n  this._interpolationOrder = defaultValue(options.interpolationOrder, 9);\n  this._sampleZeroJulianEphemerisDate = defaultValue(\n    options.sampleZeroJulianEphemerisDate,\n    2442396.5,\n  );\n  this._sampleZeroDateTT = new JulianDate(\n    this._sampleZeroJulianEphemerisDate,\n    0.0,\n    TimeStandard.TAI,\n  );\n  this._stepSizeDays = defaultValue(options.stepSizeDays, 1.0);\n  this._samplesPerXysFile = defaultValue(options.samplesPerXysFile, 1000);\n  this._totalSamples = defaultValue(options.totalSamples, 27426);\n  this._samples = new Array(this._totalSamples * 3);\n  this._chunkDownloadsInProgress = [];\n\n  const order = this._interpolationOrder;\n\n  // Compute denominators and X values for interpolation.\n  const denom = (this._denominators = new Array(order + 1));\n  const xTable = (this._xTable = new Array(order + 1));\n\n  const stepN = Math.pow(this._stepSizeDays, order);\n\n  for (let i = 0; i <= order; ++i) {\n    denom[i] = stepN;\n    xTable[i] = i * this._stepSizeDays;\n\n    for (let j = 0; j <= order; ++j) {\n      if (j !== i) {\n        denom[i] *= i - j;\n      }\n    }\n\n    denom[i] = 1.0 / denom[i];\n  }\n\n  // Allocate scratch arrays for interpolation.\n  this._work = new Array(order + 1);\n  this._coef = new Array(order + 1);\n}\n\nconst julianDateScratch = new JulianDate(0, 0.0, TimeStandard.TAI);\n\nfunction getDaysSinceEpoch(xys, dayTT, secondTT) {\n  const dateTT = julianDateScratch;\n  dateTT.dayNumber = dayTT;\n  dateTT.secondsOfDay = secondTT;\n  return JulianDate.daysDifference(dateTT, xys._sampleZeroDateTT);\n}\n\n/**\n * Preloads XYS data for a specified date range.\n *\n * @param {number} startDayTT The Julian day number of the beginning of the interval to preload, expressed in\n *                 the Terrestrial Time (TT) time standard.\n * @param {number} startSecondTT The seconds past noon of the beginning of the interval to preload, expressed in\n *                 the Terrestrial Time (TT) time standard.\n * @param {number} stopDayTT The Julian day number of the end of the interval to preload, expressed in\n *                 the Terrestrial Time (TT) time standard.\n * @param {number} stopSecondTT The seconds past noon of the end of the interval to preload, expressed in\n *                 the Terrestrial Time (TT) time standard.\n * @returns {Promise<void>} A promise that, when resolved, indicates that the requested interval has been\n *                    preloaded.\n */\nIau2006XysData.prototype.preload = function (\n  startDayTT,\n  startSecondTT,\n  stopDayTT,\n  stopSecondTT,\n) {\n  const startDaysSinceEpoch = getDaysSinceEpoch(\n    this,\n    startDayTT,\n    startSecondTT,\n  );\n  const stopDaysSinceEpoch = getDaysSinceEpoch(this, stopDayTT, stopSecondTT);\n\n  let startIndex =\n    (startDaysSinceEpoch / this._stepSizeDays - this._interpolationOrder / 2) |\n    0;\n  if (startIndex < 0) {\n    startIndex = 0;\n  }\n\n  let stopIndex =\n    (stopDaysSinceEpoch / this._stepSizeDays - this._interpolationOrder / 2) |\n    (0 + this._interpolationOrder);\n  if (stopIndex >= this._totalSamples) {\n    stopIndex = this._totalSamples - 1;\n  }\n\n  const startChunk = (startIndex / this._samplesPerXysFile) | 0;\n  const stopChunk = (stopIndex / this._samplesPerXysFile) | 0;\n\n  const promises = [];\n  for (let i = startChunk; i <= stopChunk; ++i) {\n    promises.push(requestXysChunk(this, i));\n  }\n\n  return Promise.all(promises);\n};\n\n/**\n * Computes the XYS values for a given date by interpolating.  If the required data is not yet downloaded,\n * this method will return undefined.\n *\n * @param {number} dayTT The Julian day number for which to compute the XYS value, expressed in\n *                 the Terrestrial Time (TT) time standard.\n * @param {number} secondTT The seconds past noon of the date for which to compute the XYS value, expressed in\n *                 the Terrestrial Time (TT) time standard.\n * @param {Iau2006XysSample} [result] The instance to which to copy the interpolated result.  If this parameter\n *                           is undefined, a new instance is allocated and returned.\n * @returns {Iau2006XysSample} The interpolated XYS values, or undefined if the required data for this\n *                             computation has not yet been downloaded.\n *\n * @see Iau2006XysData#preload\n */\nIau2006XysData.prototype.computeXysRadians = function (\n  dayTT,\n  secondTT,\n  result,\n) {\n  const daysSinceEpoch = getDaysSinceEpoch(this, dayTT, secondTT);\n  if (daysSinceEpoch < 0.0) {\n    // Can't evaluate prior to the epoch of the data.\n    return undefined;\n  }\n\n  const centerIndex = (daysSinceEpoch / this._stepSizeDays) | 0;\n  if (centerIndex >= this._totalSamples) {\n    // Can't evaluate after the last sample in the data.\n    return undefined;\n  }\n\n  const degree = this._interpolationOrder;\n\n  let firstIndex = centerIndex - ((degree / 2) | 0);\n  if (firstIndex < 0) {\n    firstIndex = 0;\n  }\n  let lastIndex = firstIndex + degree;\n  if (lastIndex >= this._totalSamples) {\n    lastIndex = this._totalSamples - 1;\n    firstIndex = lastIndex - degree;\n    if (firstIndex < 0) {\n      firstIndex = 0;\n    }\n  }\n\n  // Are all the samples we need present?\n  // We can assume so if the first and last are present\n  let isDataMissing = false;\n  const samples = this._samples;\n  if (!defined(samples[firstIndex * 3])) {\n    requestXysChunk(this, (firstIndex / this._samplesPerXysFile) | 0);\n    isDataMissing = true;\n  }\n\n  if (!defined(samples[lastIndex * 3])) {\n    requestXysChunk(this, (lastIndex / this._samplesPerXysFile) | 0);\n    isDataMissing = true;\n  }\n\n  if (isDataMissing) {\n    return undefined;\n  }\n\n  if (!defined(result)) {\n    result = new Iau2006XysSample(0.0, 0.0, 0.0);\n  } else {\n    result.x = 0.0;\n    result.y = 0.0;\n    result.s = 0.0;\n  }\n\n  const x = daysSinceEpoch - firstIndex * this._stepSizeDays;\n\n  const work = this._work;\n  const denom = this._denominators;\n  const coef = this._coef;\n  const xTable = this._xTable;\n\n  let i, j;\n  for (i = 0; i <= degree; ++i) {\n    work[i] = x - xTable[i];\n  }\n\n  for (i = 0; i <= degree; ++i) {\n    coef[i] = 1.0;\n\n    for (j = 0; j <= degree; ++j) {\n      if (j !== i) {\n        coef[i] *= work[j];\n      }\n    }\n\n    coef[i] *= denom[i];\n\n    let sampleIndex = (firstIndex + i) * 3;\n    result.x += coef[i] * samples[sampleIndex++];\n    result.y += coef[i] * samples[sampleIndex++];\n    result.s += coef[i] * samples[sampleIndex];\n  }\n\n  return result;\n};\n\nfunction requestXysChunk(xysData, chunkIndex) {\n  if (xysData._chunkDownloadsInProgress[chunkIndex]) {\n    // Chunk has already been requested.\n    return xysData._chunkDownloadsInProgress[chunkIndex];\n  }\n\n  let chunkUrl;\n  const xysFileUrlTemplate = xysData._xysFileUrlTemplate;\n  if (defined(xysFileUrlTemplate)) {\n    chunkUrl = xysFileUrlTemplate.getDerivedResource({\n      templateValues: {\n        0: chunkIndex,\n      },\n    });\n  } else {\n    chunkUrl = new Resource({\n      url: buildModuleUrl(`Assets/IAU2006_XYS/IAU2006_XYS_${chunkIndex}.json`),\n    });\n  }\n\n  const promise = chunkUrl.fetchJson().then(function (chunk) {\n    xysData._chunkDownloadsInProgress[chunkIndex] = false;\n\n    const samples = xysData._samples;\n    const newSamples = chunk.samples;\n    const startIndex = chunkIndex * xysData._samplesPerXysFile * 3;\n\n    for (let i = 0, len = newSamples.length; i < len; ++i) {\n      samples[startIndex + i] = newSamples[i];\n    }\n  });\n  xysData._chunkDownloadsInProgress[chunkIndex] = promise;\n\n  return promise;\n}\nexport default Iau2006XysData;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}