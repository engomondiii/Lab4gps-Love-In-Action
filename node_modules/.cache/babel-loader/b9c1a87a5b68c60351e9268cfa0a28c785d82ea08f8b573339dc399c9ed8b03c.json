{"ast":null,"code":"/**\n * Defines how per-feature colors set from the Cesium API or declarative styling blend with the source colors from\n * the original feature, e.g. glTF material or per-point color in the tile.\n * <p>\n * When <code>REPLACE</code> or <code>MIX</code> are used and the source color is a glTF material, the technique must assign the\n * <code>_3DTILESDIFFUSE</code> semantic to the diffuse color parameter. Otherwise only <code>HIGHLIGHT</code> is supported.\n * </p>\n * <p>\n * A feature whose color evaluates to white (1.0, 1.0, 1.0) is always rendered without color blending, regardless of the\n * tileset's color blend mode.\n * </p>\n * <pre><code>\n * \"techniques\": {\n *   \"technique0\": {\n *     \"parameters\": {\n *       \"diffuse\": {\n *         \"semantic\": \"_3DTILESDIFFUSE\",\n *         \"type\": 35666\n *       }\n *     }\n *   }\n * }\n * </code></pre>\n *\n * @enum {number}\n */\nconst Cesium3DTileColorBlendMode = {\n  /**\n   * Multiplies the source color by the feature color.\n   *\n   * @type {number}\n   * @constant\n   */\n  HIGHLIGHT: 0,\n  /**\n   * Replaces the source color with the feature color.\n   *\n   * @type {number}\n   * @constant\n   */\n  REPLACE: 1,\n  /**\n   * Blends the source color and feature color together.\n   *\n   * @type {number}\n   * @constant\n   */\n  MIX: 2\n};\nexport default Object.freeze(Cesium3DTileColorBlendMode);","map":{"version":3,"names":["Cesium3DTileColorBlendMode","HIGHLIGHT","REPLACE","MIX","Object","freeze"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/engine/Source/Scene/Cesium3DTileColorBlendMode.js"],"sourcesContent":["/**\n * Defines how per-feature colors set from the Cesium API or declarative styling blend with the source colors from\n * the original feature, e.g. glTF material or per-point color in the tile.\n * <p>\n * When <code>REPLACE</code> or <code>MIX</code> are used and the source color is a glTF material, the technique must assign the\n * <code>_3DTILESDIFFUSE</code> semantic to the diffuse color parameter. Otherwise only <code>HIGHLIGHT</code> is supported.\n * </p>\n * <p>\n * A feature whose color evaluates to white (1.0, 1.0, 1.0) is always rendered without color blending, regardless of the\n * tileset's color blend mode.\n * </p>\n * <pre><code>\n * \"techniques\": {\n *   \"technique0\": {\n *     \"parameters\": {\n *       \"diffuse\": {\n *         \"semantic\": \"_3DTILESDIFFUSE\",\n *         \"type\": 35666\n *       }\n *     }\n *   }\n * }\n * </code></pre>\n *\n * @enum {number}\n */\nconst Cesium3DTileColorBlendMode = {\n  /**\n   * Multiplies the source color by the feature color.\n   *\n   * @type {number}\n   * @constant\n   */\n  HIGHLIGHT: 0,\n\n  /**\n   * Replaces the source color with the feature color.\n   *\n   * @type {number}\n   * @constant\n   */\n  REPLACE: 1,\n\n  /**\n   * Blends the source color and feature color together.\n   *\n   * @type {number}\n   * @constant\n   */\n  MIX: 2,\n};\nexport default Object.freeze(Cesium3DTileColorBlendMode);\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,0BAA0B,GAAG;EACjC;AACF;AACA;AACA;AACA;AACA;EACEC,SAAS,EAAE,CAAC;EAEZ;AACF;AACA;AACA;AACA;AACA;EACEC,OAAO,EAAE,CAAC;EAEV;AACF;AACA;AACA;AACA;AACA;EACEC,GAAG,EAAE;AACP,CAAC;AACD,eAAeC,MAAM,CAACC,MAAM,CAACL,0BAA0B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}