{"ast":null,"code":"import { defaultValue, defined, DeveloperError } from \"@cesium/engine\";\nimport knockout from \"../ThirdParty/knockout.js\";\nimport createCommand from \"../createCommand.js\";\n\n/**\n * A view model that represents each item in the {@link BaseLayerPicker}.\n *\n * @alias ProviderViewModel\n * @constructor\n *\n * @param {object} options The object containing all parameters.\n * @param {string} options.name The name of the layer.\n * @param {string} options.tooltip The tooltip to show when the item is moused over.\n * @param {string} options.iconUrl An icon representing the layer.\n * @param {string} [options.category] A category for the layer.\n * @param {ProviderViewModel.CreationFunction|Command} options.creationFunction A function or Command\n *        that creates one or more providers which will be added to the globe when this item is selected.\n *\n * @see BaseLayerPicker\n * @see ImageryProvider\n * @see TerrainProvider\n */\nfunction ProviderViewModel(options) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(options.name)) {\n    throw new DeveloperError(\"options.name is required.\");\n  }\n  if (!defined(options.tooltip)) {\n    throw new DeveloperError(\"options.tooltip is required.\");\n  }\n  if (!defined(options.iconUrl)) {\n    throw new DeveloperError(\"options.iconUrl is required.\");\n  }\n  if (typeof options.creationFunction !== \"function\") {\n    throw new DeveloperError(\"options.creationFunction is required.\");\n  }\n  //>>includeEnd('debug');\n\n  let creationCommand = options.creationFunction;\n  if (!defined(creationCommand.canExecute)) {\n    creationCommand = createCommand(creationCommand);\n  }\n  this._creationCommand = creationCommand;\n\n  /**\n   * Gets the display name.  This property is observable.\n   * @type {string}\n   */\n  this.name = options.name;\n\n  /**\n   * Gets the tooltip.  This property is observable.\n   * @type {string}\n   */\n  this.tooltip = options.tooltip;\n\n  /**\n   * Gets the icon.  This property is observable.\n   * @type {string}\n   */\n  this.iconUrl = options.iconUrl;\n  this._category = defaultValue(options.category, \"\");\n  knockout.track(this, [\"name\", \"tooltip\", \"iconUrl\"]);\n}\nObject.defineProperties(ProviderViewModel.prototype, {\n  /**\n   * Gets the Command that creates one or more providers which will be added to\n   * the globe when this item is selected.\n   * @memberof ProviderViewModel.prototype\n   * @memberof ProviderViewModel.prototype\n   * @type {Command}\n   * @readonly\n   */\n  creationCommand: {\n    get: function () {\n      return this._creationCommand;\n    }\n  },\n  /**\n   * Gets the category\n   * @type {string}\n   * @memberof ProviderViewModel.prototype\n   * @readonly\n   */\n  category: {\n    get: function () {\n      return this._category;\n    }\n  }\n});\n\n/**\n * A function which creates one or more providers.\n * @callback ProviderViewModel.CreationFunction\n * @returns {ImageryProvider|TerrainProvider|ImageryProvider[]|TerrainProvider[]|Promise<TerrainProvider>|Promise<ImageryProvider>|Promise<TerrainProvider[]>|Promise<ImageryProvider[]>}\n *          The ImageryProvider or TerrainProvider, or array of providers, to be added\n *          to the globe.\n */\nexport default ProviderViewModel;","map":{"version":3,"names":["defaultValue","defined","DeveloperError","knockout","createCommand","ProviderViewModel","options","name","tooltip","iconUrl","creationFunction","creationCommand","canExecute","_creationCommand","_category","category","track","Object","defineProperties","prototype","get"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/widgets/Source/BaseLayerPicker/ProviderViewModel.js"],"sourcesContent":["import { defaultValue, defined, DeveloperError } from \"@cesium/engine\";\nimport knockout from \"../ThirdParty/knockout.js\";\nimport createCommand from \"../createCommand.js\";\n\n/**\n * A view model that represents each item in the {@link BaseLayerPicker}.\n *\n * @alias ProviderViewModel\n * @constructor\n *\n * @param {object} options The object containing all parameters.\n * @param {string} options.name The name of the layer.\n * @param {string} options.tooltip The tooltip to show when the item is moused over.\n * @param {string} options.iconUrl An icon representing the layer.\n * @param {string} [options.category] A category for the layer.\n * @param {ProviderViewModel.CreationFunction|Command} options.creationFunction A function or Command\n *        that creates one or more providers which will be added to the globe when this item is selected.\n *\n * @see BaseLayerPicker\n * @see ImageryProvider\n * @see TerrainProvider\n */\nfunction ProviderViewModel(options) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(options.name)) {\n    throw new DeveloperError(\"options.name is required.\");\n  }\n  if (!defined(options.tooltip)) {\n    throw new DeveloperError(\"options.tooltip is required.\");\n  }\n  if (!defined(options.iconUrl)) {\n    throw new DeveloperError(\"options.iconUrl is required.\");\n  }\n  if (typeof options.creationFunction !== \"function\") {\n    throw new DeveloperError(\"options.creationFunction is required.\");\n  }\n  //>>includeEnd('debug');\n\n  let creationCommand = options.creationFunction;\n  if (!defined(creationCommand.canExecute)) {\n    creationCommand = createCommand(creationCommand);\n  }\n\n  this._creationCommand = creationCommand;\n\n  /**\n   * Gets the display name.  This property is observable.\n   * @type {string}\n   */\n  this.name = options.name;\n\n  /**\n   * Gets the tooltip.  This property is observable.\n   * @type {string}\n   */\n  this.tooltip = options.tooltip;\n\n  /**\n   * Gets the icon.  This property is observable.\n   * @type {string}\n   */\n  this.iconUrl = options.iconUrl;\n\n  this._category = defaultValue(options.category, \"\");\n\n  knockout.track(this, [\"name\", \"tooltip\", \"iconUrl\"]);\n}\n\nObject.defineProperties(ProviderViewModel.prototype, {\n  /**\n   * Gets the Command that creates one or more providers which will be added to\n   * the globe when this item is selected.\n   * @memberof ProviderViewModel.prototype\n   * @memberof ProviderViewModel.prototype\n   * @type {Command}\n   * @readonly\n   */\n  creationCommand: {\n    get: function () {\n      return this._creationCommand;\n    },\n  },\n\n  /**\n   * Gets the category\n   * @type {string}\n   * @memberof ProviderViewModel.prototype\n   * @readonly\n   */\n  category: {\n    get: function () {\n      return this._category;\n    },\n  },\n});\n\n/**\n * A function which creates one or more providers.\n * @callback ProviderViewModel.CreationFunction\n * @returns {ImageryProvider|TerrainProvider|ImageryProvider[]|TerrainProvider[]|Promise<TerrainProvider>|Promise<ImageryProvider>|Promise<TerrainProvider[]>|Promise<ImageryProvider[]>}\n *          The ImageryProvider or TerrainProvider, or array of providers, to be added\n *          to the globe.\n */\nexport default ProviderViewModel;\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,OAAO,EAAEC,cAAc,QAAQ,gBAAgB;AACtE,OAAOC,QAAQ,MAAM,2BAA2B;AAChD,OAAOC,aAAa,MAAM,qBAAqB;;AAE/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,iBAAiBA,CAACC,OAAO,EAAE;EAClC;EACA,IAAI,CAACL,OAAO,CAACK,OAAO,CAACC,IAAI,CAAC,EAAE;IAC1B,MAAM,IAAIL,cAAc,CAAC,2BAA2B,CAAC;EACvD;EACA,IAAI,CAACD,OAAO,CAACK,OAAO,CAACE,OAAO,CAAC,EAAE;IAC7B,MAAM,IAAIN,cAAc,CAAC,8BAA8B,CAAC;EAC1D;EACA,IAAI,CAACD,OAAO,CAACK,OAAO,CAACG,OAAO,CAAC,EAAE;IAC7B,MAAM,IAAIP,cAAc,CAAC,8BAA8B,CAAC;EAC1D;EACA,IAAI,OAAOI,OAAO,CAACI,gBAAgB,KAAK,UAAU,EAAE;IAClD,MAAM,IAAIR,cAAc,CAAC,uCAAuC,CAAC;EACnE;EACA;;EAEA,IAAIS,eAAe,GAAGL,OAAO,CAACI,gBAAgB;EAC9C,IAAI,CAACT,OAAO,CAACU,eAAe,CAACC,UAAU,CAAC,EAAE;IACxCD,eAAe,GAAGP,aAAa,CAACO,eAAe,CAAC;EAClD;EAEA,IAAI,CAACE,gBAAgB,GAAGF,eAAe;;EAEvC;AACF;AACA;AACA;EACE,IAAI,CAACJ,IAAI,GAAGD,OAAO,CAACC,IAAI;;EAExB;AACF;AACA;AACA;EACE,IAAI,CAACC,OAAO,GAAGF,OAAO,CAACE,OAAO;;EAE9B;AACF;AACA;AACA;EACE,IAAI,CAACC,OAAO,GAAGH,OAAO,CAACG,OAAO;EAE9B,IAAI,CAACK,SAAS,GAAGd,YAAY,CAACM,OAAO,CAACS,QAAQ,EAAE,EAAE,CAAC;EAEnDZ,QAAQ,CAACa,KAAK,CAAC,IAAI,EAAE,CAAC,MAAM,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;AACtD;AAEAC,MAAM,CAACC,gBAAgB,CAACb,iBAAiB,CAACc,SAAS,EAAE;EACnD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACER,eAAe,EAAE;IACfS,GAAG,EAAE,SAAAA,CAAA,EAAY;MACf,OAAO,IAAI,CAACP,gBAAgB;IAC9B;EACF,CAAC;EAED;AACF;AACA;AACA;AACA;AACA;EACEE,QAAQ,EAAE;IACRK,GAAG,EAAE,SAAAA,CAAA,EAAY;MACf,OAAO,IAAI,CAACN,SAAS;IACvB;EACF;AACF,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAeT,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}