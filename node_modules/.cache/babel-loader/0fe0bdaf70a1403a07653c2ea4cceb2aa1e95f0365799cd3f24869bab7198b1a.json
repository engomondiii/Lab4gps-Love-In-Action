{"ast":null,"code":"/**\n * An enum to indicate the different types of {@link Cesium3DTileContent}.\n * For binary files, the enum value is the magic number of the binary file\n * unless otherwise noted. For JSON files, the enum value is a unique name\n * for internal use.\n *\n * @enum {string}\n * @see Cesium3DTileContent\n *\n * @private\n */\nconst Cesium3DTileContentType = {\n  /**\n   * A Batched 3D Model. This is a binary format with\n   * magic number <code>b3dm</code>\n   *\n   * @type {string}\n   * @constant\n   * @private\n   */\n  BATCHED_3D_MODEL: \"b3dm\",\n  /**\n   * An Instanced 3D Model. This is a binary format with magic number\n   * <code>i3dm</code>\n   *\n   * @type {string}\n   * @constant\n   * @private\n   */\n  INSTANCED_3D_MODEL: \"i3dm\",\n  /**\n   * A Composite model. This is a binary format with magic number\n   * <code>cmpt</code>\n   *\n   * @type {string}\n   * @constant\n   * @private\n   */\n  COMPOSITE: \"cmpt\",\n  /**\n   * A Point Cloud model. This is a binary format with magic number\n   * <code>pnts</code>\n   *\n   * @type {string}\n   * @constant\n   * @private\n   */\n  POINT_CLOUD: \"pnts\",\n  /**\n   * Vector tiles. This is a binary format with magic number\n   * <code>vctr</code>\n   *\n   * @type {string}\n   * @constant\n   * @private\n   */\n  VECTOR: \"vctr\",\n  /**\n   * Geometry tiles. This is a binary format with magic number\n   * <code>geom</code>\n   *\n   * @type {string}\n   * @constant\n   * @private\n   */\n  GEOMETRY: \"geom\",\n  /**\n   * A glTF model in JSON + external BIN form. This is treated\n   * as a JSON format.\n   *\n   * @type {string}\n   * @constant\n   * @private\n   * @experimental This feature is using part of the 3D Tiles spec that is not final and is subject to change without Cesium's standard deprecation policy.\n   */\n  GLTF: \"gltf\",\n  /**\n   * The binary form of a glTF file. Internally, the magic number is\n   * changed from <code>glTF</code> to <code>glb</code> to distinguish it from\n   * the JSON glTF format.\n   *\n   * @type {string}\n   * @constant\n   * @private\n   * @experimental This feature is using part of the 3D Tiles spec that is not final and is subject to change without Cesium's standard deprecation policy.\n   */\n  GLTF_BINARY: \"glb\",\n  /**\n   * For implicit tiling, availability bitstreams are stored in binary subtree files.\n   * The magic number is <code>subt</code>\n   *\n   * @type {string}\n   * @constant\n   * @private\n   * @experimental This feature is using part of the 3D Tiles spec that is not final and is subject to change without Cesium's standard deprecation policy.\n   */\n  IMPLICIT_SUBTREE: \"subt\",\n  /**\n   * For implicit tiling. Subtrees can also be represented as JSON files.\n   *\n   * @type {string}\n   * @constant\n   * @private\n   * @experimental This feature is using part of the 3D Tiles spec that is not final and is subject to change without Cesium's standard deprecation policy.\n   */\n  IMPLICIT_SUBTREE_JSON: \"subtreeJson\",\n  /**\n   * Contents can reference another tileset.json to use\n   * as an external tileset. This is a JSON-based format.\n   *\n   * @type {string}\n   * @constant\n   * @private\n   */\n  EXTERNAL_TILESET: \"externalTileset\",\n  /**\n   * Multiple contents are handled separately from the other content types\n   * due to differences in request scheduling.\n   *\n   * @type {string}\n   * @constant\n   * @private\n   * @experimental This feature is using part of the 3D Tiles spec that is not final and is subject to change without Cesium's standard deprecation policy.\n   */\n  MULTIPLE_CONTENT: \"multipleContent\",\n  /**\n   * GeoJSON content for <code>MAXAR_content_geojson</code> extension.\n   *\n   * @type {string}\n   * @constant\n   * @private\n   * @experimental This feature is using part of the 3D Tiles spec that is not final and is subject to change without Cesium's standard deprecation policy.\n   */\n  GEOJSON: \"geoJson\",\n  /**\n   * Binary voxel content for <code>3DTILES_content_voxels</code> extension.\n   *\n   * @type {string}\n   * @constant\n   * @private\n   * @experimental This feature is using part of the 3D Tiles spec that is not final and is subject to change without Cesium's standard deprecation policy.\n   */\n  VOXEL_BINARY: \"voxl\",\n  /**\n   * Binary voxel content for <code>3DTILES_content_voxels</code> extension.\n   *\n   * @type {string}\n   * @constant\n   * @private\n   * @experimental This feature is using part of the 3D Tiles spec that is not final and is subject to change without Cesium's standard deprecation policy.\n   */\n  VOXEL_JSON: \"voxelJson\"\n};\n\n/**\n * Check if a content is one of the supported binary formats. Otherwise,\n * the caller can assume a JSON format.\n * @param {Cesium3DTileContentType} contentType The content type of the content payload.\n * @return {boolean} <code>true</code> if the content type is a binary format, or <code>false</code> if the content type is a JSON format.\n * @private\n */\nCesium3DTileContentType.isBinaryFormat = function (contentType) {\n  switch (contentType) {\n    case Cesium3DTileContentType.BATCHED_3D_MODEL:\n    case Cesium3DTileContentType.INSTANCED_3D_MODEL:\n    case Cesium3DTileContentType.COMPOSITE:\n    case Cesium3DTileContentType.POINT_CLOUD:\n    case Cesium3DTileContentType.VECTOR:\n    case Cesium3DTileContentType.GEOMETRY:\n    case Cesium3DTileContentType.IMPLICIT_SUBTREE:\n    case Cesium3DTileContentType.VOXEL_BINARY:\n    case Cesium3DTileContentType.GLTF_BINARY:\n      return true;\n    default:\n      return false;\n  }\n};\nexport default Object.freeze(Cesium3DTileContentType);","map":{"version":3,"names":["Cesium3DTileContentType","BATCHED_3D_MODEL","INSTANCED_3D_MODEL","COMPOSITE","POINT_CLOUD","VECTOR","GEOMETRY","GLTF","GLTF_BINARY","IMPLICIT_SUBTREE","IMPLICIT_SUBTREE_JSON","EXTERNAL_TILESET","MULTIPLE_CONTENT","GEOJSON","VOXEL_BINARY","VOXEL_JSON","isBinaryFormat","contentType","Object","freeze"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/engine/Source/Scene/Cesium3DTileContentType.js"],"sourcesContent":["/**\n * An enum to indicate the different types of {@link Cesium3DTileContent}.\n * For binary files, the enum value is the magic number of the binary file\n * unless otherwise noted. For JSON files, the enum value is a unique name\n * for internal use.\n *\n * @enum {string}\n * @see Cesium3DTileContent\n *\n * @private\n */\nconst Cesium3DTileContentType = {\n  /**\n   * A Batched 3D Model. This is a binary format with\n   * magic number <code>b3dm</code>\n   *\n   * @type {string}\n   * @constant\n   * @private\n   */\n  BATCHED_3D_MODEL: \"b3dm\",\n  /**\n   * An Instanced 3D Model. This is a binary format with magic number\n   * <code>i3dm</code>\n   *\n   * @type {string}\n   * @constant\n   * @private\n   */\n  INSTANCED_3D_MODEL: \"i3dm\",\n  /**\n   * A Composite model. This is a binary format with magic number\n   * <code>cmpt</code>\n   *\n   * @type {string}\n   * @constant\n   * @private\n   */\n  COMPOSITE: \"cmpt\",\n  /**\n   * A Point Cloud model. This is a binary format with magic number\n   * <code>pnts</code>\n   *\n   * @type {string}\n   * @constant\n   * @private\n   */\n  POINT_CLOUD: \"pnts\",\n  /**\n   * Vector tiles. This is a binary format with magic number\n   * <code>vctr</code>\n   *\n   * @type {string}\n   * @constant\n   * @private\n   */\n  VECTOR: \"vctr\",\n  /**\n   * Geometry tiles. This is a binary format with magic number\n   * <code>geom</code>\n   *\n   * @type {string}\n   * @constant\n   * @private\n   */\n  GEOMETRY: \"geom\",\n  /**\n   * A glTF model in JSON + external BIN form. This is treated\n   * as a JSON format.\n   *\n   * @type {string}\n   * @constant\n   * @private\n   * @experimental This feature is using part of the 3D Tiles spec that is not final and is subject to change without Cesium's standard deprecation policy.\n   */\n  GLTF: \"gltf\",\n  /**\n   * The binary form of a glTF file. Internally, the magic number is\n   * changed from <code>glTF</code> to <code>glb</code> to distinguish it from\n   * the JSON glTF format.\n   *\n   * @type {string}\n   * @constant\n   * @private\n   * @experimental This feature is using part of the 3D Tiles spec that is not final and is subject to change without Cesium's standard deprecation policy.\n   */\n  GLTF_BINARY: \"glb\",\n  /**\n   * For implicit tiling, availability bitstreams are stored in binary subtree files.\n   * The magic number is <code>subt</code>\n   *\n   * @type {string}\n   * @constant\n   * @private\n   * @experimental This feature is using part of the 3D Tiles spec that is not final and is subject to change without Cesium's standard deprecation policy.\n   */\n  IMPLICIT_SUBTREE: \"subt\",\n  /**\n   * For implicit tiling. Subtrees can also be represented as JSON files.\n   *\n   * @type {string}\n   * @constant\n   * @private\n   * @experimental This feature is using part of the 3D Tiles spec that is not final and is subject to change without Cesium's standard deprecation policy.\n   */\n  IMPLICIT_SUBTREE_JSON: \"subtreeJson\",\n  /**\n   * Contents can reference another tileset.json to use\n   * as an external tileset. This is a JSON-based format.\n   *\n   * @type {string}\n   * @constant\n   * @private\n   */\n  EXTERNAL_TILESET: \"externalTileset\",\n  /**\n   * Multiple contents are handled separately from the other content types\n   * due to differences in request scheduling.\n   *\n   * @type {string}\n   * @constant\n   * @private\n   * @experimental This feature is using part of the 3D Tiles spec that is not final and is subject to change without Cesium's standard deprecation policy.\n   */\n  MULTIPLE_CONTENT: \"multipleContent\",\n  /**\n   * GeoJSON content for <code>MAXAR_content_geojson</code> extension.\n   *\n   * @type {string}\n   * @constant\n   * @private\n   * @experimental This feature is using part of the 3D Tiles spec that is not final and is subject to change without Cesium's standard deprecation policy.\n   */\n  GEOJSON: \"geoJson\",\n  /**\n   * Binary voxel content for <code>3DTILES_content_voxels</code> extension.\n   *\n   * @type {string}\n   * @constant\n   * @private\n   * @experimental This feature is using part of the 3D Tiles spec that is not final and is subject to change without Cesium's standard deprecation policy.\n   */\n  VOXEL_BINARY: \"voxl\",\n  /**\n   * Binary voxel content for <code>3DTILES_content_voxels</code> extension.\n   *\n   * @type {string}\n   * @constant\n   * @private\n   * @experimental This feature is using part of the 3D Tiles spec that is not final and is subject to change without Cesium's standard deprecation policy.\n   */\n  VOXEL_JSON: \"voxelJson\",\n};\n\n/**\n * Check if a content is one of the supported binary formats. Otherwise,\n * the caller can assume a JSON format.\n * @param {Cesium3DTileContentType} contentType The content type of the content payload.\n * @return {boolean} <code>true</code> if the content type is a binary format, or <code>false</code> if the content type is a JSON format.\n * @private\n */\nCesium3DTileContentType.isBinaryFormat = function (contentType) {\n  switch (contentType) {\n    case Cesium3DTileContentType.BATCHED_3D_MODEL:\n    case Cesium3DTileContentType.INSTANCED_3D_MODEL:\n    case Cesium3DTileContentType.COMPOSITE:\n    case Cesium3DTileContentType.POINT_CLOUD:\n    case Cesium3DTileContentType.VECTOR:\n    case Cesium3DTileContentType.GEOMETRY:\n    case Cesium3DTileContentType.IMPLICIT_SUBTREE:\n    case Cesium3DTileContentType.VOXEL_BINARY:\n    case Cesium3DTileContentType.GLTF_BINARY:\n      return true;\n    default:\n      return false;\n  }\n};\n\nexport default Object.freeze(Cesium3DTileContentType);\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,uBAAuB,GAAG;EAC9B;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACEC,gBAAgB,EAAE,MAAM;EACxB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACEC,kBAAkB,EAAE,MAAM;EAC1B;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACEC,SAAS,EAAE,MAAM;EACjB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACEC,WAAW,EAAE,MAAM;EACnB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACEC,MAAM,EAAE,MAAM;EACd;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACEC,QAAQ,EAAE,MAAM;EAChB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEC,IAAI,EAAE,MAAM;EACZ;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEC,WAAW,EAAE,KAAK;EAClB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEC,gBAAgB,EAAE,MAAM;EACxB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACEC,qBAAqB,EAAE,aAAa;EACpC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACEC,gBAAgB,EAAE,iBAAiB;EACnC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEC,gBAAgB,EAAE,iBAAiB;EACnC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACEC,OAAO,EAAE,SAAS;EAClB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACEC,YAAY,EAAE,MAAM;EACpB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACEC,UAAU,EAAE;AACd,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACAf,uBAAuB,CAACgB,cAAc,GAAG,UAAUC,WAAW,EAAE;EAC9D,QAAQA,WAAW;IACjB,KAAKjB,uBAAuB,CAACC,gBAAgB;IAC7C,KAAKD,uBAAuB,CAACE,kBAAkB;IAC/C,KAAKF,uBAAuB,CAACG,SAAS;IACtC,KAAKH,uBAAuB,CAACI,WAAW;IACxC,KAAKJ,uBAAuB,CAACK,MAAM;IACnC,KAAKL,uBAAuB,CAACM,QAAQ;IACrC,KAAKN,uBAAuB,CAACS,gBAAgB;IAC7C,KAAKT,uBAAuB,CAACc,YAAY;IACzC,KAAKd,uBAAuB,CAACQ,WAAW;MACtC,OAAO,IAAI;IACb;MACE,OAAO,KAAK;EAChB;AACF,CAAC;AAED,eAAeU,MAAM,CAACC,MAAM,CAACnB,uBAAuB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}