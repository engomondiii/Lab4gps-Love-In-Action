{"ast":null,"code":"import WebGLConstants from \"../Core/WebGLConstants.js\";\n\n/**\n * The data type of a pixel.\n *\n * @enum {number}\n * @see PostProcessStage\n */\nconst PixelDatatype = {\n  UNSIGNED_BYTE: WebGLConstants.UNSIGNED_BYTE,\n  UNSIGNED_SHORT: WebGLConstants.UNSIGNED_SHORT,\n  UNSIGNED_INT: WebGLConstants.UNSIGNED_INT,\n  FLOAT: WebGLConstants.FLOAT,\n  HALF_FLOAT: WebGLConstants.HALF_FLOAT_OES,\n  UNSIGNED_INT_24_8: WebGLConstants.UNSIGNED_INT_24_8,\n  UNSIGNED_SHORT_4_4_4_4: WebGLConstants.UNSIGNED_SHORT_4_4_4_4,\n  UNSIGNED_SHORT_5_5_5_1: WebGLConstants.UNSIGNED_SHORT_5_5_5_1,\n  UNSIGNED_SHORT_5_6_5: WebGLConstants.UNSIGNED_SHORT_5_6_5\n};\n\n/**\n  @private\n*/\nPixelDatatype.toWebGLConstant = function (pixelDatatype, context) {\n  switch (pixelDatatype) {\n    case PixelDatatype.UNSIGNED_BYTE:\n      return WebGLConstants.UNSIGNED_BYTE;\n    case PixelDatatype.UNSIGNED_SHORT:\n      return WebGLConstants.UNSIGNED_SHORT;\n    case PixelDatatype.UNSIGNED_INT:\n      return WebGLConstants.UNSIGNED_INT;\n    case PixelDatatype.FLOAT:\n      return WebGLConstants.FLOAT;\n    case PixelDatatype.HALF_FLOAT:\n      return context.webgl2 ? WebGLConstants.HALF_FLOAT : WebGLConstants.HALF_FLOAT_OES;\n    case PixelDatatype.UNSIGNED_INT_24_8:\n      return WebGLConstants.UNSIGNED_INT_24_8;\n    case PixelDatatype.UNSIGNED_SHORT_4_4_4_4:\n      return WebGLConstants.UNSIGNED_SHORT_4_4_4_4;\n    case PixelDatatype.UNSIGNED_SHORT_5_5_5_1:\n      return WebGLConstants.UNSIGNED_SHORT_5_5_5_1;\n    case PixelDatatype.UNSIGNED_SHORT_5_6_5:\n      return PixelDatatype.UNSIGNED_SHORT_5_6_5;\n  }\n};\n\n/**\n  @private\n*/\nPixelDatatype.isPacked = function (pixelDatatype) {\n  return pixelDatatype === PixelDatatype.UNSIGNED_INT_24_8 || pixelDatatype === PixelDatatype.UNSIGNED_SHORT_4_4_4_4 || pixelDatatype === PixelDatatype.UNSIGNED_SHORT_5_5_5_1 || pixelDatatype === PixelDatatype.UNSIGNED_SHORT_5_6_5;\n};\n\n/**\n  @private\n*/\nPixelDatatype.sizeInBytes = function (pixelDatatype) {\n  switch (pixelDatatype) {\n    case PixelDatatype.UNSIGNED_BYTE:\n      return 1;\n    case PixelDatatype.UNSIGNED_SHORT:\n    case PixelDatatype.UNSIGNED_SHORT_4_4_4_4:\n    case PixelDatatype.UNSIGNED_SHORT_5_5_5_1:\n    case PixelDatatype.UNSIGNED_SHORT_5_6_5:\n    case PixelDatatype.HALF_FLOAT:\n      return 2;\n    case PixelDatatype.UNSIGNED_INT:\n    case PixelDatatype.FLOAT:\n    case PixelDatatype.UNSIGNED_INT_24_8:\n      return 4;\n  }\n};\n\n/**\n  @private\n*/\nPixelDatatype.validate = function (pixelDatatype) {\n  return pixelDatatype === PixelDatatype.UNSIGNED_BYTE || pixelDatatype === PixelDatatype.UNSIGNED_SHORT || pixelDatatype === PixelDatatype.UNSIGNED_INT || pixelDatatype === PixelDatatype.FLOAT || pixelDatatype === PixelDatatype.HALF_FLOAT || pixelDatatype === PixelDatatype.UNSIGNED_INT_24_8 || pixelDatatype === PixelDatatype.UNSIGNED_SHORT_4_4_4_4 || pixelDatatype === PixelDatatype.UNSIGNED_SHORT_5_5_5_1 || pixelDatatype === PixelDatatype.UNSIGNED_SHORT_5_6_5;\n};\n\n/**\n * Determine which TypedArray class should be used for a given PixelDatatype.\n *\n * @param {PixelDatatype} pixelDatatype The pixel datatype.\n * @returns {function} The constructor for the appropriate TypedArray class.\n *\n * @private\n */\nPixelDatatype.getTypedArrayConstructor = function (pixelDatatype) {\n  const sizeInBytes = PixelDatatype.sizeInBytes(pixelDatatype);\n  if (sizeInBytes === Uint8Array.BYTES_PER_ELEMENT) {\n    return Uint8Array;\n  } else if (sizeInBytes === Uint16Array.BYTES_PER_ELEMENT) {\n    return Uint16Array;\n  } else if (sizeInBytes === Float32Array.BYTES_PER_ELEMENT && pixelDatatype === PixelDatatype.FLOAT) {\n    return Float32Array;\n  }\n  return Uint32Array;\n};\nexport default Object.freeze(PixelDatatype);","map":{"version":3,"names":["WebGLConstants","PixelDatatype","UNSIGNED_BYTE","UNSIGNED_SHORT","UNSIGNED_INT","FLOAT","HALF_FLOAT","HALF_FLOAT_OES","UNSIGNED_INT_24_8","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","UNSIGNED_SHORT_5_6_5","toWebGLConstant","pixelDatatype","context","webgl2","isPacked","sizeInBytes","validate","getTypedArrayConstructor","Uint8Array","BYTES_PER_ELEMENT","Uint16Array","Float32Array","Uint32Array","Object","freeze"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/engine/Source/Renderer/PixelDatatype.js"],"sourcesContent":["import WebGLConstants from \"../Core/WebGLConstants.js\";\n\n/**\n * The data type of a pixel.\n *\n * @enum {number}\n * @see PostProcessStage\n */\nconst PixelDatatype = {\n  UNSIGNED_BYTE: WebGLConstants.UNSIGNED_BYTE,\n  UNSIGNED_SHORT: WebGLConstants.UNSIGNED_SHORT,\n  UNSIGNED_INT: WebGLConstants.UNSIGNED_INT,\n  FLOAT: WebGLConstants.FLOAT,\n  HALF_FLOAT: WebGLConstants.HALF_FLOAT_OES,\n  UNSIGNED_INT_24_8: WebGLConstants.UNSIGNED_INT_24_8,\n  UNSIGNED_SHORT_4_4_4_4: WebGLConstants.UNSIGNED_SHORT_4_4_4_4,\n  UNSIGNED_SHORT_5_5_5_1: WebGLConstants.UNSIGNED_SHORT_5_5_5_1,\n  UNSIGNED_SHORT_5_6_5: WebGLConstants.UNSIGNED_SHORT_5_6_5,\n};\n\n/**\n  @private\n*/\nPixelDatatype.toWebGLConstant = function (pixelDatatype, context) {\n  switch (pixelDatatype) {\n    case PixelDatatype.UNSIGNED_BYTE:\n      return WebGLConstants.UNSIGNED_BYTE;\n    case PixelDatatype.UNSIGNED_SHORT:\n      return WebGLConstants.UNSIGNED_SHORT;\n    case PixelDatatype.UNSIGNED_INT:\n      return WebGLConstants.UNSIGNED_INT;\n    case PixelDatatype.FLOAT:\n      return WebGLConstants.FLOAT;\n    case PixelDatatype.HALF_FLOAT:\n      return context.webgl2\n        ? WebGLConstants.HALF_FLOAT\n        : WebGLConstants.HALF_FLOAT_OES;\n    case PixelDatatype.UNSIGNED_INT_24_8:\n      return WebGLConstants.UNSIGNED_INT_24_8;\n    case PixelDatatype.UNSIGNED_SHORT_4_4_4_4:\n      return WebGLConstants.UNSIGNED_SHORT_4_4_4_4;\n    case PixelDatatype.UNSIGNED_SHORT_5_5_5_1:\n      return WebGLConstants.UNSIGNED_SHORT_5_5_5_1;\n    case PixelDatatype.UNSIGNED_SHORT_5_6_5:\n      return PixelDatatype.UNSIGNED_SHORT_5_6_5;\n  }\n};\n\n/**\n  @private\n*/\nPixelDatatype.isPacked = function (pixelDatatype) {\n  return (\n    pixelDatatype === PixelDatatype.UNSIGNED_INT_24_8 ||\n    pixelDatatype === PixelDatatype.UNSIGNED_SHORT_4_4_4_4 ||\n    pixelDatatype === PixelDatatype.UNSIGNED_SHORT_5_5_5_1 ||\n    pixelDatatype === PixelDatatype.UNSIGNED_SHORT_5_6_5\n  );\n};\n\n/**\n  @private\n*/\nPixelDatatype.sizeInBytes = function (pixelDatatype) {\n  switch (pixelDatatype) {\n    case PixelDatatype.UNSIGNED_BYTE:\n      return 1;\n    case PixelDatatype.UNSIGNED_SHORT:\n    case PixelDatatype.UNSIGNED_SHORT_4_4_4_4:\n    case PixelDatatype.UNSIGNED_SHORT_5_5_5_1:\n    case PixelDatatype.UNSIGNED_SHORT_5_6_5:\n    case PixelDatatype.HALF_FLOAT:\n      return 2;\n    case PixelDatatype.UNSIGNED_INT:\n    case PixelDatatype.FLOAT:\n    case PixelDatatype.UNSIGNED_INT_24_8:\n      return 4;\n  }\n};\n\n/**\n  @private\n*/\nPixelDatatype.validate = function (pixelDatatype) {\n  return (\n    pixelDatatype === PixelDatatype.UNSIGNED_BYTE ||\n    pixelDatatype === PixelDatatype.UNSIGNED_SHORT ||\n    pixelDatatype === PixelDatatype.UNSIGNED_INT ||\n    pixelDatatype === PixelDatatype.FLOAT ||\n    pixelDatatype === PixelDatatype.HALF_FLOAT ||\n    pixelDatatype === PixelDatatype.UNSIGNED_INT_24_8 ||\n    pixelDatatype === PixelDatatype.UNSIGNED_SHORT_4_4_4_4 ||\n    pixelDatatype === PixelDatatype.UNSIGNED_SHORT_5_5_5_1 ||\n    pixelDatatype === PixelDatatype.UNSIGNED_SHORT_5_6_5\n  );\n};\n\n/**\n * Determine which TypedArray class should be used for a given PixelDatatype.\n *\n * @param {PixelDatatype} pixelDatatype The pixel datatype.\n * @returns {function} The constructor for the appropriate TypedArray class.\n *\n * @private\n */\nPixelDatatype.getTypedArrayConstructor = function (pixelDatatype) {\n  const sizeInBytes = PixelDatatype.sizeInBytes(pixelDatatype);\n  if (sizeInBytes === Uint8Array.BYTES_PER_ELEMENT) {\n    return Uint8Array;\n  } else if (sizeInBytes === Uint16Array.BYTES_PER_ELEMENT) {\n    return Uint16Array;\n  } else if (\n    sizeInBytes === Float32Array.BYTES_PER_ELEMENT &&\n    pixelDatatype === PixelDatatype.FLOAT\n  ) {\n    return Float32Array;\n  }\n  return Uint32Array;\n};\n\nexport default Object.freeze(PixelDatatype);\n"],"mappings":"AAAA,OAAOA,cAAc,MAAM,2BAA2B;;AAEtD;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,aAAa,GAAG;EACpBC,aAAa,EAAEF,cAAc,CAACE,aAAa;EAC3CC,cAAc,EAAEH,cAAc,CAACG,cAAc;EAC7CC,YAAY,EAAEJ,cAAc,CAACI,YAAY;EACzCC,KAAK,EAAEL,cAAc,CAACK,KAAK;EAC3BC,UAAU,EAAEN,cAAc,CAACO,cAAc;EACzCC,iBAAiB,EAAER,cAAc,CAACQ,iBAAiB;EACnDC,sBAAsB,EAAET,cAAc,CAACS,sBAAsB;EAC7DC,sBAAsB,EAAEV,cAAc,CAACU,sBAAsB;EAC7DC,oBAAoB,EAAEX,cAAc,CAACW;AACvC,CAAC;;AAED;AACA;AACA;AACAV,aAAa,CAACW,eAAe,GAAG,UAAUC,aAAa,EAAEC,OAAO,EAAE;EAChE,QAAQD,aAAa;IACnB,KAAKZ,aAAa,CAACC,aAAa;MAC9B,OAAOF,cAAc,CAACE,aAAa;IACrC,KAAKD,aAAa,CAACE,cAAc;MAC/B,OAAOH,cAAc,CAACG,cAAc;IACtC,KAAKF,aAAa,CAACG,YAAY;MAC7B,OAAOJ,cAAc,CAACI,YAAY;IACpC,KAAKH,aAAa,CAACI,KAAK;MACtB,OAAOL,cAAc,CAACK,KAAK;IAC7B,KAAKJ,aAAa,CAACK,UAAU;MAC3B,OAAOQ,OAAO,CAACC,MAAM,GACjBf,cAAc,CAACM,UAAU,GACzBN,cAAc,CAACO,cAAc;IACnC,KAAKN,aAAa,CAACO,iBAAiB;MAClC,OAAOR,cAAc,CAACQ,iBAAiB;IACzC,KAAKP,aAAa,CAACQ,sBAAsB;MACvC,OAAOT,cAAc,CAACS,sBAAsB;IAC9C,KAAKR,aAAa,CAACS,sBAAsB;MACvC,OAAOV,cAAc,CAACU,sBAAsB;IAC9C,KAAKT,aAAa,CAACU,oBAAoB;MACrC,OAAOV,aAAa,CAACU,oBAAoB;EAC7C;AACF,CAAC;;AAED;AACA;AACA;AACAV,aAAa,CAACe,QAAQ,GAAG,UAAUH,aAAa,EAAE;EAChD,OACEA,aAAa,KAAKZ,aAAa,CAACO,iBAAiB,IACjDK,aAAa,KAAKZ,aAAa,CAACQ,sBAAsB,IACtDI,aAAa,KAAKZ,aAAa,CAACS,sBAAsB,IACtDG,aAAa,KAAKZ,aAAa,CAACU,oBAAoB;AAExD,CAAC;;AAED;AACA;AACA;AACAV,aAAa,CAACgB,WAAW,GAAG,UAAUJ,aAAa,EAAE;EACnD,QAAQA,aAAa;IACnB,KAAKZ,aAAa,CAACC,aAAa;MAC9B,OAAO,CAAC;IACV,KAAKD,aAAa,CAACE,cAAc;IACjC,KAAKF,aAAa,CAACQ,sBAAsB;IACzC,KAAKR,aAAa,CAACS,sBAAsB;IACzC,KAAKT,aAAa,CAACU,oBAAoB;IACvC,KAAKV,aAAa,CAACK,UAAU;MAC3B,OAAO,CAAC;IACV,KAAKL,aAAa,CAACG,YAAY;IAC/B,KAAKH,aAAa,CAACI,KAAK;IACxB,KAAKJ,aAAa,CAACO,iBAAiB;MAClC,OAAO,CAAC;EACZ;AACF,CAAC;;AAED;AACA;AACA;AACAP,aAAa,CAACiB,QAAQ,GAAG,UAAUL,aAAa,EAAE;EAChD,OACEA,aAAa,KAAKZ,aAAa,CAACC,aAAa,IAC7CW,aAAa,KAAKZ,aAAa,CAACE,cAAc,IAC9CU,aAAa,KAAKZ,aAAa,CAACG,YAAY,IAC5CS,aAAa,KAAKZ,aAAa,CAACI,KAAK,IACrCQ,aAAa,KAAKZ,aAAa,CAACK,UAAU,IAC1CO,aAAa,KAAKZ,aAAa,CAACO,iBAAiB,IACjDK,aAAa,KAAKZ,aAAa,CAACQ,sBAAsB,IACtDI,aAAa,KAAKZ,aAAa,CAACS,sBAAsB,IACtDG,aAAa,KAAKZ,aAAa,CAACU,oBAAoB;AAExD,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAV,aAAa,CAACkB,wBAAwB,GAAG,UAAUN,aAAa,EAAE;EAChE,MAAMI,WAAW,GAAGhB,aAAa,CAACgB,WAAW,CAACJ,aAAa,CAAC;EAC5D,IAAII,WAAW,KAAKG,UAAU,CAACC,iBAAiB,EAAE;IAChD,OAAOD,UAAU;EACnB,CAAC,MAAM,IAAIH,WAAW,KAAKK,WAAW,CAACD,iBAAiB,EAAE;IACxD,OAAOC,WAAW;EACpB,CAAC,MAAM,IACLL,WAAW,KAAKM,YAAY,CAACF,iBAAiB,IAC9CR,aAAa,KAAKZ,aAAa,CAACI,KAAK,EACrC;IACA,OAAOkB,YAAY;EACrB;EACA,OAAOC,WAAW;AACpB,CAAC;AAED,eAAeC,MAAM,CAACC,MAAM,CAACzB,aAAa,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}