{"ast":null,"code":"import JulianDate from \"./JulianDate.js\";\nimport TimeInterval from \"./TimeInterval.js\";\nconst MINIMUM_VALUE = Object.freeze(JulianDate.fromIso8601(\"0000-01-01T00:00:00Z\"));\nconst MAXIMUM_VALUE = Object.freeze(JulianDate.fromIso8601(\"9999-12-31T24:00:00Z\"));\nconst MAXIMUM_INTERVAL = Object.freeze(new TimeInterval({\n  start: MINIMUM_VALUE,\n  stop: MAXIMUM_VALUE\n}));\n\n/**\n * Constants related to ISO8601 support.\n *\n * @namespace\n *\n * @see {@link http://en.wikipedia.org/wiki/ISO_8601|ISO 8601 on Wikipedia}\n * @see JulianDate\n * @see TimeInterval\n */\nconst Iso8601 = {\n  /**\n   * A {@link JulianDate} representing the earliest time representable by an ISO8601 date.\n   * This is equivalent to the date string '0000-01-01T00:00:00Z'\n   *\n   * @type {JulianDate}\n   * @constant\n   */\n  MINIMUM_VALUE: MINIMUM_VALUE,\n  /**\n   * A {@link JulianDate} representing the latest time representable by an ISO8601 date.\n   * This is equivalent to the date string '9999-12-31T24:00:00Z'\n   *\n   * @type {JulianDate}\n   * @constant\n   */\n  MAXIMUM_VALUE: MAXIMUM_VALUE,\n  /**\n   * A {@link TimeInterval} representing the largest interval representable by an ISO8601 interval.\n   * This is equivalent to the interval string '0000-01-01T00:00:00Z/9999-12-31T24:00:00Z'\n   *\n   * @type {TimeInterval}\n   * @constant\n   */\n  MAXIMUM_INTERVAL: MAXIMUM_INTERVAL\n};\nexport default Iso8601;","map":{"version":3,"names":["JulianDate","TimeInterval","MINIMUM_VALUE","Object","freeze","fromIso8601","MAXIMUM_VALUE","MAXIMUM_INTERVAL","start","stop","Iso8601"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/engine/Source/Core/Iso8601.js"],"sourcesContent":["import JulianDate from \"./JulianDate.js\";\nimport TimeInterval from \"./TimeInterval.js\";\n\nconst MINIMUM_VALUE = Object.freeze(\n  JulianDate.fromIso8601(\"0000-01-01T00:00:00Z\"),\n);\nconst MAXIMUM_VALUE = Object.freeze(\n  JulianDate.fromIso8601(\"9999-12-31T24:00:00Z\"),\n);\nconst MAXIMUM_INTERVAL = Object.freeze(\n  new TimeInterval({\n    start: MINIMUM_VALUE,\n    stop: MAXIMUM_VALUE,\n  }),\n);\n\n/**\n * Constants related to ISO8601 support.\n *\n * @namespace\n *\n * @see {@link http://en.wikipedia.org/wiki/ISO_8601|ISO 8601 on Wikipedia}\n * @see JulianDate\n * @see TimeInterval\n */\nconst Iso8601 = {\n  /**\n   * A {@link JulianDate} representing the earliest time representable by an ISO8601 date.\n   * This is equivalent to the date string '0000-01-01T00:00:00Z'\n   *\n   * @type {JulianDate}\n   * @constant\n   */\n  MINIMUM_VALUE: MINIMUM_VALUE,\n\n  /**\n   * A {@link JulianDate} representing the latest time representable by an ISO8601 date.\n   * This is equivalent to the date string '9999-12-31T24:00:00Z'\n   *\n   * @type {JulianDate}\n   * @constant\n   */\n  MAXIMUM_VALUE: MAXIMUM_VALUE,\n\n  /**\n   * A {@link TimeInterval} representing the largest interval representable by an ISO8601 interval.\n   * This is equivalent to the interval string '0000-01-01T00:00:00Z/9999-12-31T24:00:00Z'\n   *\n   * @type {TimeInterval}\n   * @constant\n   */\n  MAXIMUM_INTERVAL: MAXIMUM_INTERVAL,\n};\nexport default Iso8601;\n"],"mappings":"AAAA,OAAOA,UAAU,MAAM,iBAAiB;AACxC,OAAOC,YAAY,MAAM,mBAAmB;AAE5C,MAAMC,aAAa,GAAGC,MAAM,CAACC,MAAM,CACjCJ,UAAU,CAACK,WAAW,CAAC,sBAAsB,CAC/C,CAAC;AACD,MAAMC,aAAa,GAAGH,MAAM,CAACC,MAAM,CACjCJ,UAAU,CAACK,WAAW,CAAC,sBAAsB,CAC/C,CAAC;AACD,MAAME,gBAAgB,GAAGJ,MAAM,CAACC,MAAM,CACpC,IAAIH,YAAY,CAAC;EACfO,KAAK,EAAEN,aAAa;EACpBO,IAAI,EAAEH;AACR,CAAC,CACH,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMI,OAAO,GAAG;EACd;AACF;AACA;AACA;AACA;AACA;AACA;EACER,aAAa,EAAEA,aAAa;EAE5B;AACF;AACA;AACA;AACA;AACA;AACA;EACEI,aAAa,EAAEA,aAAa;EAE5B;AACF;AACA;AACA;AACA;AACA;AACA;EACEC,gBAAgB,EAAEA;AACpB,CAAC;AACD,eAAeG,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}