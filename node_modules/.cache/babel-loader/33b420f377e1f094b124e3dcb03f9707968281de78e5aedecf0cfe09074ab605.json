{"ast":null,"code":"import defined from \"../Core/defined.js\";\nimport hasExtension from \"./hasExtension.js\";\n\n/**\n * Check if a content has metadata, either defined in its metadata field (3D Tiles 1.1)\n * or in the <code>3DTILES_metadata</code> extension. If so, look up the group with the\n * corresponding ID.\n *\n * @function\n *\n * @param {Cesium3DTileset} tileset The tileset to query for group metadata\n * @param {object} contentHeader the JSON header for a {@link Cesium3DTileContent}\n * @return {GroupMetadata} the group metadata, or <code>undefined</code> if not found\n * @private\n * @experimental This feature is using part of the 3D Tiles spec that is not final and is subject to change without Cesium's standard deprecation policy.\n */\nfunction findGroupMetadata(tileset, contentHeader) {\n  const metadataExtension = tileset.metadataExtension;\n  if (!defined(metadataExtension)) {\n    return undefined;\n  }\n  const groups = metadataExtension.groups;\n  const group = hasExtension(contentHeader, \"3DTILES_metadata\") ? contentHeader.extensions[\"3DTILES_metadata\"].group : contentHeader.group;\n  if (typeof group === \"number\") {\n    return groups[group];\n  }\n  const index = metadataExtension.groupIds.findIndex(function (id) {\n    return id === group;\n  });\n  return index >= 0 ? groups[index] : undefined;\n}\nexport default findGroupMetadata;","map":{"version":3,"names":["defined","hasExtension","findGroupMetadata","tileset","contentHeader","metadataExtension","undefined","groups","group","extensions","index","groupIds","findIndex","id"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/engine/Source/Scene/findGroupMetadata.js"],"sourcesContent":["import defined from \"../Core/defined.js\";\nimport hasExtension from \"./hasExtension.js\";\n\n/**\n * Check if a content has metadata, either defined in its metadata field (3D Tiles 1.1)\n * or in the <code>3DTILES_metadata</code> extension. If so, look up the group with the\n * corresponding ID.\n *\n * @function\n *\n * @param {Cesium3DTileset} tileset The tileset to query for group metadata\n * @param {object} contentHeader the JSON header for a {@link Cesium3DTileContent}\n * @return {GroupMetadata} the group metadata, or <code>undefined</code> if not found\n * @private\n * @experimental This feature is using part of the 3D Tiles spec that is not final and is subject to change without Cesium's standard deprecation policy.\n */\nfunction findGroupMetadata(tileset, contentHeader) {\n  const metadataExtension = tileset.metadataExtension;\n  if (!defined(metadataExtension)) {\n    return undefined;\n  }\n  const groups = metadataExtension.groups;\n\n  const group = hasExtension(contentHeader, \"3DTILES_metadata\")\n    ? contentHeader.extensions[\"3DTILES_metadata\"].group\n    : contentHeader.group;\n\n  if (typeof group === \"number\") {\n    return groups[group];\n  }\n\n  const index = metadataExtension.groupIds.findIndex(function (id) {\n    return id === group;\n  });\n\n  return index >= 0 ? groups[index] : undefined;\n}\n\nexport default findGroupMetadata;\n"],"mappings":"AAAA,OAAOA,OAAO,MAAM,oBAAoB;AACxC,OAAOC,YAAY,MAAM,mBAAmB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,iBAAiBA,CAACC,OAAO,EAAEC,aAAa,EAAE;EACjD,MAAMC,iBAAiB,GAAGF,OAAO,CAACE,iBAAiB;EACnD,IAAI,CAACL,OAAO,CAACK,iBAAiB,CAAC,EAAE;IAC/B,OAAOC,SAAS;EAClB;EACA,MAAMC,MAAM,GAAGF,iBAAiB,CAACE,MAAM;EAEvC,MAAMC,KAAK,GAAGP,YAAY,CAACG,aAAa,EAAE,kBAAkB,CAAC,GACzDA,aAAa,CAACK,UAAU,CAAC,kBAAkB,CAAC,CAACD,KAAK,GAClDJ,aAAa,CAACI,KAAK;EAEvB,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;IAC7B,OAAOD,MAAM,CAACC,KAAK,CAAC;EACtB;EAEA,MAAME,KAAK,GAAGL,iBAAiB,CAACM,QAAQ,CAACC,SAAS,CAAC,UAAUC,EAAE,EAAE;IAC/D,OAAOA,EAAE,KAAKL,KAAK;EACrB,CAAC,CAAC;EAEF,OAAOE,KAAK,IAAI,CAAC,GAAGH,MAAM,CAACG,KAAK,CAAC,GAAGJ,SAAS;AAC/C;AAEA,eAAeJ,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}