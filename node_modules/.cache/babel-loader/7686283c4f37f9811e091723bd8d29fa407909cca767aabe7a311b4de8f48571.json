{"ast":null,"code":"import BoundingRectangle from \"../Core/BoundingRectangle.js\";\nimport Color from \"../Core/Color.js\";\nimport defined from \"../Core/defined.js\";\nimport destroyObject from \"../Core/destroyObject.js\";\nimport PixelFormat from \"../Core/PixelFormat.js\";\nimport ClearCommand from \"../Renderer/ClearCommand.js\";\nimport DrawCommand from \"../Renderer/DrawCommand.js\";\nimport FramebufferManager from \"../Renderer/FramebufferManager.js\";\nimport Pass from \"../Renderer/Pass.js\";\nimport PixelDatatype from \"../Renderer/PixelDatatype.js\";\nimport RenderState from \"../Renderer/RenderState.js\";\nimport Sampler from \"../Renderer/Sampler.js\";\nimport ShaderSource from \"../Renderer/ShaderSource.js\";\nimport Texture from \"../Renderer/Texture.js\";\nimport CompareAndPackTranslucentDepth from \"../Shaders/CompareAndPackTranslucentDepth.js\";\nimport CompositeTranslucentClassification from \"../Shaders/PostProcessStages/CompositeTranslucentClassification.js\";\nimport BlendingState from \"./BlendingState.js\";\nimport StencilConstants from \"./StencilConstants.js\";\nimport StencilFunction from \"./StencilFunction.js\";\nconst debugShowPackedDepth = false;\n\n/**\n * Handles buffers, drawing, and deriving commands needed for classifying translucent 3D Tiles.\n * Uses a depth texture, so classification on translucent 3D Tiles is not available in Internet Explorer.\n *\n * @private\n */\nfunction TranslucentTileClassification(context) {\n  this._drawClassificationFBO = new FramebufferManager({\n    createDepthAttachments: false\n  });\n  this._accumulationFBO = new FramebufferManager({\n    createDepthAttachments: false\n  });\n  this._packFBO = new FramebufferManager();\n  this._opaqueDepthStencilTexture = undefined;\n\n  // Reference to either colorTexture or accumulationTexture\n  this._textureToComposite = undefined;\n  this._translucentDepthStencilTexture = undefined;\n  this._packDepthCommand = undefined;\n  this._accumulateCommand = undefined;\n  this._compositeCommand = undefined;\n  this._copyCommand = undefined;\n  this._clearColorCommand = new ClearCommand({\n    color: new Color(0.0, 0.0, 0.0, 0.0),\n    owner: this\n  });\n  this._clearDepthStencilCommand = new ClearCommand({\n    depth: 1.0,\n    stencil: 0,\n    owner: this\n  });\n  this._supported = context.depthTexture;\n  this._viewport = new BoundingRectangle();\n  this._rsDepth = undefined;\n  this._rsAccumulate = undefined;\n  this._rsComp = undefined;\n  this._useScissorTest = undefined;\n  this._scissorRectangle = undefined;\n  this._hasTranslucentDepth = false;\n  this._frustumsDrawn = 0;\n}\nObject.defineProperties(TranslucentTileClassification.prototype, {\n  /**\n   * Gets whether or not translucent depth was rendered.\n   * @memberof TranslucentTileClassification.prototype\n   *\n   * @type {boolean}\n   * @readonly\n   */\n  hasTranslucentDepth: {\n    get: function () {\n      return this._hasTranslucentDepth;\n    }\n  }\n});\nfunction destroyTextures(transpClass) {\n  transpClass._textureToComposite = undefined;\n  transpClass._translucentDepthStencilTexture = transpClass._translucentDepthStencilTexture && !transpClass._translucentDepthStencilTexture.isDestroyed() && transpClass._translucentDepthStencilTexture.destroy();\n}\nfunction destroyFramebuffers(transpClass) {\n  transpClass._drawClassificationFBO.destroy();\n  transpClass._accumulationFBO.destroy();\n  transpClass._packFBO.destroy();\n}\nfunction updateTextures(transpClass, context, width, height) {\n  destroyTextures(transpClass);\n  transpClass._translucentDepthStencilTexture = new Texture({\n    context: context,\n    width: width,\n    height: height,\n    pixelFormat: PixelFormat.DEPTH_STENCIL,\n    pixelDatatype: PixelDatatype.UNSIGNED_INT_24_8,\n    sampler: Sampler.NEAREST\n  });\n}\nfunction updateFramebuffers(transpClass, context, width, height) {\n  destroyFramebuffers(transpClass);\n  transpClass._drawClassificationFBO.setDepthStencilTexture(transpClass._translucentDepthStencilTexture);\n  transpClass._drawClassificationFBO.update(context, width, height);\n  transpClass._accumulationFBO.setDepthStencilTexture(transpClass._translucentDepthStencilTexture);\n  transpClass._accumulationFBO.update(context, width, height);\n  transpClass._packFBO.update(context, width, height);\n}\nfunction updateResources(transpClass, context, passState, globeDepthStencilTexture) {\n  if (!transpClass.isSupported()) {\n    return;\n  }\n  transpClass._opaqueDepthStencilTexture = globeDepthStencilTexture;\n  const width = transpClass._opaqueDepthStencilTexture.width;\n  const height = transpClass._opaqueDepthStencilTexture.height;\n  if (transpClass._drawClassificationFBO.isDirty(width, height)) {\n    updateTextures(transpClass, context, width, height);\n    updateFramebuffers(transpClass, context, width, height);\n  }\n  let fs;\n  let uniformMap;\n  if (!defined(transpClass._packDepthCommand)) {\n    fs = new ShaderSource({\n      sources: [CompareAndPackTranslucentDepth]\n    });\n    uniformMap = {\n      u_opaqueDepthTexture: function () {\n        return transpClass._opaqueDepthStencilTexture;\n      },\n      u_translucentDepthTexture: function () {\n        return transpClass._translucentDepthStencilTexture;\n      }\n    };\n    transpClass._packDepthCommand = context.createViewportQuadCommand(fs, {\n      uniformMap: uniformMap,\n      owner: transpClass\n    });\n  }\n  if (!defined(transpClass._compositeCommand)) {\n    fs = new ShaderSource({\n      sources: [CompositeTranslucentClassification]\n    });\n    uniformMap = {\n      colorTexture: function () {\n        return transpClass._textureToComposite;\n      }\n    };\n    if (debugShowPackedDepth) {\n      fs.defines = [\"DEBUG_SHOW_DEPTH\"];\n      uniformMap.u_packedTranslucentDepth = function () {\n        return transpClass._packFBO.getColorTexture();\n      };\n    }\n    transpClass._compositeCommand = context.createViewportQuadCommand(fs, {\n      uniformMap: uniformMap,\n      owner: transpClass\n    });\n    const compositeCommand = transpClass._compositeCommand;\n    const compositeProgram = compositeCommand.shaderProgram;\n    const compositePickProgram = context.shaderCache.createDerivedShaderProgram(compositeProgram, \"pick\", {\n      vertexShaderSource: compositeProgram.vertexShaderSource,\n      fragmentShaderSource: new ShaderSource({\n        sources: fs.sources,\n        defines: [\"PICK\"]\n      }),\n      attributeLocations: compositeProgram._attributeLocations\n    });\n    const compositePickCommand = DrawCommand.shallowClone(compositeCommand);\n    compositePickCommand.shaderProgram = compositePickProgram;\n    compositeCommand.derivedCommands.pick = compositePickCommand;\n  }\n  if (!defined(transpClass._copyCommand)) {\n    fs = new ShaderSource({\n      sources: [CompositeTranslucentClassification]\n    });\n    uniformMap = {\n      colorTexture: function () {\n        return transpClass._drawClassificationFBO.getColorTexture();\n      }\n    };\n    transpClass._copyCommand = context.createViewportQuadCommand(fs, {\n      uniformMap: uniformMap,\n      owner: transpClass\n    });\n  }\n  if (!defined(transpClass._accumulateCommand)) {\n    fs = new ShaderSource({\n      sources: [CompositeTranslucentClassification]\n    });\n    uniformMap = {\n      colorTexture: function () {\n        return transpClass._drawClassificationFBO.getColorTexture();\n      }\n    };\n    transpClass._accumulateCommand = context.createViewportQuadCommand(fs, {\n      uniformMap: uniformMap,\n      owner: transpClass\n    });\n  }\n  transpClass._viewport.width = width;\n  transpClass._viewport.height = height;\n  const useScissorTest = !BoundingRectangle.equals(transpClass._viewport, passState.viewport);\n  let updateScissor = useScissorTest !== transpClass._useScissorTest;\n  transpClass._useScissorTest = useScissorTest;\n  if (!BoundingRectangle.equals(transpClass._scissorRectangle, passState.viewport)) {\n    transpClass._scissorRectangle = BoundingRectangle.clone(passState.viewport, transpClass._scissorRectangle);\n    updateScissor = true;\n  }\n  if (!defined(transpClass._rsDepth) || !BoundingRectangle.equals(transpClass._viewport, transpClass._rsDepth.viewport) || updateScissor) {\n    transpClass._rsDepth = RenderState.fromCache({\n      viewport: transpClass._viewport,\n      scissorTest: {\n        enabled: transpClass._useScissorTest,\n        rectangle: transpClass._scissorRectangle\n      }\n    });\n  }\n  if (defined(transpClass._packDepthCommand)) {\n    transpClass._packDepthCommand.renderState = transpClass._rsDepth;\n  }\n  if (!defined(transpClass._rsAccumulate) || !BoundingRectangle.equals(transpClass._viewport, transpClass._rsAccumulate.viewport) || updateScissor) {\n    transpClass._rsAccumulate = RenderState.fromCache({\n      viewport: transpClass._viewport,\n      scissorTest: {\n        enabled: transpClass._useScissorTest,\n        rectangle: transpClass._scissorRectangle\n      },\n      stencilTest: {\n        enabled: true,\n        frontFunction: StencilFunction.EQUAL,\n        reference: StencilConstants.CESIUM_3D_TILE_MASK\n      }\n    });\n  }\n  if (defined(transpClass._accumulateCommand)) {\n    transpClass._accumulateCommand.renderState = transpClass._rsAccumulate;\n  }\n  if (!defined(transpClass._rsComp) || !BoundingRectangle.equals(transpClass._viewport, transpClass._rsComp.viewport) || updateScissor) {\n    transpClass._rsComp = RenderState.fromCache({\n      viewport: transpClass._viewport,\n      scissorTest: {\n        enabled: transpClass._useScissorTest,\n        rectangle: transpClass._scissorRectangle\n      },\n      blending: BlendingState.ALPHA_BLEND\n    });\n  }\n  if (defined(transpClass._compositeCommand)) {\n    transpClass._compositeCommand.renderState = transpClass._rsComp;\n    transpClass._compositeCommand.derivedCommands.pick.renderState = transpClass._rsComp;\n  }\n}\nTranslucentTileClassification.prototype.executeTranslucentCommands = function (scene, executeCommand, passState, commands, globeDepthStencilTexture) {\n  // Check for translucent commands that should be classified\n  const useLogDepth = scene.frameState.useLogDepth;\n  const context = scene.context;\n  const framebuffer = passState.framebuffer;\n  for (let i = 0; i < commands.length; ++i) {\n    let command = commands[i];\n    command = useLogDepth ? command.derivedCommands.logDepth.command : command;\n    if (command.depthForTranslucentClassification) {\n      this._hasTranslucentDepth = true;\n      break;\n    }\n  }\n  if (!this._hasTranslucentDepth) {\n    return;\n  }\n  updateResources(this, context, passState, globeDepthStencilTexture);\n\n  // Get translucent depth\n  passState.framebuffer = this._drawClassificationFBO.framebuffer;\n\n  // Clear depth for multifrustum\n  this._clearDepthStencilCommand.execute(context, passState);\n  for (let i = 0; i < commands.length; ++i) {\n    let command = commands[i];\n    command = useLogDepth ? command.derivedCommands.logDepth.command : command;\n    if (!command.depthForTranslucentClassification) {\n      continue;\n    }\n\n    // Depth-only commands are created for all translucent 3D Tiles commands\n    const depthOnlyCommand = command.derivedCommands.depth.depthOnlyCommand;\n    executeCommand(depthOnlyCommand, scene, passState);\n  }\n  this._frustumsDrawn += this._hasTranslucentDepth ? 1 : 0;\n\n  // Pack depth if any translucent depth commands were performed\n  if (this._hasTranslucentDepth) {\n    passState.framebuffer = this._packFBO.framebuffer;\n    this._packDepthCommand.execute(context, passState);\n  }\n  passState.framebuffer = framebuffer;\n};\nTranslucentTileClassification.prototype.executeClassificationCommands = function (scene, executeCommand, passState, frustumCommands) {\n  if (!this._hasTranslucentDepth) {\n    return;\n  }\n  const context = scene.context;\n  const uniformState = context.uniformState;\n  const framebuffer = passState.framebuffer;\n  passState.framebuffer = this._accumulationFBO.framebuffer;\n  this._accumulateCommand.execute(context, passState);\n  passState.framebuffer = this._drawClassificationFBO.framebuffer;\n  if (this._frustumsDrawn > 1) {\n    this._clearColorCommand.execute(context, passState);\n  }\n  uniformState.updatePass(Pass.CESIUM_3D_TILE_CLASSIFICATION);\n  const swapGlobeDepth = uniformState.globeDepthTexture;\n  uniformState.globeDepthTexture = this._packFBO.getColorTexture();\n  const commands = frustumCommands.commands[Pass.CESIUM_3D_TILE_CLASSIFICATION];\n  const length = frustumCommands.indices[Pass.CESIUM_3D_TILE_CLASSIFICATION];\n  for (let i = 0; i < length; ++i) {\n    executeCommand(commands[i], scene, passState);\n  }\n  uniformState.globeDepthTexture = swapGlobeDepth;\n  passState.framebuffer = framebuffer;\n  if (this._frustumsDrawn === 1) {\n    return;\n  }\n  passState.framebuffer = this._accumulationFBO.framebuffer;\n  this._accumulateCommand.execute(context, passState);\n  passState.framebuffer = framebuffer;\n};\nTranslucentTileClassification.prototype.execute = function (scene, passState) {\n  if (!this._hasTranslucentDepth) {\n    return;\n  }\n  if (this._frustumsDrawn === 1) {\n    this._textureToComposite = this._drawClassificationFBO.getColorTexture();\n  } else {\n    this._textureToComposite = this._accumulationFBO.getColorTexture();\n  }\n  const command = scene.frameState.passes.pick ? this._compositeCommand.derivedCommands.pick : this._compositeCommand;\n  command.execute(scene.context, passState);\n  clear(this, scene, passState);\n};\nfunction clear(translucentTileClassification, scene, passState) {\n  if (!translucentTileClassification._hasTranslucentDepth) {\n    return;\n  }\n  const framebuffer = passState.framebuffer;\n  passState.framebuffer = translucentTileClassification._drawClassificationFBO.framebuffer;\n  translucentTileClassification._clearColorCommand.execute(scene._context, passState);\n  passState.framebuffer = framebuffer;\n  if (translucentTileClassification._frustumsDrawn > 1) {\n    passState.framebuffer = translucentTileClassification._accumulationFBO.framebuffer;\n    translucentTileClassification._clearColorCommand.execute(scene._context, passState);\n  }\n  translucentTileClassification._hasTranslucentDepth = false;\n  translucentTileClassification._frustumsDrawn = 0;\n}\nTranslucentTileClassification.prototype.isSupported = function () {\n  return this._supported;\n};\nTranslucentTileClassification.prototype.isDestroyed = function () {\n  return false;\n};\nTranslucentTileClassification.prototype.destroy = function () {\n  destroyTextures(this);\n  destroyFramebuffers(this);\n  if (defined(this._compositeCommand)) {\n    this._compositeCommand.shaderProgram = this._compositeCommand.shaderProgram && this._compositeCommand.shaderProgram.destroy();\n  }\n  if (defined(this._packDepthCommand)) {\n    this._packDepthCommand.shaderProgram = this._packDepthCommand.shaderProgram && this._packDepthCommand.shaderProgram.destroy();\n  }\n  return destroyObject(this);\n};\nexport default TranslucentTileClassification;","map":{"version":3,"names":["BoundingRectangle","Color","defined","destroyObject","PixelFormat","ClearCommand","DrawCommand","FramebufferManager","Pass","PixelDatatype","RenderState","Sampler","ShaderSource","Texture","CompareAndPackTranslucentDepth","CompositeTranslucentClassification","BlendingState","StencilConstants","StencilFunction","debugShowPackedDepth","TranslucentTileClassification","context","_drawClassificationFBO","createDepthAttachments","_accumulationFBO","_packFBO","_opaqueDepthStencilTexture","undefined","_textureToComposite","_translucentDepthStencilTexture","_packDepthCommand","_accumulateCommand","_compositeCommand","_copyCommand","_clearColorCommand","color","owner","_clearDepthStencilCommand","depth","stencil","_supported","depthTexture","_viewport","_rsDepth","_rsAccumulate","_rsComp","_useScissorTest","_scissorRectangle","_hasTranslucentDepth","_frustumsDrawn","Object","defineProperties","prototype","hasTranslucentDepth","get","destroyTextures","transpClass","isDestroyed","destroy","destroyFramebuffers","updateTextures","width","height","pixelFormat","DEPTH_STENCIL","pixelDatatype","UNSIGNED_INT_24_8","sampler","NEAREST","updateFramebuffers","setDepthStencilTexture","update","updateResources","passState","globeDepthStencilTexture","isSupported","isDirty","fs","uniformMap","sources","u_opaqueDepthTexture","u_translucentDepthTexture","createViewportQuadCommand","colorTexture","defines","u_packedTranslucentDepth","getColorTexture","compositeCommand","compositeProgram","shaderProgram","compositePickProgram","shaderCache","createDerivedShaderProgram","vertexShaderSource","fragmentShaderSource","attributeLocations","_attributeLocations","compositePickCommand","shallowClone","derivedCommands","pick","useScissorTest","equals","viewport","updateScissor","clone","fromCache","scissorTest","enabled","rectangle","renderState","stencilTest","frontFunction","EQUAL","reference","CESIUM_3D_TILE_MASK","blending","ALPHA_BLEND","executeTranslucentCommands","scene","executeCommand","commands","useLogDepth","frameState","framebuffer","i","length","command","logDepth","depthForTranslucentClassification","execute","depthOnlyCommand","executeClassificationCommands","frustumCommands","uniformState","updatePass","CESIUM_3D_TILE_CLASSIFICATION","swapGlobeDepth","globeDepthTexture","indices","passes","clear","translucentTileClassification","_context"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/engine/Source/Scene/TranslucentTileClassification.js"],"sourcesContent":["import BoundingRectangle from \"../Core/BoundingRectangle.js\";\nimport Color from \"../Core/Color.js\";\nimport defined from \"../Core/defined.js\";\nimport destroyObject from \"../Core/destroyObject.js\";\nimport PixelFormat from \"../Core/PixelFormat.js\";\nimport ClearCommand from \"../Renderer/ClearCommand.js\";\nimport DrawCommand from \"../Renderer/DrawCommand.js\";\nimport FramebufferManager from \"../Renderer/FramebufferManager.js\";\nimport Pass from \"../Renderer/Pass.js\";\nimport PixelDatatype from \"../Renderer/PixelDatatype.js\";\nimport RenderState from \"../Renderer/RenderState.js\";\nimport Sampler from \"../Renderer/Sampler.js\";\nimport ShaderSource from \"../Renderer/ShaderSource.js\";\nimport Texture from \"../Renderer/Texture.js\";\nimport CompareAndPackTranslucentDepth from \"../Shaders/CompareAndPackTranslucentDepth.js\";\nimport CompositeTranslucentClassification from \"../Shaders/PostProcessStages/CompositeTranslucentClassification.js\";\nimport BlendingState from \"./BlendingState.js\";\nimport StencilConstants from \"./StencilConstants.js\";\nimport StencilFunction from \"./StencilFunction.js\";\n\nconst debugShowPackedDepth = false;\n\n/**\n * Handles buffers, drawing, and deriving commands needed for classifying translucent 3D Tiles.\n * Uses a depth texture, so classification on translucent 3D Tiles is not available in Internet Explorer.\n *\n * @private\n */\nfunction TranslucentTileClassification(context) {\n  this._drawClassificationFBO = new FramebufferManager({\n    createDepthAttachments: false,\n  });\n  this._accumulationFBO = new FramebufferManager({\n    createDepthAttachments: false,\n  });\n  this._packFBO = new FramebufferManager();\n\n  this._opaqueDepthStencilTexture = undefined;\n\n  // Reference to either colorTexture or accumulationTexture\n  this._textureToComposite = undefined;\n\n  this._translucentDepthStencilTexture = undefined;\n\n  this._packDepthCommand = undefined;\n  this._accumulateCommand = undefined;\n  this._compositeCommand = undefined;\n  this._copyCommand = undefined;\n\n  this._clearColorCommand = new ClearCommand({\n    color: new Color(0.0, 0.0, 0.0, 0.0),\n    owner: this,\n  });\n\n  this._clearDepthStencilCommand = new ClearCommand({\n    depth: 1.0,\n    stencil: 0,\n    owner: this,\n  });\n\n  this._supported = context.depthTexture;\n\n  this._viewport = new BoundingRectangle();\n  this._rsDepth = undefined;\n  this._rsAccumulate = undefined;\n  this._rsComp = undefined;\n  this._useScissorTest = undefined;\n  this._scissorRectangle = undefined;\n\n  this._hasTranslucentDepth = false;\n  this._frustumsDrawn = 0;\n}\n\nObject.defineProperties(TranslucentTileClassification.prototype, {\n  /**\n   * Gets whether or not translucent depth was rendered.\n   * @memberof TranslucentTileClassification.prototype\n   *\n   * @type {boolean}\n   * @readonly\n   */\n  hasTranslucentDepth: {\n    get: function () {\n      return this._hasTranslucentDepth;\n    },\n  },\n});\n\nfunction destroyTextures(transpClass) {\n  transpClass._textureToComposite = undefined;\n\n  transpClass._translucentDepthStencilTexture =\n    transpClass._translucentDepthStencilTexture &&\n    !transpClass._translucentDepthStencilTexture.isDestroyed() &&\n    transpClass._translucentDepthStencilTexture.destroy();\n}\n\nfunction destroyFramebuffers(transpClass) {\n  transpClass._drawClassificationFBO.destroy();\n  transpClass._accumulationFBO.destroy();\n  transpClass._packFBO.destroy();\n}\n\nfunction updateTextures(transpClass, context, width, height) {\n  destroyTextures(transpClass);\n\n  transpClass._translucentDepthStencilTexture = new Texture({\n    context: context,\n    width: width,\n    height: height,\n    pixelFormat: PixelFormat.DEPTH_STENCIL,\n    pixelDatatype: PixelDatatype.UNSIGNED_INT_24_8,\n    sampler: Sampler.NEAREST,\n  });\n}\n\nfunction updateFramebuffers(transpClass, context, width, height) {\n  destroyFramebuffers(transpClass);\n  transpClass._drawClassificationFBO.setDepthStencilTexture(\n    transpClass._translucentDepthStencilTexture,\n  );\n  transpClass._drawClassificationFBO.update(context, width, height);\n\n  transpClass._accumulationFBO.setDepthStencilTexture(\n    transpClass._translucentDepthStencilTexture,\n  );\n  transpClass._accumulationFBO.update(context, width, height);\n\n  transpClass._packFBO.update(context, width, height);\n}\n\nfunction updateResources(\n  transpClass,\n  context,\n  passState,\n  globeDepthStencilTexture,\n) {\n  if (!transpClass.isSupported()) {\n    return;\n  }\n\n  transpClass._opaqueDepthStencilTexture = globeDepthStencilTexture;\n\n  const width = transpClass._opaqueDepthStencilTexture.width;\n  const height = transpClass._opaqueDepthStencilTexture.height;\n  if (transpClass._drawClassificationFBO.isDirty(width, height)) {\n    updateTextures(transpClass, context, width, height);\n    updateFramebuffers(transpClass, context, width, height);\n  }\n\n  let fs;\n  let uniformMap;\n\n  if (!defined(transpClass._packDepthCommand)) {\n    fs = new ShaderSource({\n      sources: [CompareAndPackTranslucentDepth],\n    });\n\n    uniformMap = {\n      u_opaqueDepthTexture: function () {\n        return transpClass._opaqueDepthStencilTexture;\n      },\n      u_translucentDepthTexture: function () {\n        return transpClass._translucentDepthStencilTexture;\n      },\n    };\n\n    transpClass._packDepthCommand = context.createViewportQuadCommand(fs, {\n      uniformMap: uniformMap,\n      owner: transpClass,\n    });\n  }\n\n  if (!defined(transpClass._compositeCommand)) {\n    fs = new ShaderSource({\n      sources: [CompositeTranslucentClassification],\n    });\n\n    uniformMap = {\n      colorTexture: function () {\n        return transpClass._textureToComposite;\n      },\n    };\n\n    if (debugShowPackedDepth) {\n      fs.defines = [\"DEBUG_SHOW_DEPTH\"];\n      uniformMap.u_packedTranslucentDepth = function () {\n        return transpClass._packFBO.getColorTexture();\n      };\n    }\n\n    transpClass._compositeCommand = context.createViewportQuadCommand(fs, {\n      uniformMap: uniformMap,\n      owner: transpClass,\n    });\n\n    const compositeCommand = transpClass._compositeCommand;\n    const compositeProgram = compositeCommand.shaderProgram;\n    const compositePickProgram = context.shaderCache.createDerivedShaderProgram(\n      compositeProgram,\n      \"pick\",\n      {\n        vertexShaderSource: compositeProgram.vertexShaderSource,\n        fragmentShaderSource: new ShaderSource({\n          sources: fs.sources,\n          defines: [\"PICK\"],\n        }),\n        attributeLocations: compositeProgram._attributeLocations,\n      },\n    );\n    const compositePickCommand = DrawCommand.shallowClone(compositeCommand);\n    compositePickCommand.shaderProgram = compositePickProgram;\n    compositeCommand.derivedCommands.pick = compositePickCommand;\n  }\n\n  if (!defined(transpClass._copyCommand)) {\n    fs = new ShaderSource({\n      sources: [CompositeTranslucentClassification],\n    });\n\n    uniformMap = {\n      colorTexture: function () {\n        return transpClass._drawClassificationFBO.getColorTexture();\n      },\n    };\n\n    transpClass._copyCommand = context.createViewportQuadCommand(fs, {\n      uniformMap: uniformMap,\n      owner: transpClass,\n    });\n  }\n\n  if (!defined(transpClass._accumulateCommand)) {\n    fs = new ShaderSource({\n      sources: [CompositeTranslucentClassification],\n    });\n\n    uniformMap = {\n      colorTexture: function () {\n        return transpClass._drawClassificationFBO.getColorTexture();\n      },\n    };\n\n    transpClass._accumulateCommand = context.createViewportQuadCommand(fs, {\n      uniformMap: uniformMap,\n      owner: transpClass,\n    });\n  }\n\n  transpClass._viewport.width = width;\n  transpClass._viewport.height = height;\n\n  const useScissorTest = !BoundingRectangle.equals(\n    transpClass._viewport,\n    passState.viewport,\n  );\n  let updateScissor = useScissorTest !== transpClass._useScissorTest;\n  transpClass._useScissorTest = useScissorTest;\n\n  if (\n    !BoundingRectangle.equals(transpClass._scissorRectangle, passState.viewport)\n  ) {\n    transpClass._scissorRectangle = BoundingRectangle.clone(\n      passState.viewport,\n      transpClass._scissorRectangle,\n    );\n    updateScissor = true;\n  }\n\n  if (\n    !defined(transpClass._rsDepth) ||\n    !BoundingRectangle.equals(\n      transpClass._viewport,\n      transpClass._rsDepth.viewport,\n    ) ||\n    updateScissor\n  ) {\n    transpClass._rsDepth = RenderState.fromCache({\n      viewport: transpClass._viewport,\n      scissorTest: {\n        enabled: transpClass._useScissorTest,\n        rectangle: transpClass._scissorRectangle,\n      },\n    });\n  }\n\n  if (defined(transpClass._packDepthCommand)) {\n    transpClass._packDepthCommand.renderState = transpClass._rsDepth;\n  }\n\n  if (\n    !defined(transpClass._rsAccumulate) ||\n    !BoundingRectangle.equals(\n      transpClass._viewport,\n      transpClass._rsAccumulate.viewport,\n    ) ||\n    updateScissor\n  ) {\n    transpClass._rsAccumulate = RenderState.fromCache({\n      viewport: transpClass._viewport,\n      scissorTest: {\n        enabled: transpClass._useScissorTest,\n        rectangle: transpClass._scissorRectangle,\n      },\n      stencilTest: {\n        enabled: true,\n        frontFunction: StencilFunction.EQUAL,\n        reference: StencilConstants.CESIUM_3D_TILE_MASK,\n      },\n    });\n  }\n\n  if (defined(transpClass._accumulateCommand)) {\n    transpClass._accumulateCommand.renderState = transpClass._rsAccumulate;\n  }\n\n  if (\n    !defined(transpClass._rsComp) ||\n    !BoundingRectangle.equals(\n      transpClass._viewport,\n      transpClass._rsComp.viewport,\n    ) ||\n    updateScissor\n  ) {\n    transpClass._rsComp = RenderState.fromCache({\n      viewport: transpClass._viewport,\n      scissorTest: {\n        enabled: transpClass._useScissorTest,\n        rectangle: transpClass._scissorRectangle,\n      },\n      blending: BlendingState.ALPHA_BLEND,\n    });\n  }\n\n  if (defined(transpClass._compositeCommand)) {\n    transpClass._compositeCommand.renderState = transpClass._rsComp;\n    transpClass._compositeCommand.derivedCommands.pick.renderState =\n      transpClass._rsComp;\n  }\n}\n\nTranslucentTileClassification.prototype.executeTranslucentCommands = function (\n  scene,\n  executeCommand,\n  passState,\n  commands,\n  globeDepthStencilTexture,\n) {\n  // Check for translucent commands that should be classified\n  const useLogDepth = scene.frameState.useLogDepth;\n  const context = scene.context;\n  const framebuffer = passState.framebuffer;\n\n  for (let i = 0; i < commands.length; ++i) {\n    let command = commands[i];\n    command = useLogDepth ? command.derivedCommands.logDepth.command : command;\n\n    if (command.depthForTranslucentClassification) {\n      this._hasTranslucentDepth = true;\n      break;\n    }\n  }\n\n  if (!this._hasTranslucentDepth) {\n    return;\n  }\n\n  updateResources(this, context, passState, globeDepthStencilTexture);\n\n  // Get translucent depth\n  passState.framebuffer = this._drawClassificationFBO.framebuffer;\n\n  // Clear depth for multifrustum\n  this._clearDepthStencilCommand.execute(context, passState);\n\n  for (let i = 0; i < commands.length; ++i) {\n    let command = commands[i];\n    command = useLogDepth ? command.derivedCommands.logDepth.command : command;\n\n    if (!command.depthForTranslucentClassification) {\n      continue;\n    }\n\n    // Depth-only commands are created for all translucent 3D Tiles commands\n    const depthOnlyCommand = command.derivedCommands.depth.depthOnlyCommand;\n    executeCommand(depthOnlyCommand, scene, passState);\n  }\n\n  this._frustumsDrawn += this._hasTranslucentDepth ? 1 : 0;\n\n  // Pack depth if any translucent depth commands were performed\n  if (this._hasTranslucentDepth) {\n    passState.framebuffer = this._packFBO.framebuffer;\n    this._packDepthCommand.execute(context, passState);\n  }\n\n  passState.framebuffer = framebuffer;\n};\n\nTranslucentTileClassification.prototype.executeClassificationCommands =\n  function (scene, executeCommand, passState, frustumCommands) {\n    if (!this._hasTranslucentDepth) {\n      return;\n    }\n\n    const context = scene.context;\n    const uniformState = context.uniformState;\n    const framebuffer = passState.framebuffer;\n\n    passState.framebuffer = this._accumulationFBO.framebuffer;\n    this._accumulateCommand.execute(context, passState);\n\n    passState.framebuffer = this._drawClassificationFBO.framebuffer;\n    if (this._frustumsDrawn > 1) {\n      this._clearColorCommand.execute(context, passState);\n    }\n\n    uniformState.updatePass(Pass.CESIUM_3D_TILE_CLASSIFICATION);\n    const swapGlobeDepth = uniformState.globeDepthTexture;\n    uniformState.globeDepthTexture = this._packFBO.getColorTexture();\n    const commands =\n      frustumCommands.commands[Pass.CESIUM_3D_TILE_CLASSIFICATION];\n    const length = frustumCommands.indices[Pass.CESIUM_3D_TILE_CLASSIFICATION];\n    for (let i = 0; i < length; ++i) {\n      executeCommand(commands[i], scene, passState);\n    }\n\n    uniformState.globeDepthTexture = swapGlobeDepth;\n    passState.framebuffer = framebuffer;\n\n    if (this._frustumsDrawn === 1) {\n      return;\n    }\n\n    passState.framebuffer = this._accumulationFBO.framebuffer;\n    this._accumulateCommand.execute(context, passState);\n\n    passState.framebuffer = framebuffer;\n  };\n\nTranslucentTileClassification.prototype.execute = function (scene, passState) {\n  if (!this._hasTranslucentDepth) {\n    return;\n  }\n  if (this._frustumsDrawn === 1) {\n    this._textureToComposite = this._drawClassificationFBO.getColorTexture();\n  } else {\n    this._textureToComposite = this._accumulationFBO.getColorTexture();\n  }\n\n  const command = scene.frameState.passes.pick\n    ? this._compositeCommand.derivedCommands.pick\n    : this._compositeCommand;\n  command.execute(scene.context, passState);\n\n  clear(this, scene, passState);\n};\n\nfunction clear(translucentTileClassification, scene, passState) {\n  if (!translucentTileClassification._hasTranslucentDepth) {\n    return;\n  }\n\n  const framebuffer = passState.framebuffer;\n\n  passState.framebuffer =\n    translucentTileClassification._drawClassificationFBO.framebuffer;\n  translucentTileClassification._clearColorCommand.execute(\n    scene._context,\n    passState,\n  );\n\n  passState.framebuffer = framebuffer;\n\n  if (translucentTileClassification._frustumsDrawn > 1) {\n    passState.framebuffer =\n      translucentTileClassification._accumulationFBO.framebuffer;\n    translucentTileClassification._clearColorCommand.execute(\n      scene._context,\n      passState,\n    );\n  }\n\n  translucentTileClassification._hasTranslucentDepth = false;\n  translucentTileClassification._frustumsDrawn = 0;\n}\n\nTranslucentTileClassification.prototype.isSupported = function () {\n  return this._supported;\n};\n\nTranslucentTileClassification.prototype.isDestroyed = function () {\n  return false;\n};\n\nTranslucentTileClassification.prototype.destroy = function () {\n  destroyTextures(this);\n  destroyFramebuffers(this);\n\n  if (defined(this._compositeCommand)) {\n    this._compositeCommand.shaderProgram =\n      this._compositeCommand.shaderProgram &&\n      this._compositeCommand.shaderProgram.destroy();\n  }\n\n  if (defined(this._packDepthCommand)) {\n    this._packDepthCommand.shaderProgram =\n      this._packDepthCommand.shaderProgram &&\n      this._packDepthCommand.shaderProgram.destroy();\n  }\n  return destroyObject(this);\n};\n\nexport default TranslucentTileClassification;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}