{"ast":null,"code":"import { CzmlDataSource, defaultValue, defined, DeveloperError, Event, GeoJsonDataSource, getElement, GpxDataSource, KmlDataSource, wrapFunction } from \"@cesium/engine\";\n/**\n * A mixin which adds default drag and drop support for CZML files to the Viewer widget.\n * Rather than being called directly, this function is normally passed as\n * a parameter to {@link Viewer#extend}, as shown in the example below.\n * @function viewerDragDropMixin\n\n * @param {Viewer} viewer The viewer instance.\n * @param {object} [options] Object with the following properties:\n * @param {Element|string} [options.dropTarget=viewer.container] The DOM element which will serve as the drop target.\n * @param {boolean} [options.clearOnDrop=true] When true, dropping files will clear all existing data sources first, when false, new data sources will be loaded after the existing ones.\n * @param {boolean} [options.flyToOnDrop=true] When true, dropping files will fly to the data source once it is loaded.\n * @param {boolean} [options.clampToGround=true] When true, datasources are clamped to the ground.\n * @param {Proxy} [options.proxy] The proxy to be used for KML network links.\n *\n * @exception {DeveloperError} Element with id <options.dropTarget> does not exist in the document.\n * @exception {DeveloperError} dropTarget is already defined by another mixin.\n * @exception {DeveloperError} dropEnabled is already defined by another mixin.\n * @exception {DeveloperError} dropError is already defined by another mixin.\n * @exception {DeveloperError} clearOnDrop is already defined by another mixin.\n *\n * @example\n * // Add basic drag and drop support and pop up an alert window on error.\n * const viewer = new Cesium.Viewer('cesiumContainer');\n * viewer.extend(Cesium.viewerDragDropMixin);\n * viewer.dropError.addEventListener(function(viewerArg, source, error) {\n *     window.alert('Error processing ' + source + ':' + error);\n * });\n */\nfunction viewerDragDropMixin(viewer, options) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(viewer)) {\n    throw new DeveloperError(\"viewer is required.\");\n  }\n  if (viewer.hasOwnProperty(\"dropTarget\")) {\n    throw new DeveloperError(\"dropTarget is already defined by another mixin.\");\n  }\n  if (viewer.hasOwnProperty(\"dropEnabled\")) {\n    throw new DeveloperError(\"dropEnabled is already defined by another mixin.\");\n  }\n  if (viewer.hasOwnProperty(\"dropError\")) {\n    throw new DeveloperError(\"dropError is already defined by another mixin.\");\n  }\n  if (viewer.hasOwnProperty(\"clearOnDrop\")) {\n    throw new DeveloperError(\"clearOnDrop is already defined by another mixin.\");\n  }\n  if (viewer.hasOwnProperty(\"flyToOnDrop\")) {\n    throw new DeveloperError(\"flyToOnDrop is already defined by another mixin.\");\n  }\n  //>>includeEnd('debug');\n\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n\n  //Local variables to be closed over by defineProperties.\n  let dropEnabled = true;\n  let flyToOnDrop = defaultValue(options.flyToOnDrop, true);\n  const dropError = new Event();\n  let clearOnDrop = defaultValue(options.clearOnDrop, true);\n  let dropTarget = defaultValue(options.dropTarget, viewer.container);\n  let clampToGround = defaultValue(options.clampToGround, true);\n  let proxy = options.proxy;\n  dropTarget = getElement(dropTarget);\n  Object.defineProperties(viewer, {\n    /**\n     * Gets or sets the element to serve as the drop target.\n     * @memberof viewerDragDropMixin.prototype\n     * @type {Element}\n     */\n    dropTarget: {\n      //TODO See https://github.com/CesiumGS/cesium/issues/832\n      get: function () {\n        return dropTarget;\n      },\n      set: function (value) {\n        //>>includeStart('debug', pragmas.debug);\n        if (!defined(value)) {\n          throw new DeveloperError(\"value is required.\");\n        }\n        //>>includeEnd('debug');\n\n        unsubscribe(dropTarget, handleDrop);\n        dropTarget = value;\n        subscribe(dropTarget, handleDrop);\n      }\n    },\n    /**\n     * Gets or sets a value indicating if drag and drop support is enabled.\n     * @memberof viewerDragDropMixin.prototype\n     * @type {Element}\n     */\n    dropEnabled: {\n      get: function () {\n        return dropEnabled;\n      },\n      set: function (value) {\n        if (value !== dropEnabled) {\n          if (value) {\n            subscribe(dropTarget, handleDrop);\n          } else {\n            unsubscribe(dropTarget, handleDrop);\n          }\n          dropEnabled = value;\n        }\n      }\n    },\n    /**\n     * Gets the event that will be raised when an error is encountered during drop processing.\n     * @memberof viewerDragDropMixin.prototype\n     * @type {Event}\n     */\n    dropError: {\n      get: function () {\n        return dropError;\n      }\n    },\n    /**\n     * Gets or sets a value indicating if existing data sources should be cleared before adding the newly dropped sources.\n     * @memberof viewerDragDropMixin.prototype\n     * @type {boolean}\n     */\n    clearOnDrop: {\n      get: function () {\n        return clearOnDrop;\n      },\n      set: function (value) {\n        clearOnDrop = value;\n      }\n    },\n    /**\n     * Gets or sets a value indicating if the camera should fly to the data source after it is loaded.\n     * @memberof viewerDragDropMixin.prototype\n     * @type {boolean}\n     */\n    flyToOnDrop: {\n      get: function () {\n        return flyToOnDrop;\n      },\n      set: function (value) {\n        flyToOnDrop = value;\n      }\n    },\n    /**\n     * Gets or sets the proxy to be used for KML.\n     * @memberof viewerDragDropMixin.prototype\n     * @type {Proxy}\n     */\n    proxy: {\n      get: function () {\n        return proxy;\n      },\n      set: function (value) {\n        proxy = value;\n      }\n    },\n    /**\n     * Gets or sets a value indicating if the datasources should be clamped to the ground\n     * @memberof viewerDragDropMixin.prototype\n     * @type {boolean}\n     */\n    clampToGround: {\n      get: function () {\n        return clampToGround;\n      },\n      set: function (value) {\n        clampToGround = value;\n      }\n    }\n  });\n  function handleDrop(event) {\n    stop(event);\n    if (clearOnDrop) {\n      viewer.entities.removeAll();\n      viewer.dataSources.removeAll();\n    }\n    const files = event.dataTransfer.files;\n    const length = files.length;\n    for (let i = 0; i < length; i++) {\n      const file = files[i];\n      const reader = new FileReader();\n      reader.onload = createOnLoadCallback(viewer, file, proxy, clampToGround);\n      reader.onerror = createDropErrorCallback(viewer, file);\n      reader.readAsText(file);\n    }\n  }\n\n  //Enable drop by default;\n  subscribe(dropTarget, handleDrop);\n\n  //Wrap the destroy function to make sure all events are unsubscribed from\n  viewer.destroy = wrapFunction(viewer, viewer.destroy, function () {\n    viewer.dropEnabled = false;\n  });\n\n  //Specs need access to handleDrop\n  viewer._handleDrop = handleDrop;\n}\nfunction stop(event) {\n  event.stopPropagation();\n  event.preventDefault();\n}\nfunction unsubscribe(dropTarget, handleDrop) {\n  const currentTarget = dropTarget;\n  if (defined(currentTarget)) {\n    currentTarget.removeEventListener(\"drop\", handleDrop, false);\n    currentTarget.removeEventListener(\"dragenter\", stop, false);\n    currentTarget.removeEventListener(\"dragover\", stop, false);\n    currentTarget.removeEventListener(\"dragexit\", stop, false);\n  }\n}\nfunction subscribe(dropTarget, handleDrop) {\n  dropTarget.addEventListener(\"drop\", handleDrop, false);\n  dropTarget.addEventListener(\"dragenter\", stop, false);\n  dropTarget.addEventListener(\"dragover\", stop, false);\n  dropTarget.addEventListener(\"dragexit\", stop, false);\n}\nfunction createOnLoadCallback(viewer, file, proxy, clampToGround) {\n  const scene = viewer.scene;\n  return function (evt) {\n    const fileName = file.name;\n    try {\n      let loadPromise;\n      if (/\\.czml$/i.test(fileName)) {\n        loadPromise = CzmlDataSource.load(JSON.parse(evt.target.result), {\n          sourceUri: fileName\n        });\n      } else if (/\\.geojson$/i.test(fileName) || /\\.json$/i.test(fileName) || /\\.topojson$/i.test(fileName)) {\n        loadPromise = GeoJsonDataSource.load(JSON.parse(evt.target.result), {\n          sourceUri: fileName,\n          clampToGround: clampToGround\n        });\n      } else if (/\\.(kml|kmz)$/i.test(fileName)) {\n        loadPromise = KmlDataSource.load(file, {\n          sourceUri: fileName,\n          proxy: proxy,\n          camera: scene.camera,\n          canvas: scene.canvas,\n          clampToGround: clampToGround,\n          screenOverlayContainer: viewer.container\n        });\n      } else if (/\\.gpx$/i.test(fileName)) {\n        loadPromise = GpxDataSource.load(file, {\n          sourceUri: fileName,\n          proxy: proxy\n        });\n      } else {\n        viewer.dropError.raiseEvent(viewer, fileName, `Unrecognized file: ${fileName}`);\n        return;\n      }\n      if (defined(loadPromise)) {\n        viewer.dataSources.add(loadPromise).then(function (dataSource) {\n          if (viewer.flyToOnDrop) {\n            viewer.flyTo(dataSource);\n          }\n        }).catch(function (error) {\n          viewer.dropError.raiseEvent(viewer, fileName, error);\n        });\n      }\n    } catch (error) {\n      viewer.dropError.raiseEvent(viewer, fileName, error);\n    }\n  };\n}\nfunction createDropErrorCallback(viewer, file) {\n  return function (evt) {\n    viewer.dropError.raiseEvent(viewer, file.name, evt.target.error);\n  };\n}\nexport default viewerDragDropMixin;","map":{"version":3,"names":["CzmlDataSource","defaultValue","defined","DeveloperError","Event","GeoJsonDataSource","getElement","GpxDataSource","KmlDataSource","wrapFunction","viewerDragDropMixin","viewer","options","hasOwnProperty","EMPTY_OBJECT","dropEnabled","flyToOnDrop","dropError","clearOnDrop","dropTarget","container","clampToGround","proxy","Object","defineProperties","get","set","value","unsubscribe","handleDrop","subscribe","event","stop","entities","removeAll","dataSources","files","dataTransfer","length","i","file","reader","FileReader","onload","createOnLoadCallback","onerror","createDropErrorCallback","readAsText","destroy","_handleDrop","stopPropagation","preventDefault","currentTarget","removeEventListener","addEventListener","scene","evt","fileName","name","loadPromise","test","load","JSON","parse","target","result","sourceUri","camera","canvas","screenOverlayContainer","raiseEvent","add","then","dataSource","flyTo","catch","error"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/widgets/Source/Viewer/viewerDragDropMixin.js"],"sourcesContent":["import {\n  CzmlDataSource,\n  defaultValue,\n  defined,\n  DeveloperError,\n  Event,\n  GeoJsonDataSource,\n  getElement,\n  GpxDataSource,\n  KmlDataSource,\n  wrapFunction,\n} from \"@cesium/engine\";\n/**\n * A mixin which adds default drag and drop support for CZML files to the Viewer widget.\n * Rather than being called directly, this function is normally passed as\n * a parameter to {@link Viewer#extend}, as shown in the example below.\n * @function viewerDragDropMixin\n\n * @param {Viewer} viewer The viewer instance.\n * @param {object} [options] Object with the following properties:\n * @param {Element|string} [options.dropTarget=viewer.container] The DOM element which will serve as the drop target.\n * @param {boolean} [options.clearOnDrop=true] When true, dropping files will clear all existing data sources first, when false, new data sources will be loaded after the existing ones.\n * @param {boolean} [options.flyToOnDrop=true] When true, dropping files will fly to the data source once it is loaded.\n * @param {boolean} [options.clampToGround=true] When true, datasources are clamped to the ground.\n * @param {Proxy} [options.proxy] The proxy to be used for KML network links.\n *\n * @exception {DeveloperError} Element with id <options.dropTarget> does not exist in the document.\n * @exception {DeveloperError} dropTarget is already defined by another mixin.\n * @exception {DeveloperError} dropEnabled is already defined by another mixin.\n * @exception {DeveloperError} dropError is already defined by another mixin.\n * @exception {DeveloperError} clearOnDrop is already defined by another mixin.\n *\n * @example\n * // Add basic drag and drop support and pop up an alert window on error.\n * const viewer = new Cesium.Viewer('cesiumContainer');\n * viewer.extend(Cesium.viewerDragDropMixin);\n * viewer.dropError.addEventListener(function(viewerArg, source, error) {\n *     window.alert('Error processing ' + source + ':' + error);\n * });\n */\nfunction viewerDragDropMixin(viewer, options) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(viewer)) {\n    throw new DeveloperError(\"viewer is required.\");\n  }\n  if (viewer.hasOwnProperty(\"dropTarget\")) {\n    throw new DeveloperError(\"dropTarget is already defined by another mixin.\");\n  }\n  if (viewer.hasOwnProperty(\"dropEnabled\")) {\n    throw new DeveloperError(\n      \"dropEnabled is already defined by another mixin.\",\n    );\n  }\n  if (viewer.hasOwnProperty(\"dropError\")) {\n    throw new DeveloperError(\"dropError is already defined by another mixin.\");\n  }\n  if (viewer.hasOwnProperty(\"clearOnDrop\")) {\n    throw new DeveloperError(\n      \"clearOnDrop is already defined by another mixin.\",\n    );\n  }\n  if (viewer.hasOwnProperty(\"flyToOnDrop\")) {\n    throw new DeveloperError(\n      \"flyToOnDrop is already defined by another mixin.\",\n    );\n  }\n  //>>includeEnd('debug');\n\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n\n  //Local variables to be closed over by defineProperties.\n  let dropEnabled = true;\n  let flyToOnDrop = defaultValue(options.flyToOnDrop, true);\n  const dropError = new Event();\n  let clearOnDrop = defaultValue(options.clearOnDrop, true);\n  let dropTarget = defaultValue(options.dropTarget, viewer.container);\n  let clampToGround = defaultValue(options.clampToGround, true);\n  let proxy = options.proxy;\n\n  dropTarget = getElement(dropTarget);\n\n  Object.defineProperties(viewer, {\n    /**\n     * Gets or sets the element to serve as the drop target.\n     * @memberof viewerDragDropMixin.prototype\n     * @type {Element}\n     */\n    dropTarget: {\n      //TODO See https://github.com/CesiumGS/cesium/issues/832\n      get: function () {\n        return dropTarget;\n      },\n      set: function (value) {\n        //>>includeStart('debug', pragmas.debug);\n        if (!defined(value)) {\n          throw new DeveloperError(\"value is required.\");\n        }\n        //>>includeEnd('debug');\n\n        unsubscribe(dropTarget, handleDrop);\n        dropTarget = value;\n        subscribe(dropTarget, handleDrop);\n      },\n    },\n\n    /**\n     * Gets or sets a value indicating if drag and drop support is enabled.\n     * @memberof viewerDragDropMixin.prototype\n     * @type {Element}\n     */\n    dropEnabled: {\n      get: function () {\n        return dropEnabled;\n      },\n      set: function (value) {\n        if (value !== dropEnabled) {\n          if (value) {\n            subscribe(dropTarget, handleDrop);\n          } else {\n            unsubscribe(dropTarget, handleDrop);\n          }\n          dropEnabled = value;\n        }\n      },\n    },\n\n    /**\n     * Gets the event that will be raised when an error is encountered during drop processing.\n     * @memberof viewerDragDropMixin.prototype\n     * @type {Event}\n     */\n    dropError: {\n      get: function () {\n        return dropError;\n      },\n    },\n\n    /**\n     * Gets or sets a value indicating if existing data sources should be cleared before adding the newly dropped sources.\n     * @memberof viewerDragDropMixin.prototype\n     * @type {boolean}\n     */\n    clearOnDrop: {\n      get: function () {\n        return clearOnDrop;\n      },\n      set: function (value) {\n        clearOnDrop = value;\n      },\n    },\n\n    /**\n     * Gets or sets a value indicating if the camera should fly to the data source after it is loaded.\n     * @memberof viewerDragDropMixin.prototype\n     * @type {boolean}\n     */\n    flyToOnDrop: {\n      get: function () {\n        return flyToOnDrop;\n      },\n      set: function (value) {\n        flyToOnDrop = value;\n      },\n    },\n\n    /**\n     * Gets or sets the proxy to be used for KML.\n     * @memberof viewerDragDropMixin.prototype\n     * @type {Proxy}\n     */\n    proxy: {\n      get: function () {\n        return proxy;\n      },\n      set: function (value) {\n        proxy = value;\n      },\n    },\n\n    /**\n     * Gets or sets a value indicating if the datasources should be clamped to the ground\n     * @memberof viewerDragDropMixin.prototype\n     * @type {boolean}\n     */\n    clampToGround: {\n      get: function () {\n        return clampToGround;\n      },\n      set: function (value) {\n        clampToGround = value;\n      },\n    },\n  });\n\n  function handleDrop(event) {\n    stop(event);\n\n    if (clearOnDrop) {\n      viewer.entities.removeAll();\n      viewer.dataSources.removeAll();\n    }\n\n    const files = event.dataTransfer.files;\n    const length = files.length;\n    for (let i = 0; i < length; i++) {\n      const file = files[i];\n      const reader = new FileReader();\n      reader.onload = createOnLoadCallback(viewer, file, proxy, clampToGround);\n      reader.onerror = createDropErrorCallback(viewer, file);\n      reader.readAsText(file);\n    }\n  }\n\n  //Enable drop by default;\n  subscribe(dropTarget, handleDrop);\n\n  //Wrap the destroy function to make sure all events are unsubscribed from\n  viewer.destroy = wrapFunction(viewer, viewer.destroy, function () {\n    viewer.dropEnabled = false;\n  });\n\n  //Specs need access to handleDrop\n  viewer._handleDrop = handleDrop;\n}\n\nfunction stop(event) {\n  event.stopPropagation();\n  event.preventDefault();\n}\n\nfunction unsubscribe(dropTarget, handleDrop) {\n  const currentTarget = dropTarget;\n  if (defined(currentTarget)) {\n    currentTarget.removeEventListener(\"drop\", handleDrop, false);\n    currentTarget.removeEventListener(\"dragenter\", stop, false);\n    currentTarget.removeEventListener(\"dragover\", stop, false);\n    currentTarget.removeEventListener(\"dragexit\", stop, false);\n  }\n}\n\nfunction subscribe(dropTarget, handleDrop) {\n  dropTarget.addEventListener(\"drop\", handleDrop, false);\n  dropTarget.addEventListener(\"dragenter\", stop, false);\n  dropTarget.addEventListener(\"dragover\", stop, false);\n  dropTarget.addEventListener(\"dragexit\", stop, false);\n}\n\nfunction createOnLoadCallback(viewer, file, proxy, clampToGround) {\n  const scene = viewer.scene;\n  return function (evt) {\n    const fileName = file.name;\n    try {\n      let loadPromise;\n\n      if (/\\.czml$/i.test(fileName)) {\n        loadPromise = CzmlDataSource.load(JSON.parse(evt.target.result), {\n          sourceUri: fileName,\n        });\n      } else if (\n        /\\.geojson$/i.test(fileName) ||\n        /\\.json$/i.test(fileName) ||\n        /\\.topojson$/i.test(fileName)\n      ) {\n        loadPromise = GeoJsonDataSource.load(JSON.parse(evt.target.result), {\n          sourceUri: fileName,\n          clampToGround: clampToGround,\n        });\n      } else if (/\\.(kml|kmz)$/i.test(fileName)) {\n        loadPromise = KmlDataSource.load(file, {\n          sourceUri: fileName,\n          proxy: proxy,\n          camera: scene.camera,\n          canvas: scene.canvas,\n          clampToGround: clampToGround,\n          screenOverlayContainer: viewer.container,\n        });\n      } else if (/\\.gpx$/i.test(fileName)) {\n        loadPromise = GpxDataSource.load(file, {\n          sourceUri: fileName,\n          proxy: proxy,\n        });\n      } else {\n        viewer.dropError.raiseEvent(\n          viewer,\n          fileName,\n          `Unrecognized file: ${fileName}`,\n        );\n        return;\n      }\n\n      if (defined(loadPromise)) {\n        viewer.dataSources\n          .add(loadPromise)\n          .then(function (dataSource) {\n            if (viewer.flyToOnDrop) {\n              viewer.flyTo(dataSource);\n            }\n          })\n          .catch(function (error) {\n            viewer.dropError.raiseEvent(viewer, fileName, error);\n          });\n      }\n    } catch (error) {\n      viewer.dropError.raiseEvent(viewer, fileName, error);\n    }\n  };\n}\n\nfunction createDropErrorCallback(viewer, file) {\n  return function (evt) {\n    viewer.dropError.raiseEvent(viewer, file.name, evt.target.error);\n  };\n}\nexport default viewerDragDropMixin;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}