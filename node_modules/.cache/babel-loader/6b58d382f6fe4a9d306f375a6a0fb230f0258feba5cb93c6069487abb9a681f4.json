{"ast":null,"code":"//This file is automatically rebuilt by the Cesium build process.\nexport default \"\\n\\\nprecision highp float;\\n\\\nczm_modelMaterial defaultModelMaterial()\\n\\\n{\\n\\\n    czm_modelMaterial material;\\n\\\n    material.diffuse = vec3(0.0);\\n\\\n    material.specular = vec3(1.0);\\n\\\n    material.roughness = 1.0;\\n\\\n    material.occlusion = 1.0;\\n\\\n    material.normalEC = vec3(0.0, 0.0, 1.0);\\n\\\n    material.emissive = vec3(0.0);\\n\\\n    material.alpha = 1.0;\\n\\\n    return material;\\n\\\n}\\n\\\n\\n\\\nvec4 handleAlpha(vec3 color, float alpha)\\n\\\n{\\n\\\n    #ifdef ALPHA_MODE_MASK\\n\\\n    if (alpha < u_alphaCutoff) {\\n\\\n        discard;\\n\\\n    }\\n\\\n    #endif\\n\\\n\\n\\\n    return vec4(color, alpha);\\n\\\n}\\n\\\n\\n\\\nSelectedFeature selectedFeature;\\n\\\n\\n\\\nvoid main()\\n\\\n{\\n\\\n    #ifdef HAS_POINT_CLOUD_SHOW_STYLE\\n\\\n        if (v_pointCloudShow == 0.0)\\n\\\n        {\\n\\\n            discard;\\n\\\n        }\\n\\\n    #endif\\n\\\n\\n\\\n    #ifdef HAS_MODEL_SPLITTER\\n\\\n    modelSplitterStage();\\n\\\n    #endif\\n\\\n\\n\\\n    czm_modelMaterial material = defaultModelMaterial();\\n\\\n\\n\\\n    ProcessedAttributes attributes;\\n\\\n    geometryStage(attributes);\\n\\\n\\n\\\n    FeatureIds featureIds;\\n\\\n    featureIdStage(featureIds, attributes);\\n\\\n\\n\\\n    Metadata metadata;\\n\\\n    MetadataClass metadataClass;\\n\\\n    MetadataStatistics metadataStatistics;\\n\\\n    metadataStage(metadata, metadataClass, metadataStatistics, attributes);\\n\\\n\\n\\\n    //========================================================================\\n\\\n    // When not picking metadata START\\n\\\n    #ifndef METADATA_PICKING_ENABLED\\n\\\n\\n\\\n    #ifdef HAS_SELECTED_FEATURE_ID\\n\\\n    selectedFeatureIdStage(selectedFeature, featureIds);\\n\\\n    #endif\\n\\\n\\n\\\n    #ifndef CUSTOM_SHADER_REPLACE_MATERIAL\\n\\\n    materialStage(material, attributes, selectedFeature);\\n\\\n    #endif\\n\\\n\\n\\\n    #ifdef HAS_CUSTOM_FRAGMENT_SHADER\\n\\\n    customShaderStage(material, attributes, featureIds, metadata, metadataClass, metadataStatistics);\\n\\\n    #endif\\n\\\n\\n\\\n    lightingStage(material, attributes);\\n\\\n\\n\\\n    #ifdef HAS_SELECTED_FEATURE_ID\\n\\\n    cpuStylingStage(material, selectedFeature);\\n\\\n    #endif\\n\\\n\\n\\\n    #ifdef HAS_MODEL_COLOR\\n\\\n    modelColorStage(material);\\n\\\n    #endif\\n\\\n\\n\\\n    #ifdef HAS_PRIMITIVE_OUTLINE\\n\\\n    primitiveOutlineStage(material);\\n\\\n    #endif\\n\\\n\\n\\\n    vec4 color = handleAlpha(material.diffuse, material.alpha);\\n\\\n\\n\\\n    // When not picking metadata END\\n\\\n    //========================================================================\\n\\\n    #else \\n\\\n    //========================================================================\\n\\\n    // When picking metadata START\\n\\\n\\n\\\n    vec4 metadataValues = vec4(0.0, 0.0, 0.0, 0.0);\\n\\\n    metadataPickingStage(metadata, metadataClass, metadataValues);\\n\\\n    vec4 color = metadataValues;\\n\\\n\\n\\\n    #endif\\n\\\n    // When picking metadata END\\n\\\n    //========================================================================\\n\\\n\\n\\\n    #ifdef HAS_CLIPPING_PLANES\\n\\\n    modelClippingPlanesStage(color);\\n\\\n    #endif\\n\\\n\\n\\\n    #ifdef ENABLE_CLIPPING_POLYGONS\\n\\\n    modelClippingPolygonsStage();\\n\\\n    #endif\\n\\\n\\n\\\n    //========================================================================\\n\\\n    // When not picking metadata START\\n\\\n    #ifndef METADATA_PICKING_ENABLED\\n\\\n\\n\\\n    #if defined(HAS_SILHOUETTE) && defined(HAS_NORMALS)\\n\\\n    silhouetteStage(color);\\n\\\n    #endif\\n\\\n\\n\\\n    #ifdef HAS_ATMOSPHERE\\n\\\n    atmosphereStage(color, attributes);\\n\\\n    #endif\\n\\\n\\n\\\n    #endif\\n\\\n    // When not picking metadata END\\n\\\n    //========================================================================\\n\\\n\\n\\\n    out_FragColor = color;\\n\\\n}\\n\\\n\";","map":{"version":3,"names":[],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/engine/Source/Shaders/Model/ModelFS.js"],"sourcesContent":["//This file is automatically rebuilt by the Cesium build process.\nexport default \"\\n\\\nprecision highp float;\\n\\\nczm_modelMaterial defaultModelMaterial()\\n\\\n{\\n\\\n    czm_modelMaterial material;\\n\\\n    material.diffuse = vec3(0.0);\\n\\\n    material.specular = vec3(1.0);\\n\\\n    material.roughness = 1.0;\\n\\\n    material.occlusion = 1.0;\\n\\\n    material.normalEC = vec3(0.0, 0.0, 1.0);\\n\\\n    material.emissive = vec3(0.0);\\n\\\n    material.alpha = 1.0;\\n\\\n    return material;\\n\\\n}\\n\\\n\\n\\\nvec4 handleAlpha(vec3 color, float alpha)\\n\\\n{\\n\\\n    #ifdef ALPHA_MODE_MASK\\n\\\n    if (alpha < u_alphaCutoff) {\\n\\\n        discard;\\n\\\n    }\\n\\\n    #endif\\n\\\n\\n\\\n    return vec4(color, alpha);\\n\\\n}\\n\\\n\\n\\\nSelectedFeature selectedFeature;\\n\\\n\\n\\\nvoid main()\\n\\\n{\\n\\\n    #ifdef HAS_POINT_CLOUD_SHOW_STYLE\\n\\\n        if (v_pointCloudShow == 0.0)\\n\\\n        {\\n\\\n            discard;\\n\\\n        }\\n\\\n    #endif\\n\\\n\\n\\\n    #ifdef HAS_MODEL_SPLITTER\\n\\\n    modelSplitterStage();\\n\\\n    #endif\\n\\\n\\n\\\n    czm_modelMaterial material = defaultModelMaterial();\\n\\\n\\n\\\n    ProcessedAttributes attributes;\\n\\\n    geometryStage(attributes);\\n\\\n\\n\\\n    FeatureIds featureIds;\\n\\\n    featureIdStage(featureIds, attributes);\\n\\\n\\n\\\n    Metadata metadata;\\n\\\n    MetadataClass metadataClass;\\n\\\n    MetadataStatistics metadataStatistics;\\n\\\n    metadataStage(metadata, metadataClass, metadataStatistics, attributes);\\n\\\n\\n\\\n    //========================================================================\\n\\\n    // When not picking metadata START\\n\\\n    #ifndef METADATA_PICKING_ENABLED\\n\\\n\\n\\\n    #ifdef HAS_SELECTED_FEATURE_ID\\n\\\n    selectedFeatureIdStage(selectedFeature, featureIds);\\n\\\n    #endif\\n\\\n\\n\\\n    #ifndef CUSTOM_SHADER_REPLACE_MATERIAL\\n\\\n    materialStage(material, attributes, selectedFeature);\\n\\\n    #endif\\n\\\n\\n\\\n    #ifdef HAS_CUSTOM_FRAGMENT_SHADER\\n\\\n    customShaderStage(material, attributes, featureIds, metadata, metadataClass, metadataStatistics);\\n\\\n    #endif\\n\\\n\\n\\\n    lightingStage(material, attributes);\\n\\\n\\n\\\n    #ifdef HAS_SELECTED_FEATURE_ID\\n\\\n    cpuStylingStage(material, selectedFeature);\\n\\\n    #endif\\n\\\n\\n\\\n    #ifdef HAS_MODEL_COLOR\\n\\\n    modelColorStage(material);\\n\\\n    #endif\\n\\\n\\n\\\n    #ifdef HAS_PRIMITIVE_OUTLINE\\n\\\n    primitiveOutlineStage(material);\\n\\\n    #endif\\n\\\n\\n\\\n    vec4 color = handleAlpha(material.diffuse, material.alpha);\\n\\\n\\n\\\n    // When not picking metadata END\\n\\\n    //========================================================================\\n\\\n    #else \\n\\\n    //========================================================================\\n\\\n    // When picking metadata START\\n\\\n\\n\\\n    vec4 metadataValues = vec4(0.0, 0.0, 0.0, 0.0);\\n\\\n    metadataPickingStage(metadata, metadataClass, metadataValues);\\n\\\n    vec4 color = metadataValues;\\n\\\n\\n\\\n    #endif\\n\\\n    // When picking metadata END\\n\\\n    //========================================================================\\n\\\n\\n\\\n    #ifdef HAS_CLIPPING_PLANES\\n\\\n    modelClippingPlanesStage(color);\\n\\\n    #endif\\n\\\n\\n\\\n    #ifdef ENABLE_CLIPPING_POLYGONS\\n\\\n    modelClippingPolygonsStage();\\n\\\n    #endif\\n\\\n\\n\\\n    //========================================================================\\n\\\n    // When not picking metadata START\\n\\\n    #ifndef METADATA_PICKING_ENABLED\\n\\\n\\n\\\n    #if defined(HAS_SILHOUETTE) && defined(HAS_NORMALS)\\n\\\n    silhouetteStage(color);\\n\\\n    #endif\\n\\\n\\n\\\n    #ifdef HAS_ATMOSPHERE\\n\\\n    atmosphereStage(color, attributes);\\n\\\n    #endif\\n\\\n\\n\\\n    #endif\\n\\\n    // When not picking metadata END\\n\\\n    //========================================================================\\n\\\n\\n\\\n    out_FragColor = color;\\n\\\n}\\n\\\n\";\n"],"mappings":"AAAA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}