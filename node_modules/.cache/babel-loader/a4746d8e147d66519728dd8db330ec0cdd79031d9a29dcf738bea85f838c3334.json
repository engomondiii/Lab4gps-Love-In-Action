{"ast":null,"code":"/**\n * Atmosphere lighting effects (sky atmosphere, ground atmosphere, fog) can be\n * further modified with dynamic lighting from the sun or other light source\n * that changes over time. This enum determines which light source to use.\n *\n * @enum {number}\n */\nconst DynamicAtmosphereLightingType = {\n  /**\n   * Do not use dynamic atmosphere lighting. Atmosphere lighting effects will\n   * be lit from directly above rather than using the scene's light source.\n   *\n   * @type {number}\n   * @constant\n   */\n  NONE: 0,\n  /**\n   * Use the scene's current light source for dynamic atmosphere lighting.\n   *\n   * @type {number}\n   * @constant\n   */\n  SCENE_LIGHT: 1,\n  /**\n   * Force the dynamic atmosphere lighting to always use the sunlight direction,\n   * even if the scene uses a different light source.\n   *\n   * @type {number}\n   * @constant\n   */\n  SUNLIGHT: 2\n};\n\n/**\n * Get the lighting enum from the older globe flags\n *\n * @param {Globe} globe The globe\n * @return {DynamicAtmosphereLightingType} The corresponding enum value\n *\n * @private\n */\nDynamicAtmosphereLightingType.fromGlobeFlags = function (globe) {\n  const lightingOn = globe.enableLighting && globe.dynamicAtmosphereLighting;\n  if (!lightingOn) {\n    return DynamicAtmosphereLightingType.NONE;\n  }\n\n  // Force sunlight\n  if (globe.dynamicAtmosphereLightingFromSun) {\n    return DynamicAtmosphereLightingType.SUNLIGHT;\n  }\n  return DynamicAtmosphereLightingType.SCENE_LIGHT;\n};\nexport default Object.freeze(DynamicAtmosphereLightingType);","map":{"version":3,"names":["DynamicAtmosphereLightingType","NONE","SCENE_LIGHT","SUNLIGHT","fromGlobeFlags","globe","lightingOn","enableLighting","dynamicAtmosphereLighting","dynamicAtmosphereLightingFromSun","Object","freeze"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/engine/Source/Scene/DynamicAtmosphereLightingType.js"],"sourcesContent":["/**\n * Atmosphere lighting effects (sky atmosphere, ground atmosphere, fog) can be\n * further modified with dynamic lighting from the sun or other light source\n * that changes over time. This enum determines which light source to use.\n *\n * @enum {number}\n */\nconst DynamicAtmosphereLightingType = {\n  /**\n   * Do not use dynamic atmosphere lighting. Atmosphere lighting effects will\n   * be lit from directly above rather than using the scene's light source.\n   *\n   * @type {number}\n   * @constant\n   */\n  NONE: 0,\n  /**\n   * Use the scene's current light source for dynamic atmosphere lighting.\n   *\n   * @type {number}\n   * @constant\n   */\n  SCENE_LIGHT: 1,\n  /**\n   * Force the dynamic atmosphere lighting to always use the sunlight direction,\n   * even if the scene uses a different light source.\n   *\n   * @type {number}\n   * @constant\n   */\n  SUNLIGHT: 2,\n};\n\n/**\n * Get the lighting enum from the older globe flags\n *\n * @param {Globe} globe The globe\n * @return {DynamicAtmosphereLightingType} The corresponding enum value\n *\n * @private\n */\nDynamicAtmosphereLightingType.fromGlobeFlags = function (globe) {\n  const lightingOn = globe.enableLighting && globe.dynamicAtmosphereLighting;\n  if (!lightingOn) {\n    return DynamicAtmosphereLightingType.NONE;\n  }\n\n  // Force sunlight\n  if (globe.dynamicAtmosphereLightingFromSun) {\n    return DynamicAtmosphereLightingType.SUNLIGHT;\n  }\n\n  return DynamicAtmosphereLightingType.SCENE_LIGHT;\n};\n\nexport default Object.freeze(DynamicAtmosphereLightingType);\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,6BAA6B,GAAG;EACpC;AACF;AACA;AACA;AACA;AACA;AACA;EACEC,IAAI,EAAE,CAAC;EACP;AACF;AACA;AACA;AACA;AACA;EACEC,WAAW,EAAE,CAAC;EACd;AACF;AACA;AACA;AACA;AACA;AACA;EACEC,QAAQ,EAAE;AACZ,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAH,6BAA6B,CAACI,cAAc,GAAG,UAAUC,KAAK,EAAE;EAC9D,MAAMC,UAAU,GAAGD,KAAK,CAACE,cAAc,IAAIF,KAAK,CAACG,yBAAyB;EAC1E,IAAI,CAACF,UAAU,EAAE;IACf,OAAON,6BAA6B,CAACC,IAAI;EAC3C;;EAEA;EACA,IAAII,KAAK,CAACI,gCAAgC,EAAE;IAC1C,OAAOT,6BAA6B,CAACG,QAAQ;EAC/C;EAEA,OAAOH,6BAA6B,CAACE,WAAW;AAClD,CAAC;AAED,eAAeQ,MAAM,CAACC,MAAM,CAACX,6BAA6B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}