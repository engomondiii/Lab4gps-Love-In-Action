{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/src/components/Globe/Globe.js\",\n  _s = $RefreshSig$();\n/* global Cesium */\nimport React, { useEffect, useRef, useState } from 'react';\nimport '../styles/Globe.css'; // Import the separate style file\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Globe = () => {\n  _s();\n  const globeRef = useRef(null);\n  const viewerRef = useRef(null);\n  const animationIdRef = useRef(null); // To store the animation frame ID\n\n  // Indicates if the globe is currently rotating\n  const [isRotating, setIsRotating] = useState(true);\n\n  // Main rotation function\n  const rotateEarth = () => {\n    if (!viewerRef.current) return;\n    const spinRate = 0.01;\n    const delta = spinRate / 60; // ~60 FPS assumption\n    viewerRef.current.scene.camera.rotate(Cesium.Cartesian3.UNIT_Z, -delta);\n    animationIdRef.current = requestAnimationFrame(rotateEarth);\n  };\n\n  // Stop the rotation immediately\n  const stopRotation = () => {\n    if (animationIdRef.current) {\n      cancelAnimationFrame(animationIdRef.current);\n      animationIdRef.current = null;\n    }\n  };\n\n  // Start the rotation immediately\n  const startRotation = () => {\n    if (viewerRef.current && !animationIdRef.current) {\n      rotateEarth();\n    }\n  };\n  useEffect(() => {\n    Cesium.Ion.defaultAccessToken = 'YOUR_ACCESS_TOKEN';\n\n    // Initialize the viewer if not already\n    if (globeRef.current && !viewerRef.current) {\n      try {\n        viewerRef.current = new Cesium.Viewer(globeRef.current, {\n          imageryProvider: new Cesium.IonImageryProvider({\n            assetId: 2\n          }),\n          baseLayerPicker: false,\n          geocoder: false,\n          homeButton: false,\n          infoBox: false,\n          navigationHelpButton: false,\n          sceneModePicker: false,\n          timeline: false,\n          animation: false,\n          requestRenderMode: true,\n          maximumRenderTimeChange: Infinity\n        });\n\n        // Set initial top-down camera view\n        viewerRef.current.scene.camera.setView({\n          destination: Cesium.Cartesian3.fromDegrees(-74.0707383, 40.7117244, 10000000),\n          orientation: {\n            heading: Cesium.Math.toRadians(0),\n            pitch: Cesium.Math.toRadians(-90),\n            roll: 0.0\n          }\n        });\n\n        // Start rotation immediately if we want it rotating from the start\n        if (isRotating) {\n          startRotation();\n        }\n\n        // Remove camera inertia so rotation stops/starts instantly on user interaction\n        viewerRef.current.scene.screenSpaceCameraController.inertiaSpin = 0;\n        viewerRef.current.scene.screenSpaceCameraController.inertiaTranslate = 0;\n        viewerRef.current.scene.screenSpaceCameraController.inertiaZoom = 0;\n\n        // On drag or wheel down, stop rotation\n        viewerRef.current.canvas.addEventListener('pointerdown', stopRotation);\n        viewerRef.current.canvas.addEventListener('wheel', stopRotation, {\n          passive: true\n        });\n\n        // On drag or wheel up, resume rotation if isRotating is still true\n        viewerRef.current.canvas.addEventListener('pointerup', () => {\n          if (isRotating) {\n            startRotation();\n          }\n        });\n        viewerRef.current.canvas.addEventListener('wheel', () => {\n          if (isRotating) {\n            startRotation();\n          }\n        }, {\n          passive: true,\n          delay: 1000\n        });\n      } catch (error) {\n        console.error('Failed to initialize Cesium viewer:', error);\n      }\n    }\n\n    // Cleanup\n    return () => {\n      if (viewerRef.current) {\n        viewerRef.current.destroy();\n        viewerRef.current = null;\n      }\n    };\n  }, [isRotating]);\n\n  // Button handler: Immediately stop or resume\n  const handleStopRotationClick = () => {\n    if (isRotating) {\n      stopRotation();\n      setIsRotating(false);\n    } else {\n      setIsRotating(true);\n      startRotation();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stop-rotation-button-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"stop-rotation-button\",\n        onClick: handleStopRotationClick,\n        children: isRotating ? 'Stop Rotation' : 'Resume Rotation'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: globeRef,\n      id: \"cesiumContainer\",\n      style: {\n        height: '100vh',\n        width: '100vw'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Globe, \"w5NWggsVoMSX6l1Xtam+lLwoO14=\");\n_c = Globe;\nexport default Globe;\nvar _c;\n$RefreshReg$(_c, \"Globe\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Globe","_s","globeRef","viewerRef","animationIdRef","isRotating","setIsRotating","rotateEarth","current","spinRate","delta","scene","camera","rotate","Cesium","Cartesian3","UNIT_Z","requestAnimationFrame","stopRotation","cancelAnimationFrame","startRotation","Ion","defaultAccessToken","Viewer","imageryProvider","IonImageryProvider","assetId","baseLayerPicker","geocoder","homeButton","infoBox","navigationHelpButton","sceneModePicker","timeline","animation","requestRenderMode","maximumRenderTimeChange","Infinity","setView","destination","fromDegrees","orientation","heading","Math","toRadians","pitch","roll","screenSpaceCameraController","inertiaSpin","inertiaTranslate","inertiaZoom","canvas","addEventListener","passive","delay","error","console","destroy","handleStopRotationClick","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ref","id","style","height","width","_c","$RefreshReg$"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/src/components/Globe/Globe.js"],"sourcesContent":["/* global Cesium */\nimport React, { useEffect, useRef, useState } from 'react';\nimport '../styles/Globe.css'; // Import the separate style file\n\nconst Globe = () => {\n    const globeRef = useRef(null);\n    const viewerRef = useRef(null);\n    const animationIdRef = useRef(null);  // To store the animation frame ID\n\n    // Indicates if the globe is currently rotating\n    const [isRotating, setIsRotating] = useState(true);\n\n    // Main rotation function\n    const rotateEarth = () => {\n        if (!viewerRef.current) return;\n        const spinRate = 0.01;\n        const delta = spinRate / 60; // ~60 FPS assumption\n        viewerRef.current.scene.camera.rotate(Cesium.Cartesian3.UNIT_Z, -delta);\n        animationIdRef.current = requestAnimationFrame(rotateEarth);\n    };\n\n    // Stop the rotation immediately\n    const stopRotation = () => {\n        if (animationIdRef.current) {\n            cancelAnimationFrame(animationIdRef.current);\n            animationIdRef.current = null;\n        }\n    };\n\n    // Start the rotation immediately\n    const startRotation = () => {\n        if (viewerRef.current && !animationIdRef.current) {\n            rotateEarth();\n        }\n    };\n\n    useEffect(() => {\n        Cesium.Ion.defaultAccessToken = 'YOUR_ACCESS_TOKEN';\n\n        // Initialize the viewer if not already\n        if (globeRef.current && !viewerRef.current) {\n            try {\n                viewerRef.current = new Cesium.Viewer(globeRef.current, {\n                    imageryProvider: new Cesium.IonImageryProvider({ assetId: 2 }),\n                    baseLayerPicker: false,\n                    geocoder: false,\n                    homeButton: false,\n                    infoBox: false,\n                    navigationHelpButton: false,\n                    sceneModePicker: false,\n                    timeline: false,\n                    animation: false,\n                    requestRenderMode: true,\n                    maximumRenderTimeChange: Infinity,\n                });\n\n                // Set initial top-down camera view\n                viewerRef.current.scene.camera.setView({\n                    destination: Cesium.Cartesian3.fromDegrees(-74.0707383, 40.7117244, 10000000),\n                    orientation: {\n                        heading: Cesium.Math.toRadians(0),\n                        pitch: Cesium.Math.toRadians(-90),\n                        roll: 0.0\n                    }\n                });\n\n                // Start rotation immediately if we want it rotating from the start\n                if (isRotating) {\n                    startRotation();\n                }\n\n                // Remove camera inertia so rotation stops/starts instantly on user interaction\n                viewerRef.current.scene.screenSpaceCameraController.inertiaSpin = 0;\n                viewerRef.current.scene.screenSpaceCameraController.inertiaTranslate = 0;\n                viewerRef.current.scene.screenSpaceCameraController.inertiaZoom = 0;\n\n                // On drag or wheel down, stop rotation\n                viewerRef.current.canvas.addEventListener('pointerdown', stopRotation);\n                viewerRef.current.canvas.addEventListener('wheel', stopRotation, { passive: true });\n\n                // On drag or wheel up, resume rotation if isRotating is still true\n                viewerRef.current.canvas.addEventListener('pointerup', () => {\n                    if (isRotating) {\n                        startRotation();\n                    }\n                });\n                viewerRef.current.canvas.addEventListener('wheel', () => {\n                    if (isRotating) {\n                        startRotation();\n                    }\n                }, { passive: true, delay: 1000 });\n\n            } catch (error) {\n                console.error('Failed to initialize Cesium viewer:', error);\n            }\n        }\n\n        // Cleanup\n        return () => {\n            if (viewerRef.current) {\n                viewerRef.current.destroy();\n                viewerRef.current = null;\n            }\n        };\n    }, [isRotating]);\n\n    // Button handler: Immediately stop or resume\n    const handleStopRotationClick = () => {\n        if (isRotating) {\n            stopRotation();\n            setIsRotating(false);\n        } else {\n            setIsRotating(true);\n            startRotation();\n        }\n    };\n\n    return (\n        <>\n            <div className=\"stop-rotation-button-container\">\n                <button\n                    className=\"stop-rotation-button\"\n                    onClick={handleStopRotationClick}\n                >\n                    {isRotating ? 'Stop Rotation' : 'Resume Rotation'}\n                </button>\n            </div>\n\n            <div\n                ref={globeRef}\n                id=\"cesiumContainer\"\n                style={{ height: '100vh', width: '100vw' }}\n            />\n        </>\n    );\n};\n\nexport default Globe;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}