{"ast":null,"code":"import Composite3DTileContent from \"./Composite3DTileContent.js\";\nimport Geometry3DTileContent from \"./Geometry3DTileContent.js\";\nimport Implicit3DTileContent from \"./Implicit3DTileContent.js\";\nimport Model3DTileContent from \"./Model/Model3DTileContent.js\";\nimport Tileset3DTileContent from \"./Tileset3DTileContent.js\";\nimport Vector3DTileContent from \"./Vector3DTileContent.js\";\nimport RuntimeError from \"../Core/RuntimeError.js\";\n\n/**\n * Maps a tile's magic field in its header to a new content object for the tile's payload.\n *\n * @private\n */\nconst Cesium3DTileContentFactory = {\n  b3dm: function (tileset, tile, resource, arrayBuffer, byteOffset) {\n    return Model3DTileContent.fromB3dm(tileset, tile, resource, arrayBuffer, byteOffset);\n  },\n  pnts: function (tileset, tile, resource, arrayBuffer, byteOffset) {\n    return Model3DTileContent.fromPnts(tileset, tile, resource, arrayBuffer, byteOffset);\n  },\n  i3dm: function (tileset, tile, resource, arrayBuffer, byteOffset) {\n    return Model3DTileContent.fromI3dm(tileset, tile, resource, arrayBuffer, byteOffset);\n  },\n  cmpt: function (tileset, tile, resource, arrayBuffer, byteOffset) {\n    // Send in the factory in order to avoid a cyclical dependency\n    return Composite3DTileContent.fromTileType(tileset, tile, resource, arrayBuffer, byteOffset, Cesium3DTileContentFactory);\n  },\n  externalTileset: function (tileset, tile, resource, json) {\n    return Tileset3DTileContent.fromJson(tileset, tile, resource, json);\n  },\n  geom: function (tileset, tile, resource, arrayBuffer, byteOffset) {\n    return new Geometry3DTileContent(tileset, tile, resource, arrayBuffer, byteOffset);\n  },\n  vctr: function (tileset, tile, resource, arrayBuffer, byteOffset) {\n    return new Vector3DTileContent(tileset, tile, resource, arrayBuffer, byteOffset);\n  },\n  subt: function (tileset, tile, resource, arrayBuffer, byteOffset) {\n    return Implicit3DTileContent.fromSubtreeJson(tileset, tile, resource, undefined, arrayBuffer, byteOffset);\n  },\n  subtreeJson: function (tileset, tile, resource, json) {\n    return Implicit3DTileContent.fromSubtreeJson(tileset, tile, resource, json);\n  },\n  glb: function (tileset, tile, resource, arrayBuffer, byteOffset) {\n    const arrayBufferByteLength = arrayBuffer.byteLength;\n    if (arrayBufferByteLength < 12) {\n      throw new RuntimeError(\"Invalid glb content\");\n    }\n    const dataView = new DataView(arrayBuffer, byteOffset);\n    const byteLength = dataView.getUint32(8, true);\n    const glb = new Uint8Array(arrayBuffer, byteOffset, byteLength);\n    return Model3DTileContent.fromGltf(tileset, tile, resource, glb);\n  },\n  gltf: function (tileset, tile, resource, json) {\n    return Model3DTileContent.fromGltf(tileset, tile, resource, json);\n  },\n  geoJson: function (tileset, tile, resource, json) {\n    return Model3DTileContent.fromGeoJson(tileset, tile, resource, json);\n  }\n};\nexport default Cesium3DTileContentFactory;","map":{"version":3,"names":["Composite3DTileContent","Geometry3DTileContent","Implicit3DTileContent","Model3DTileContent","Tileset3DTileContent","Vector3DTileContent","RuntimeError","Cesium3DTileContentFactory","b3dm","tileset","tile","resource","arrayBuffer","byteOffset","fromB3dm","pnts","fromPnts","i3dm","fromI3dm","cmpt","fromTileType","externalTileset","json","fromJson","geom","vctr","subt","fromSubtreeJson","undefined","subtreeJson","glb","arrayBufferByteLength","byteLength","dataView","DataView","getUint32","Uint8Array","fromGltf","gltf","geoJson","fromGeoJson"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/engine/Source/Scene/Cesium3DTileContentFactory.js"],"sourcesContent":["import Composite3DTileContent from \"./Composite3DTileContent.js\";\nimport Geometry3DTileContent from \"./Geometry3DTileContent.js\";\nimport Implicit3DTileContent from \"./Implicit3DTileContent.js\";\nimport Model3DTileContent from \"./Model/Model3DTileContent.js\";\nimport Tileset3DTileContent from \"./Tileset3DTileContent.js\";\nimport Vector3DTileContent from \"./Vector3DTileContent.js\";\nimport RuntimeError from \"../Core/RuntimeError.js\";\n\n/**\n * Maps a tile's magic field in its header to a new content object for the tile's payload.\n *\n * @private\n */\nconst Cesium3DTileContentFactory = {\n  b3dm: function (tileset, tile, resource, arrayBuffer, byteOffset) {\n    return Model3DTileContent.fromB3dm(\n      tileset,\n      tile,\n      resource,\n      arrayBuffer,\n      byteOffset,\n    );\n  },\n  pnts: function (tileset, tile, resource, arrayBuffer, byteOffset) {\n    return Model3DTileContent.fromPnts(\n      tileset,\n      tile,\n      resource,\n      arrayBuffer,\n      byteOffset,\n    );\n  },\n  i3dm: function (tileset, tile, resource, arrayBuffer, byteOffset) {\n    return Model3DTileContent.fromI3dm(\n      tileset,\n      tile,\n      resource,\n      arrayBuffer,\n      byteOffset,\n    );\n  },\n  cmpt: function (tileset, tile, resource, arrayBuffer, byteOffset) {\n    // Send in the factory in order to avoid a cyclical dependency\n    return Composite3DTileContent.fromTileType(\n      tileset,\n      tile,\n      resource,\n      arrayBuffer,\n      byteOffset,\n      Cesium3DTileContentFactory,\n    );\n  },\n  externalTileset: function (tileset, tile, resource, json) {\n    return Tileset3DTileContent.fromJson(tileset, tile, resource, json);\n  },\n  geom: function (tileset, tile, resource, arrayBuffer, byteOffset) {\n    return new Geometry3DTileContent(\n      tileset,\n      tile,\n      resource,\n      arrayBuffer,\n      byteOffset,\n    );\n  },\n  vctr: function (tileset, tile, resource, arrayBuffer, byteOffset) {\n    return new Vector3DTileContent(\n      tileset,\n      tile,\n      resource,\n      arrayBuffer,\n      byteOffset,\n    );\n  },\n  subt: function (tileset, tile, resource, arrayBuffer, byteOffset) {\n    return Implicit3DTileContent.fromSubtreeJson(\n      tileset,\n      tile,\n      resource,\n      undefined,\n      arrayBuffer,\n      byteOffset,\n    );\n  },\n  subtreeJson: function (tileset, tile, resource, json) {\n    return Implicit3DTileContent.fromSubtreeJson(tileset, tile, resource, json);\n  },\n  glb: function (tileset, tile, resource, arrayBuffer, byteOffset) {\n    const arrayBufferByteLength = arrayBuffer.byteLength;\n    if (arrayBufferByteLength < 12) {\n      throw new RuntimeError(\"Invalid glb content\");\n    }\n    const dataView = new DataView(arrayBuffer, byteOffset);\n    const byteLength = dataView.getUint32(8, true);\n    const glb = new Uint8Array(arrayBuffer, byteOffset, byteLength);\n    return Model3DTileContent.fromGltf(tileset, tile, resource, glb);\n  },\n  gltf: function (tileset, tile, resource, json) {\n    return Model3DTileContent.fromGltf(tileset, tile, resource, json);\n  },\n  geoJson: function (tileset, tile, resource, json) {\n    return Model3DTileContent.fromGeoJson(tileset, tile, resource, json);\n  },\n};\nexport default Cesium3DTileContentFactory;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}