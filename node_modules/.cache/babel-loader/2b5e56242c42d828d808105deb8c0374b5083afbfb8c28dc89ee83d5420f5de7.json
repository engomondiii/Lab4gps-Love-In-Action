{"ast":null,"code":"import defined from \"../Core/defined.js\";\nimport FeatureDetection from \"../Core/FeatureDetection.js\";\nimport RuntimeError from \"../Core/RuntimeError.js\";\nimport TaskProcessor from \"../Core/TaskProcessor.js\";\n\n/**\n * @private\n */\nfunction DracoLoader() {}\n\n// Maximum concurrency to use when decoding draco models\nDracoLoader._maxDecodingConcurrency = Math.max(FeatureDetection.hardwareConcurrency - 1, 1);\n\n// Exposed for testing purposes\nDracoLoader._decoderTaskProcessor = undefined;\nDracoLoader._taskProcessorReady = false;\nDracoLoader._error = undefined;\nDracoLoader._getDecoderTaskProcessor = function () {\n  if (!defined(DracoLoader._decoderTaskProcessor)) {\n    const processor = new TaskProcessor(\"decodeDraco\", DracoLoader._maxDecodingConcurrency);\n    processor.initWebAssemblyModule({\n      wasmBinaryFile: \"ThirdParty/draco_decoder.wasm\"\n    }).then(function (result) {\n      if (result) {\n        DracoLoader._taskProcessorReady = true;\n      } else {\n        DracoLoader._error = new RuntimeError(\"Draco decoder could not be initialized.\");\n      }\n    }).catch(error => {\n      DracoLoader._error = error;\n    });\n    DracoLoader._decoderTaskProcessor = processor;\n  }\n  return DracoLoader._decoderTaskProcessor;\n};\n\n/**\n * Decodes a compressed point cloud. Returns undefined if the task cannot be scheduled.\n * @private\n *\n * @exception {RuntimeError} Draco decoder could not be initialized.\n */\nDracoLoader.decodePointCloud = function (parameters) {\n  const decoderTaskProcessor = DracoLoader._getDecoderTaskProcessor();\n  if (defined(DracoLoader._error)) {\n    throw DracoLoader._error;\n  }\n  if (!DracoLoader._taskProcessorReady) {\n    // The task processor is not ready to schedule tasks\n    return;\n  }\n  return decoderTaskProcessor.scheduleTask(parameters, [parameters.buffer.buffer]);\n};\n\n/**\n * Decodes a buffer view. Returns undefined if the task cannot be scheduled.\n *\n * @param {object} options Object with the following properties:\n * @param {Uint8Array} options.array The typed array containing the buffer view data.\n * @param {object} options.bufferView The glTF buffer view object.\n * @param {Object<string, number>} options.compressedAttributes The compressed attributes.\n * @param {boolean} options.dequantizeInShader Whether POSITION and NORMAL attributes should be dequantized on the GPU.\n *\n * @returns {Promise} A promise that resolves to the decoded indices and attributes.\n * @private\n *\n * @exception {RuntimeError} Draco decoder could not be initialized.\n */\nDracoLoader.decodeBufferView = function (options) {\n  const decoderTaskProcessor = DracoLoader._getDecoderTaskProcessor();\n  if (defined(DracoLoader._error)) {\n    throw DracoLoader._error;\n  }\n  if (!DracoLoader._taskProcessorReady) {\n    // The task processor is not ready to schedule tasks\n    return;\n  }\n  return decoderTaskProcessor.scheduleTask(options, [options.array.buffer]);\n};\nexport default DracoLoader;","map":{"version":3,"names":["defined","FeatureDetection","RuntimeError","TaskProcessor","DracoLoader","_maxDecodingConcurrency","Math","max","hardwareConcurrency","_decoderTaskProcessor","undefined","_taskProcessorReady","_error","_getDecoderTaskProcessor","processor","initWebAssemblyModule","wasmBinaryFile","then","result","catch","error","decodePointCloud","parameters","decoderTaskProcessor","scheduleTask","buffer","decodeBufferView","options","array"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/engine/Source/Scene/DracoLoader.js"],"sourcesContent":["import defined from \"../Core/defined.js\";\nimport FeatureDetection from \"../Core/FeatureDetection.js\";\nimport RuntimeError from \"../Core/RuntimeError.js\";\nimport TaskProcessor from \"../Core/TaskProcessor.js\";\n\n/**\n * @private\n */\nfunction DracoLoader() {}\n\n// Maximum concurrency to use when decoding draco models\nDracoLoader._maxDecodingConcurrency = Math.max(\n  FeatureDetection.hardwareConcurrency - 1,\n  1,\n);\n\n// Exposed for testing purposes\nDracoLoader._decoderTaskProcessor = undefined;\nDracoLoader._taskProcessorReady = false;\nDracoLoader._error = undefined;\nDracoLoader._getDecoderTaskProcessor = function () {\n  if (!defined(DracoLoader._decoderTaskProcessor)) {\n    const processor = new TaskProcessor(\n      \"decodeDraco\",\n      DracoLoader._maxDecodingConcurrency,\n    );\n    processor\n      .initWebAssemblyModule({\n        wasmBinaryFile: \"ThirdParty/draco_decoder.wasm\",\n      })\n      .then(function (result) {\n        if (result) {\n          DracoLoader._taskProcessorReady = true;\n        } else {\n          DracoLoader._error = new RuntimeError(\n            \"Draco decoder could not be initialized.\",\n          );\n        }\n      })\n      .catch((error) => {\n        DracoLoader._error = error;\n      });\n    DracoLoader._decoderTaskProcessor = processor;\n  }\n\n  return DracoLoader._decoderTaskProcessor;\n};\n\n/**\n * Decodes a compressed point cloud. Returns undefined if the task cannot be scheduled.\n * @private\n *\n * @exception {RuntimeError} Draco decoder could not be initialized.\n */\nDracoLoader.decodePointCloud = function (parameters) {\n  const decoderTaskProcessor = DracoLoader._getDecoderTaskProcessor();\n  if (defined(DracoLoader._error)) {\n    throw DracoLoader._error;\n  }\n\n  if (!DracoLoader._taskProcessorReady) {\n    // The task processor is not ready to schedule tasks\n    return;\n  }\n  return decoderTaskProcessor.scheduleTask(parameters, [\n    parameters.buffer.buffer,\n  ]);\n};\n\n/**\n * Decodes a buffer view. Returns undefined if the task cannot be scheduled.\n *\n * @param {object} options Object with the following properties:\n * @param {Uint8Array} options.array The typed array containing the buffer view data.\n * @param {object} options.bufferView The glTF buffer view object.\n * @param {Object<string, number>} options.compressedAttributes The compressed attributes.\n * @param {boolean} options.dequantizeInShader Whether POSITION and NORMAL attributes should be dequantized on the GPU.\n *\n * @returns {Promise} A promise that resolves to the decoded indices and attributes.\n * @private\n *\n * @exception {RuntimeError} Draco decoder could not be initialized.\n */\nDracoLoader.decodeBufferView = function (options) {\n  const decoderTaskProcessor = DracoLoader._getDecoderTaskProcessor();\n\n  if (defined(DracoLoader._error)) {\n    throw DracoLoader._error;\n  }\n\n  if (!DracoLoader._taskProcessorReady) {\n    // The task processor is not ready to schedule tasks\n    return;\n  }\n\n  return decoderTaskProcessor.scheduleTask(options, [options.array.buffer]);\n};\n\nexport default DracoLoader;\n"],"mappings":"AAAA,OAAOA,OAAO,MAAM,oBAAoB;AACxC,OAAOC,gBAAgB,MAAM,6BAA6B;AAC1D,OAAOC,YAAY,MAAM,yBAAyB;AAClD,OAAOC,aAAa,MAAM,0BAA0B;;AAEpD;AACA;AACA;AACA,SAASC,WAAWA,CAAA,EAAG,CAAC;;AAExB;AACAA,WAAW,CAACC,uBAAuB,GAAGC,IAAI,CAACC,GAAG,CAC5CN,gBAAgB,CAACO,mBAAmB,GAAG,CAAC,EACxC,CACF,CAAC;;AAED;AACAJ,WAAW,CAACK,qBAAqB,GAAGC,SAAS;AAC7CN,WAAW,CAACO,mBAAmB,GAAG,KAAK;AACvCP,WAAW,CAACQ,MAAM,GAAGF,SAAS;AAC9BN,WAAW,CAACS,wBAAwB,GAAG,YAAY;EACjD,IAAI,CAACb,OAAO,CAACI,WAAW,CAACK,qBAAqB,CAAC,EAAE;IAC/C,MAAMK,SAAS,GAAG,IAAIX,aAAa,CACjC,aAAa,EACbC,WAAW,CAACC,uBACd,CAAC;IACDS,SAAS,CACNC,qBAAqB,CAAC;MACrBC,cAAc,EAAE;IAClB,CAAC,CAAC,CACDC,IAAI,CAAC,UAAUC,MAAM,EAAE;MACtB,IAAIA,MAAM,EAAE;QACVd,WAAW,CAACO,mBAAmB,GAAG,IAAI;MACxC,CAAC,MAAM;QACLP,WAAW,CAACQ,MAAM,GAAG,IAAIV,YAAY,CACnC,yCACF,CAAC;MACH;IACF,CAAC,CAAC,CACDiB,KAAK,CAAEC,KAAK,IAAK;MAChBhB,WAAW,CAACQ,MAAM,GAAGQ,KAAK;IAC5B,CAAC,CAAC;IACJhB,WAAW,CAACK,qBAAqB,GAAGK,SAAS;EAC/C;EAEA,OAAOV,WAAW,CAACK,qBAAqB;AAC1C,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACAL,WAAW,CAACiB,gBAAgB,GAAG,UAAUC,UAAU,EAAE;EACnD,MAAMC,oBAAoB,GAAGnB,WAAW,CAACS,wBAAwB,CAAC,CAAC;EACnE,IAAIb,OAAO,CAACI,WAAW,CAACQ,MAAM,CAAC,EAAE;IAC/B,MAAMR,WAAW,CAACQ,MAAM;EAC1B;EAEA,IAAI,CAACR,WAAW,CAACO,mBAAmB,EAAE;IACpC;IACA;EACF;EACA,OAAOY,oBAAoB,CAACC,YAAY,CAACF,UAAU,EAAE,CACnDA,UAAU,CAACG,MAAM,CAACA,MAAM,CACzB,CAAC;AACJ,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACArB,WAAW,CAACsB,gBAAgB,GAAG,UAAUC,OAAO,EAAE;EAChD,MAAMJ,oBAAoB,GAAGnB,WAAW,CAACS,wBAAwB,CAAC,CAAC;EAEnE,IAAIb,OAAO,CAACI,WAAW,CAACQ,MAAM,CAAC,EAAE;IAC/B,MAAMR,WAAW,CAACQ,MAAM;EAC1B;EAEA,IAAI,CAACR,WAAW,CAACO,mBAAmB,EAAE;IACpC;IACA;EACF;EAEA,OAAOY,oBAAoB,CAACC,YAAY,CAACG,OAAO,EAAE,CAACA,OAAO,CAACC,KAAK,CAACH,MAAM,CAAC,CAAC;AAC3E,CAAC;AAED,eAAerB,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}