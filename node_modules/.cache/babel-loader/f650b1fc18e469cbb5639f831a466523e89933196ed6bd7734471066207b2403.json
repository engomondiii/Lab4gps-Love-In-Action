{"ast":null,"code":"import Cartesian3 from \"../../../../Core/Cartesian3.js\";\nimport Check from \"../../../../Core/Check.js\";\nimport Matrix3 from \"../../../../Core/Matrix3.js\";\nimport RuntimeError from \"../../../../Core/RuntimeError.js\";\nimport AnchorPointDirect from \"./AnchorPointDirect.js\";\nimport AnchorPointIndirect from \"./AnchorPointIndirect.js\";\nimport CorrelationGroup from \"./CorrelationGroup.js\";\nimport GltfGpmLocal from \"./GltfGpmLocal.js\";\nimport Spdcf from \"./Spdcf.js\";\nimport StorageType from \"./StorageType.js\";\n\n/**\n * Loads glTF NGA_gpm_local from the root of a glTF object\n *\n * @alias GltfGpmLoader\n * @constructor\n *\n * @param {object} options Object with the following properties:\n * @param {object} options.gltf The glTF JSON.\n * @param {string} [options.extension] The <code>NGA_gpm_local</code> extension object.\n *\n * @private\n */\nfunction GltfGpmLoader() {}\n\n/**\n * Creates a Matrix3 that describes a covariance matrix (which is\n * symmetric) from the array containing the upper triangle, in\n * column-major order.\n *\n * @param {number[]} array The input array\n * @returns {Matrix3} The Matrix3\n */\nfunction createCovarianceMatrixFromUpperTriangle(array) {\n  const covarianceMatrix = new Matrix3(array[0], array[1], array[3], array[1], array[2], array[4], array[3], array[4], array[5]);\n  return covarianceMatrix;\n}\n\n/**\n * Creates an `AnchorPointDirect` from the given JSON representation\n *\n * @param {object} anchorPointDirectJson The input JSON\n * @returns {AnchorPointDirect} The direct anchor point\n */\nfunction createAnchorPointDirect(anchorPointDirectJson) {\n  const position = Cartesian3.fromArray(anchorPointDirectJson.position, 0, new Cartesian3());\n  const adjustmentParams = Cartesian3.fromArray(anchorPointDirectJson.adjustmentParams, 0, new Cartesian3());\n  const anchorPointDirect = new AnchorPointDirect({\n    position: position,\n    adjustmentParams: adjustmentParams\n  });\n  return anchorPointDirect;\n}\n\n/**\n * Creates an `AnchorPointIndirect` from the given JSON representation\n *\n * @param {object} anchorPointIndirectJson The input JSON\n * @returns {AnchorPointIndirect} The indirect anchor point\n */\nfunction createAnchorPointIndirect(anchorPointIndirectJson) {\n  const position = Cartesian3.fromArray(anchorPointIndirectJson.position, 0, new Cartesian3());\n  const adjustmentParams = Cartesian3.fromArray(anchorPointIndirectJson.adjustmentParams, 0, new Cartesian3());\n  const covarianceMatrix = createCovarianceMatrixFromUpperTriangle(anchorPointIndirectJson.covarianceMatrix);\n  const anchorPointIndirect = new AnchorPointIndirect({\n    position: position,\n    adjustmentParams: adjustmentParams,\n    covarianceMatrix: covarianceMatrix\n  });\n  return anchorPointIndirect;\n}\n\n/**\n * Creates a `CorrelationGroup` from the given JSON representation\n *\n * @param {object} correlationGroupJson The input JSON\n * @returns {CorrelationGroup} The correlation group\n */\nfunction createCorrelationGroup(correlationGroupJson) {\n  const groupFlags = correlationGroupJson.groupFlags;\n  const rotationThetas = Cartesian3.fromArray(correlationGroupJson.rotationThetas, 0, new Cartesian3());\n  const params = [];\n  for (const paramJson of correlationGroupJson.params) {\n    const param = new Spdcf({\n      A: paramJson.A,\n      alpha: paramJson.alpha,\n      beta: paramJson.beta,\n      T: paramJson.T\n    });\n    params.push(param);\n  }\n  const correlationGroup = new CorrelationGroup({\n    groupFlags: groupFlags,\n    rotationThetas: rotationThetas,\n    params: params\n  });\n  return correlationGroup;\n}\n\n/**\n * Loads the GPM data from the given JSON that was found as the\n * `NGA_gpm_local` extension object in the root of the glTF.\n *\n * @param {object} gltfGpmLocalJson The extension object\n * @returns {GltfGpmLocal} The parsed object\n * @throws RuntimeError When the given object contains invalid storage types.\n * @private\n */\nGltfGpmLoader.load = function (gltfGpmLocalJson) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.typeOf.object(\"gltfGpmLocalJson\", gltfGpmLocalJson);\n  //>>includeEnd('debug');\n\n  const storageType = gltfGpmLocalJson.storageType;\n  if (storageType === StorageType.Direct) {\n    return GltfGpmLoader.loadDirect(gltfGpmLocalJson);\n  }\n  if (storageType === StorageType.Indirect) {\n    return GltfGpmLoader.loadIndirect(gltfGpmLocalJson);\n  }\n  throw new RuntimeError(`Invalid storage type in NGA_gpm_local - expected 'Direct' or 'Indirect', but found ${storageType}`);\n};\n\n/**\n * Loads the GPM data from the given JSON that was found as the\n * `NGA_gpm_local` extension object in the root of the glTF,\n * assuming that the `storageType` of the given object is\n * `StorageType.Direct`.\n *\n * @param {object} gltfGpmLocalJson The extension object\n * @returns {GltfGpmLocal} The parsed object\n * @private\n */\nGltfGpmLoader.loadDirect = function (gltfGpmLocalJson) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.typeOf.object(\"gltfGpmLocalJson\", gltfGpmLocalJson);\n  Check.typeOf.object(\"gltfGpmLocalJson.anchorPointsDirect\", gltfGpmLocalJson.anchorPointsDirect);\n  Check.typeOf.object(\"gltfGpmLocalJson.covarianceDirectUpperTriangle\", gltfGpmLocalJson.covarianceDirectUpperTriangle);\n  //>>includeEnd('debug');\n\n  const anchorPointsDirect = [];\n  const anchorPointsDirectJson = gltfGpmLocalJson.anchorPointsDirect;\n  for (const anchorPointDirectJson of anchorPointsDirectJson) {\n    const anchorPointDirect = createAnchorPointDirect(anchorPointDirectJson);\n    anchorPointsDirect.push(anchorPointDirect);\n  }\n  const covarianceDirect = createCovarianceMatrixFromUpperTriangle(gltfGpmLocalJson.covarianceDirectUpperTriangle);\n  const gltfGpmLocal = new GltfGpmLocal({\n    storageType: StorageType.Direct,\n    anchorPointsDirect: anchorPointsDirect,\n    covarianceDirect: covarianceDirect\n  });\n  return gltfGpmLocal;\n};\n\n/**\n * Loads the GPM data from the given JSON that was found as the\n * `NGA_gpm_local` extension object in the root of the glTF,\n * assuming that the `storageType` of the given object is\n * `StorageType.Indirect`.\n *\n * @param {object} gltfGpmLocalJson The extension object\n * @returns {GltfGpmLocal} The parsed object\n * @private\n */\nGltfGpmLoader.loadIndirect = function (gltfGpmLocalJson) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.typeOf.object(\"gltfGpmLocalJson\", gltfGpmLocalJson);\n  Check.typeOf.object(\"gltfGpmLocalJson.anchorPointsIndirect\", gltfGpmLocalJson.anchorPointsIndirect);\n  Check.typeOf.object(\"gltfGpmLocalJson.intraTileCorrelationGroups\", gltfGpmLocalJson.intraTileCorrelationGroups);\n  //>>includeEnd('debug');\n\n  const anchorPointsIndirect = [];\n  const anchorPointsIndirectJson = gltfGpmLocalJson.anchorPointsIndirect;\n  for (const anchorPointIndirectJson of anchorPointsIndirectJson) {\n    const anchorPointIndirect = createAnchorPointIndirect(anchorPointIndirectJson);\n    anchorPointsIndirect.push(anchorPointIndirect);\n  }\n  const intraTileCorrelationGroupsJson = gltfGpmLocalJson.intraTileCorrelationGroups;\n  const intraTileCorrelationGroups = [];\n  for (const correlationGroupJson of intraTileCorrelationGroupsJson) {\n    const correlationGroup = createCorrelationGroup(correlationGroupJson);\n    intraTileCorrelationGroups.push(correlationGroup);\n  }\n  const gltfGpmLocal = new GltfGpmLocal({\n    storageType: StorageType.Indirect,\n    anchorPointsIndirect: anchorPointsIndirect,\n    intraTileCorrelationGroups: intraTileCorrelationGroups\n  });\n  return gltfGpmLocal;\n};\nexport default GltfGpmLoader;","map":{"version":3,"names":["Cartesian3","Check","Matrix3","RuntimeError","AnchorPointDirect","AnchorPointIndirect","CorrelationGroup","GltfGpmLocal","Spdcf","StorageType","GltfGpmLoader","createCovarianceMatrixFromUpperTriangle","array","covarianceMatrix","createAnchorPointDirect","anchorPointDirectJson","position","fromArray","adjustmentParams","anchorPointDirect","createAnchorPointIndirect","anchorPointIndirectJson","anchorPointIndirect","createCorrelationGroup","correlationGroupJson","groupFlags","rotationThetas","params","paramJson","param","A","alpha","beta","T","push","correlationGroup","load","gltfGpmLocalJson","typeOf","object","storageType","Direct","loadDirect","Indirect","loadIndirect","anchorPointsDirect","covarianceDirectUpperTriangle","anchorPointsDirectJson","covarianceDirect","gltfGpmLocal","anchorPointsIndirect","intraTileCorrelationGroups","anchorPointsIndirectJson","intraTileCorrelationGroupsJson"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/engine/Source/Scene/Model/Extensions/Gpm/GltfGpmLoader.js"],"sourcesContent":["import Cartesian3 from \"../../../../Core/Cartesian3.js\";\nimport Check from \"../../../../Core/Check.js\";\nimport Matrix3 from \"../../../../Core/Matrix3.js\";\nimport RuntimeError from \"../../../../Core/RuntimeError.js\";\nimport AnchorPointDirect from \"./AnchorPointDirect.js\";\nimport AnchorPointIndirect from \"./AnchorPointIndirect.js\";\nimport CorrelationGroup from \"./CorrelationGroup.js\";\nimport GltfGpmLocal from \"./GltfGpmLocal.js\";\nimport Spdcf from \"./Spdcf.js\";\nimport StorageType from \"./StorageType.js\";\n\n/**\n * Loads glTF NGA_gpm_local from the root of a glTF object\n *\n * @alias GltfGpmLoader\n * @constructor\n *\n * @param {object} options Object with the following properties:\n * @param {object} options.gltf The glTF JSON.\n * @param {string} [options.extension] The <code>NGA_gpm_local</code> extension object.\n *\n * @private\n */\nfunction GltfGpmLoader() {}\n\n/**\n * Creates a Matrix3 that describes a covariance matrix (which is\n * symmetric) from the array containing the upper triangle, in\n * column-major order.\n *\n * @param {number[]} array The input array\n * @returns {Matrix3} The Matrix3\n */\nfunction createCovarianceMatrixFromUpperTriangle(array) {\n  const covarianceMatrix = new Matrix3(\n    array[0],\n    array[1],\n    array[3],\n    array[1],\n    array[2],\n    array[4],\n    array[3],\n    array[4],\n    array[5],\n  );\n  return covarianceMatrix;\n}\n\n/**\n * Creates an `AnchorPointDirect` from the given JSON representation\n *\n * @param {object} anchorPointDirectJson The input JSON\n * @returns {AnchorPointDirect} The direct anchor point\n */\nfunction createAnchorPointDirect(anchorPointDirectJson) {\n  const position = Cartesian3.fromArray(\n    anchorPointDirectJson.position,\n    0,\n    new Cartesian3(),\n  );\n  const adjustmentParams = Cartesian3.fromArray(\n    anchorPointDirectJson.adjustmentParams,\n    0,\n    new Cartesian3(),\n  );\n  const anchorPointDirect = new AnchorPointDirect({\n    position: position,\n    adjustmentParams: adjustmentParams,\n  });\n  return anchorPointDirect;\n}\n\n/**\n * Creates an `AnchorPointIndirect` from the given JSON representation\n *\n * @param {object} anchorPointIndirectJson The input JSON\n * @returns {AnchorPointIndirect} The indirect anchor point\n */\nfunction createAnchorPointIndirect(anchorPointIndirectJson) {\n  const position = Cartesian3.fromArray(\n    anchorPointIndirectJson.position,\n    0,\n    new Cartesian3(),\n  );\n  const adjustmentParams = Cartesian3.fromArray(\n    anchorPointIndirectJson.adjustmentParams,\n    0,\n    new Cartesian3(),\n  );\n  const covarianceMatrix = createCovarianceMatrixFromUpperTriangle(\n    anchorPointIndirectJson.covarianceMatrix,\n  );\n  const anchorPointIndirect = new AnchorPointIndirect({\n    position: position,\n    adjustmentParams: adjustmentParams,\n    covarianceMatrix: covarianceMatrix,\n  });\n  return anchorPointIndirect;\n}\n\n/**\n * Creates a `CorrelationGroup` from the given JSON representation\n *\n * @param {object} correlationGroupJson The input JSON\n * @returns {CorrelationGroup} The correlation group\n */\nfunction createCorrelationGroup(correlationGroupJson) {\n  const groupFlags = correlationGroupJson.groupFlags;\n  const rotationThetas = Cartesian3.fromArray(\n    correlationGroupJson.rotationThetas,\n    0,\n    new Cartesian3(),\n  );\n  const params = [];\n  for (const paramJson of correlationGroupJson.params) {\n    const param = new Spdcf({\n      A: paramJson.A,\n      alpha: paramJson.alpha,\n      beta: paramJson.beta,\n      T: paramJson.T,\n    });\n    params.push(param);\n  }\n  const correlationGroup = new CorrelationGroup({\n    groupFlags: groupFlags,\n    rotationThetas: rotationThetas,\n    params: params,\n  });\n  return correlationGroup;\n}\n\n/**\n * Loads the GPM data from the given JSON that was found as the\n * `NGA_gpm_local` extension object in the root of the glTF.\n *\n * @param {object} gltfGpmLocalJson The extension object\n * @returns {GltfGpmLocal} The parsed object\n * @throws RuntimeError When the given object contains invalid storage types.\n * @private\n */\nGltfGpmLoader.load = function (gltfGpmLocalJson) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.typeOf.object(\"gltfGpmLocalJson\", gltfGpmLocalJson);\n  //>>includeEnd('debug');\n\n  const storageType = gltfGpmLocalJson.storageType;\n  if (storageType === StorageType.Direct) {\n    return GltfGpmLoader.loadDirect(gltfGpmLocalJson);\n  }\n  if (storageType === StorageType.Indirect) {\n    return GltfGpmLoader.loadIndirect(gltfGpmLocalJson);\n  }\n  throw new RuntimeError(\n    `Invalid storage type in NGA_gpm_local - expected 'Direct' or 'Indirect', but found ${storageType}`,\n  );\n};\n\n/**\n * Loads the GPM data from the given JSON that was found as the\n * `NGA_gpm_local` extension object in the root of the glTF,\n * assuming that the `storageType` of the given object is\n * `StorageType.Direct`.\n *\n * @param {object} gltfGpmLocalJson The extension object\n * @returns {GltfGpmLocal} The parsed object\n * @private\n */\nGltfGpmLoader.loadDirect = function (gltfGpmLocalJson) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.typeOf.object(\"gltfGpmLocalJson\", gltfGpmLocalJson);\n  Check.typeOf.object(\n    \"gltfGpmLocalJson.anchorPointsDirect\",\n    gltfGpmLocalJson.anchorPointsDirect,\n  );\n  Check.typeOf.object(\n    \"gltfGpmLocalJson.covarianceDirectUpperTriangle\",\n    gltfGpmLocalJson.covarianceDirectUpperTriangle,\n  );\n  //>>includeEnd('debug');\n\n  const anchorPointsDirect = [];\n  const anchorPointsDirectJson = gltfGpmLocalJson.anchorPointsDirect;\n  for (const anchorPointDirectJson of anchorPointsDirectJson) {\n    const anchorPointDirect = createAnchorPointDirect(anchorPointDirectJson);\n    anchorPointsDirect.push(anchorPointDirect);\n  }\n  const covarianceDirect = createCovarianceMatrixFromUpperTriangle(\n    gltfGpmLocalJson.covarianceDirectUpperTriangle,\n  );\n\n  const gltfGpmLocal = new GltfGpmLocal({\n    storageType: StorageType.Direct,\n    anchorPointsDirect: anchorPointsDirect,\n    covarianceDirect: covarianceDirect,\n  });\n  return gltfGpmLocal;\n};\n\n/**\n * Loads the GPM data from the given JSON that was found as the\n * `NGA_gpm_local` extension object in the root of the glTF,\n * assuming that the `storageType` of the given object is\n * `StorageType.Indirect`.\n *\n * @param {object} gltfGpmLocalJson The extension object\n * @returns {GltfGpmLocal} The parsed object\n * @private\n */\nGltfGpmLoader.loadIndirect = function (gltfGpmLocalJson) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.typeOf.object(\"gltfGpmLocalJson\", gltfGpmLocalJson);\n  Check.typeOf.object(\n    \"gltfGpmLocalJson.anchorPointsIndirect\",\n    gltfGpmLocalJson.anchorPointsIndirect,\n  );\n  Check.typeOf.object(\n    \"gltfGpmLocalJson.intraTileCorrelationGroups\",\n    gltfGpmLocalJson.intraTileCorrelationGroups,\n  );\n  //>>includeEnd('debug');\n\n  const anchorPointsIndirect = [];\n  const anchorPointsIndirectJson = gltfGpmLocalJson.anchorPointsIndirect;\n  for (const anchorPointIndirectJson of anchorPointsIndirectJson) {\n    const anchorPointIndirect = createAnchorPointIndirect(\n      anchorPointIndirectJson,\n    );\n    anchorPointsIndirect.push(anchorPointIndirect);\n  }\n\n  const intraTileCorrelationGroupsJson =\n    gltfGpmLocalJson.intraTileCorrelationGroups;\n  const intraTileCorrelationGroups = [];\n\n  for (const correlationGroupJson of intraTileCorrelationGroupsJson) {\n    const correlationGroup = createCorrelationGroup(correlationGroupJson);\n    intraTileCorrelationGroups.push(correlationGroup);\n  }\n\n  const gltfGpmLocal = new GltfGpmLocal({\n    storageType: StorageType.Indirect,\n    anchorPointsIndirect: anchorPointsIndirect,\n    intraTileCorrelationGroups: intraTileCorrelationGroups,\n  });\n  return gltfGpmLocal;\n};\n\nexport default GltfGpmLoader;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}