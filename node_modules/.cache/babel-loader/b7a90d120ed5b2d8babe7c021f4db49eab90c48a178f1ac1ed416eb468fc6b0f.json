{"ast":null,"code":"import Check from \"../Core/Check.js\";\nimport defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport GeometryOffsetAttribute from \"../Core/GeometryOffsetAttribute.js\";\nimport oneTimeWarning from \"../Core/oneTimeWarning.js\";\nimport GroundPrimitive from \"../Scene/GroundPrimitive.js\";\nimport HeightReference, { isHeightReferenceClamp } from \"../Scene/HeightReference.js\";\nimport CallbackProperty from \"./CallbackProperty.js\";\nimport ConstantProperty from \"./ConstantProperty.js\";\nimport GeometryUpdater from \"./GeometryUpdater.js\";\nimport TerrainOffsetProperty from \"./TerrainOffsetProperty.js\";\nconst defaultZIndex = new ConstantProperty(0);\n\n/**\n * An abstract class for updating ground geometry entities.\n * @constructor\n * @alias GroundGeometryUpdater\n * @param {object} options An object with the following properties:\n * @param {Entity} options.entity The entity containing the geometry to be visualized.\n * @param {Scene} options.scene The scene where visualization is taking place.\n * @param {object} options.geometryOptions Options for the geometry\n * @param {string} options.geometryPropertyName The geometry property name\n * @param {string[]} options.observedPropertyNames The entity properties this geometry cares about\n */\nfunction GroundGeometryUpdater(options) {\n  GeometryUpdater.call(this, options);\n  this._zIndex = 0;\n  this._terrainOffsetProperty = undefined;\n}\nif (defined(Object.create)) {\n  GroundGeometryUpdater.prototype = Object.create(GeometryUpdater.prototype);\n  GroundGeometryUpdater.prototype.constructor = GroundGeometryUpdater;\n}\nObject.defineProperties(GroundGeometryUpdater.prototype, {\n  /**\n   * Gets the zindex\n   * @type {number}\n   * @memberof GroundGeometryUpdater.prototype\n   * @readonly\n   */\n  zIndex: {\n    get: function () {\n      return this._zIndex;\n    }\n  },\n  /**\n   * Gets the terrain offset property\n   * @type {TerrainOffsetProperty}\n   * @memberof GroundGeometryUpdater.prototype\n   * @readonly\n   * @private\n   */\n  terrainOffsetProperty: {\n    get: function () {\n      return this._terrainOffsetProperty;\n    }\n  }\n});\nGroundGeometryUpdater.prototype._isOnTerrain = function (entity, geometry) {\n  return this._fillEnabled && !defined(geometry.height) && !defined(geometry.extrudedHeight) && GroundPrimitive.isSupported(this._scene);\n};\nGroundGeometryUpdater.prototype._getIsClosed = function (options) {\n  const height = options.height;\n  const extrudedHeight = options.extrudedHeight;\n  return height === 0 || defined(extrudedHeight) && extrudedHeight !== height;\n};\nGroundGeometryUpdater.prototype._computeCenter = DeveloperError.throwInstantiationError;\nGroundGeometryUpdater.prototype._onEntityPropertyChanged = function (entity, propertyName, newValue, oldValue) {\n  GeometryUpdater.prototype._onEntityPropertyChanged.call(this, entity, propertyName, newValue, oldValue);\n  if (this._observedPropertyNames.indexOf(propertyName) === -1) {\n    return;\n  }\n  const geometry = this._entity[this._geometryPropertyName];\n  if (!defined(geometry)) {\n    return;\n  }\n  if (defined(geometry.zIndex) && (defined(geometry.height) || defined(geometry.extrudedHeight))) {\n    oneTimeWarning(oneTimeWarning.geometryZIndex);\n  }\n  this._zIndex = defaultValue(geometry.zIndex, defaultZIndex);\n  if (defined(this._terrainOffsetProperty)) {\n    this._terrainOffsetProperty.destroy();\n    this._terrainOffsetProperty = undefined;\n  }\n  const heightReferenceProperty = geometry.heightReference;\n  const extrudedHeightReferenceProperty = geometry.extrudedHeightReference;\n  if (defined(heightReferenceProperty) || defined(extrudedHeightReferenceProperty)) {\n    const centerPosition = new CallbackProperty(this._computeCenter.bind(this), !this._dynamic);\n    this._terrainOffsetProperty = new TerrainOffsetProperty(this._scene, centerPosition, heightReferenceProperty, extrudedHeightReferenceProperty);\n  }\n};\n\n/**\n * Destroys and resources used by the object.  Once an object is destroyed, it should not be used.\n *\n * @exception {DeveloperError} This object was destroyed, i.e., destroy() was called.\n */\nGroundGeometryUpdater.prototype.destroy = function () {\n  if (defined(this._terrainOffsetProperty)) {\n    this._terrainOffsetProperty.destroy();\n    this._terrainOffsetProperty = undefined;\n  }\n  GeometryUpdater.prototype.destroy.call(this);\n};\n\n/**\n * @private\n */\nGroundGeometryUpdater.getGeometryHeight = function (height, heightReference) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.defined(\"heightReference\", heightReference);\n  //>>includeEnd('debug');\n  if (!defined(height)) {\n    if (heightReference !== HeightReference.NONE) {\n      oneTimeWarning(oneTimeWarning.geometryHeightReference);\n    }\n    return;\n  }\n  if (!isHeightReferenceClamp(heightReference)) {\n    return height;\n  }\n  return 0.0;\n};\n\n/**\n * @private\n */\nGroundGeometryUpdater.getGeometryExtrudedHeight = function (extrudedHeight, extrudedHeightReference) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.defined(\"extrudedHeightReference\", extrudedHeightReference);\n  //>>includeEnd('debug');\n  if (!defined(extrudedHeight)) {\n    if (extrudedHeightReference !== HeightReference.NONE) {\n      oneTimeWarning(oneTimeWarning.geometryExtrudedHeightReference);\n    }\n    return;\n  }\n  if (!isHeightReferenceClamp(extrudedHeightReference)) {\n    return extrudedHeight;\n  }\n  return GroundGeometryUpdater.CLAMP_TO_GROUND;\n};\n\n/**\n * @private\n */\nGroundGeometryUpdater.CLAMP_TO_GROUND = \"clamp\";\n\n/**\n * @private\n */\nGroundGeometryUpdater.computeGeometryOffsetAttribute = function (height, heightReference, extrudedHeight, extrudedHeightReference) {\n  if (!defined(height) || !defined(heightReference)) {\n    heightReference = HeightReference.NONE;\n  }\n  if (!defined(extrudedHeight) || !defined(extrudedHeightReference)) {\n    extrudedHeightReference = HeightReference.NONE;\n  }\n  let n = 0;\n  if (heightReference !== HeightReference.NONE) {\n    n++;\n  }\n  if (extrudedHeightReference === HeightReference.RELATIVE_TO_GROUND) {\n    n++;\n  }\n  if (n === 2) {\n    return GeometryOffsetAttribute.ALL;\n  }\n  if (n === 1) {\n    return GeometryOffsetAttribute.TOP;\n  }\n  return undefined;\n};\nexport default GroundGeometryUpdater;","map":{"version":3,"names":["Check","defaultValue","defined","DeveloperError","GeometryOffsetAttribute","oneTimeWarning","GroundPrimitive","HeightReference","isHeightReferenceClamp","CallbackProperty","ConstantProperty","GeometryUpdater","TerrainOffsetProperty","defaultZIndex","GroundGeometryUpdater","options","call","_zIndex","_terrainOffsetProperty","undefined","Object","create","prototype","constructor","defineProperties","zIndex","get","terrainOffsetProperty","_isOnTerrain","entity","geometry","_fillEnabled","height","extrudedHeight","isSupported","_scene","_getIsClosed","_computeCenter","throwInstantiationError","_onEntityPropertyChanged","propertyName","newValue","oldValue","_observedPropertyNames","indexOf","_entity","_geometryPropertyName","geometryZIndex","destroy","heightReferenceProperty","heightReference","extrudedHeightReferenceProperty","extrudedHeightReference","centerPosition","bind","_dynamic","getGeometryHeight","NONE","geometryHeightReference","getGeometryExtrudedHeight","geometryExtrudedHeightReference","CLAMP_TO_GROUND","computeGeometryOffsetAttribute","n","RELATIVE_TO_GROUND","ALL","TOP"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/engine/Source/DataSources/GroundGeometryUpdater.js"],"sourcesContent":["import Check from \"../Core/Check.js\";\nimport defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport GeometryOffsetAttribute from \"../Core/GeometryOffsetAttribute.js\";\nimport oneTimeWarning from \"../Core/oneTimeWarning.js\";\nimport GroundPrimitive from \"../Scene/GroundPrimitive.js\";\nimport HeightReference, {\n  isHeightReferenceClamp,\n} from \"../Scene/HeightReference.js\";\nimport CallbackProperty from \"./CallbackProperty.js\";\nimport ConstantProperty from \"./ConstantProperty.js\";\nimport GeometryUpdater from \"./GeometryUpdater.js\";\nimport TerrainOffsetProperty from \"./TerrainOffsetProperty.js\";\n\nconst defaultZIndex = new ConstantProperty(0);\n\n/**\n * An abstract class for updating ground geometry entities.\n * @constructor\n * @alias GroundGeometryUpdater\n * @param {object} options An object with the following properties:\n * @param {Entity} options.entity The entity containing the geometry to be visualized.\n * @param {Scene} options.scene The scene where visualization is taking place.\n * @param {object} options.geometryOptions Options for the geometry\n * @param {string} options.geometryPropertyName The geometry property name\n * @param {string[]} options.observedPropertyNames The entity properties this geometry cares about\n */\nfunction GroundGeometryUpdater(options) {\n  GeometryUpdater.call(this, options);\n\n  this._zIndex = 0;\n  this._terrainOffsetProperty = undefined;\n}\n\nif (defined(Object.create)) {\n  GroundGeometryUpdater.prototype = Object.create(GeometryUpdater.prototype);\n  GroundGeometryUpdater.prototype.constructor = GroundGeometryUpdater;\n}\n\nObject.defineProperties(GroundGeometryUpdater.prototype, {\n  /**\n   * Gets the zindex\n   * @type {number}\n   * @memberof GroundGeometryUpdater.prototype\n   * @readonly\n   */\n  zIndex: {\n    get: function () {\n      return this._zIndex;\n    },\n  },\n\n  /**\n   * Gets the terrain offset property\n   * @type {TerrainOffsetProperty}\n   * @memberof GroundGeometryUpdater.prototype\n   * @readonly\n   * @private\n   */\n  terrainOffsetProperty: {\n    get: function () {\n      return this._terrainOffsetProperty;\n    },\n  },\n});\n\nGroundGeometryUpdater.prototype._isOnTerrain = function (entity, geometry) {\n  return (\n    this._fillEnabled &&\n    !defined(geometry.height) &&\n    !defined(geometry.extrudedHeight) &&\n    GroundPrimitive.isSupported(this._scene)\n  );\n};\n\nGroundGeometryUpdater.prototype._getIsClosed = function (options) {\n  const height = options.height;\n  const extrudedHeight = options.extrudedHeight;\n  return height === 0 || (defined(extrudedHeight) && extrudedHeight !== height);\n};\n\nGroundGeometryUpdater.prototype._computeCenter =\n  DeveloperError.throwInstantiationError;\n\nGroundGeometryUpdater.prototype._onEntityPropertyChanged = function (\n  entity,\n  propertyName,\n  newValue,\n  oldValue,\n) {\n  GeometryUpdater.prototype._onEntityPropertyChanged.call(\n    this,\n    entity,\n    propertyName,\n    newValue,\n    oldValue,\n  );\n  if (this._observedPropertyNames.indexOf(propertyName) === -1) {\n    return;\n  }\n\n  const geometry = this._entity[this._geometryPropertyName];\n  if (!defined(geometry)) {\n    return;\n  }\n  if (\n    defined(geometry.zIndex) &&\n    (defined(geometry.height) || defined(geometry.extrudedHeight))\n  ) {\n    oneTimeWarning(oneTimeWarning.geometryZIndex);\n  }\n\n  this._zIndex = defaultValue(geometry.zIndex, defaultZIndex);\n\n  if (defined(this._terrainOffsetProperty)) {\n    this._terrainOffsetProperty.destroy();\n    this._terrainOffsetProperty = undefined;\n  }\n\n  const heightReferenceProperty = geometry.heightReference;\n  const extrudedHeightReferenceProperty = geometry.extrudedHeightReference;\n\n  if (\n    defined(heightReferenceProperty) ||\n    defined(extrudedHeightReferenceProperty)\n  ) {\n    const centerPosition = new CallbackProperty(\n      this._computeCenter.bind(this),\n      !this._dynamic,\n    );\n    this._terrainOffsetProperty = new TerrainOffsetProperty(\n      this._scene,\n      centerPosition,\n      heightReferenceProperty,\n      extrudedHeightReferenceProperty,\n    );\n  }\n};\n\n/**\n * Destroys and resources used by the object.  Once an object is destroyed, it should not be used.\n *\n * @exception {DeveloperError} This object was destroyed, i.e., destroy() was called.\n */\nGroundGeometryUpdater.prototype.destroy = function () {\n  if (defined(this._terrainOffsetProperty)) {\n    this._terrainOffsetProperty.destroy();\n    this._terrainOffsetProperty = undefined;\n  }\n\n  GeometryUpdater.prototype.destroy.call(this);\n};\n\n/**\n * @private\n */\nGroundGeometryUpdater.getGeometryHeight = function (height, heightReference) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.defined(\"heightReference\", heightReference);\n  //>>includeEnd('debug');\n  if (!defined(height)) {\n    if (heightReference !== HeightReference.NONE) {\n      oneTimeWarning(oneTimeWarning.geometryHeightReference);\n    }\n    return;\n  }\n\n  if (!isHeightReferenceClamp(heightReference)) {\n    return height;\n  }\n\n  return 0.0;\n};\n\n/**\n * @private\n */\nGroundGeometryUpdater.getGeometryExtrudedHeight = function (\n  extrudedHeight,\n  extrudedHeightReference,\n) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.defined(\"extrudedHeightReference\", extrudedHeightReference);\n  //>>includeEnd('debug');\n  if (!defined(extrudedHeight)) {\n    if (extrudedHeightReference !== HeightReference.NONE) {\n      oneTimeWarning(oneTimeWarning.geometryExtrudedHeightReference);\n    }\n    return;\n  }\n  if (!isHeightReferenceClamp(extrudedHeightReference)) {\n    return extrudedHeight;\n  }\n\n  return GroundGeometryUpdater.CLAMP_TO_GROUND;\n};\n\n/**\n * @private\n */\nGroundGeometryUpdater.CLAMP_TO_GROUND = \"clamp\";\n\n/**\n * @private\n */\nGroundGeometryUpdater.computeGeometryOffsetAttribute = function (\n  height,\n  heightReference,\n  extrudedHeight,\n  extrudedHeightReference,\n) {\n  if (!defined(height) || !defined(heightReference)) {\n    heightReference = HeightReference.NONE;\n  }\n  if (!defined(extrudedHeight) || !defined(extrudedHeightReference)) {\n    extrudedHeightReference = HeightReference.NONE;\n  }\n  let n = 0;\n  if (heightReference !== HeightReference.NONE) {\n    n++;\n  }\n  if (extrudedHeightReference === HeightReference.RELATIVE_TO_GROUND) {\n    n++;\n  }\n  if (n === 2) {\n    return GeometryOffsetAttribute.ALL;\n  }\n  if (n === 1) {\n    return GeometryOffsetAttribute.TOP;\n  }\n\n  return undefined;\n};\nexport default GroundGeometryUpdater;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}