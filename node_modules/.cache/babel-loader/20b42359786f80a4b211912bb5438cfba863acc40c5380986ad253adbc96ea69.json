{"ast":null,"code":"//This file is automatically rebuilt by the Cesium build process.\nexport default \"/**\\n\\\n * Select which direction vector to use for dynamic atmosphere lighting based on an enum value\\n\\\n *\\n\\\n * @name czm_getDynamicAtmosphereLightDirection\\n\\\n * @glslfunction\\n\\\n * @see DynamicAtmosphereLightingType.js\\n\\\n *\\n\\\n * @param {vec3} positionWC the position of the vertex/fragment in world coordinates. This is normalized and returned when dynamic lighting is turned off.\\n\\\n * @param {float} lightEnum The enum value for selecting between light sources.\\n\\\n * @return {vec3} The normalized light direction vector. Depending on the enum value, it is either positionWC, czm_lightDirectionWC or czm_sunDirectionWC\\n\\\n */\\n\\\nvec3 czm_getDynamicAtmosphereLightDirection(vec3 positionWC, float lightEnum) {\\n\\\n    const float NONE = 0.0;\\n\\\n    const float SCENE_LIGHT = 1.0;\\n\\\n    const float SUNLIGHT = 2.0;\\n\\\n\\n\\\n    vec3 lightDirection =\\n\\\n        positionWC * float(lightEnum == NONE) +\\n\\\n        czm_lightDirectionWC * float(lightEnum == SCENE_LIGHT) +\\n\\\n        czm_sunDirectionWC * float(lightEnum == SUNLIGHT);\\n\\\n    return normalize(lightDirection);\\n\\\n}\\n\\\n\";","map":{"version":3,"names":[],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/engine/Source/Shaders/Builtin/Functions/getDynamicAtmosphereLightDirection.js"],"sourcesContent":["//This file is automatically rebuilt by the Cesium build process.\nexport default \"/**\\n\\\n * Select which direction vector to use for dynamic atmosphere lighting based on an enum value\\n\\\n *\\n\\\n * @name czm_getDynamicAtmosphereLightDirection\\n\\\n * @glslfunction\\n\\\n * @see DynamicAtmosphereLightingType.js\\n\\\n *\\n\\\n * @param {vec3} positionWC the position of the vertex/fragment in world coordinates. This is normalized and returned when dynamic lighting is turned off.\\n\\\n * @param {float} lightEnum The enum value for selecting between light sources.\\n\\\n * @return {vec3} The normalized light direction vector. Depending on the enum value, it is either positionWC, czm_lightDirectionWC or czm_sunDirectionWC\\n\\\n */\\n\\\nvec3 czm_getDynamicAtmosphereLightDirection(vec3 positionWC, float lightEnum) {\\n\\\n    const float NONE = 0.0;\\n\\\n    const float SCENE_LIGHT = 1.0;\\n\\\n    const float SUNLIGHT = 2.0;\\n\\\n\\n\\\n    vec3 lightDirection =\\n\\\n        positionWC * float(lightEnum == NONE) +\\n\\\n        czm_lightDirectionWC * float(lightEnum == SCENE_LIGHT) +\\n\\\n        czm_sunDirectionWC * float(lightEnum == SUNLIGHT);\\n\\\n    return normalize(lightDirection);\\n\\\n}\\n\\\n\";\n"],"mappings":"AAAA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}