{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/src/components/Context/LangContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// LangContext.js\nimport React, { createContext, useState, useContext } from \"react\";\nimport { translations } from \"./translations\";\n\n// Create the context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LangContext = /*#__PURE__*/createContext();\n\n// Provider component\nexport function LangProvider({\n  children\n}) {\n  _s();\n  // Manage the current language state (default to English)\n  const [language, setLanguage] = useState(\"en\");\n\n  // Toggle or set language\n  function changeLanguage(lang) {\n    setLanguage(lang);\n  }\n\n  // Retrieve translation strings based on the current language\n  function t(key) {\n    return translations[language][key] || key;\n  }\n\n  // Provide t() and current language data to consumers\n  return /*#__PURE__*/_jsxDEV(LangContext.Provider, {\n    value: {\n      language,\n      changeLanguage,\n      t\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n// Custom hook for easy usage in components\n_s(LangProvider, \"JgNS4s3wc06/6u6z+Ak7Ai5ELN8=\");\n_c = LangProvider;\nexport function useLang() {\n  _s2();\n  return useContext(LangContext);\n}\n_s2(useLang, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"LangProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","translations","jsxDEV","_jsxDEV","LangContext","LangProvider","children","_s","language","setLanguage","changeLanguage","lang","t","key","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useLang","_s2","$RefreshReg$"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/src/components/Context/LangContext.js"],"sourcesContent":["// LangContext.js\nimport React, { createContext, useState, useContext } from \"react\";\nimport { translations } from \"./translations\";\n\n// Create the context\nconst LangContext = createContext();\n\n// Provider component\nexport function LangProvider({ children }) {\n  // Manage the current language state (default to English)\n  const [language, setLanguage] = useState(\"en\");\n\n  // Toggle or set language\n  function changeLanguage(lang) {\n    setLanguage(lang);\n  }\n\n  // Retrieve translation strings based on the current language\n  function t(key) {\n    return translations[language][key] || key;\n  }\n\n  // Provide t() and current language data to consumers\n  return (\n    <LangContext.Provider value={{ language, changeLanguage, t }}>\n      {children}\n    </LangContext.Provider>\n  );\n}\n\n// Custom hook for easy usage in components\nexport function useLang() {\n  return useContext(LangContext);\n}\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAClE,SAASC,YAAY,QAAQ,gBAAgB;;AAE7C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;;AAEnC;AACA,OAAO,SAASO,YAAYA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACzC;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;;EAE9C;EACA,SAASW,cAAcA,CAACC,IAAI,EAAE;IAC5BF,WAAW,CAACE,IAAI,CAAC;EACnB;;EAEA;EACA,SAASC,CAACA,CAACC,GAAG,EAAE;IACd,OAAOZ,YAAY,CAACO,QAAQ,CAAC,CAACK,GAAG,CAAC,IAAIA,GAAG;EAC3C;;EAEA;EACA,oBACEV,OAAA,CAACC,WAAW,CAACU,QAAQ;IAACC,KAAK,EAAE;MAAEP,QAAQ;MAAEE,cAAc;MAAEE;IAAE,CAAE;IAAAN,QAAA,EAC1DA;EAAQ;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B;;AAEA;AAAAZ,EAAA,CAtBgBF,YAAY;AAAAe,EAAA,GAAZf,YAAY;AAuB5B,OAAO,SAASgB,OAAOA,CAAA,EAAG;EAAAC,GAAA;EACxB,OAAOtB,UAAU,CAACI,WAAW,CAAC;AAChC;AAACkB,GAAA,CAFeD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}