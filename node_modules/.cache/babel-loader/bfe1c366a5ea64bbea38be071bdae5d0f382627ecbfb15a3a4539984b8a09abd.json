{"ast":null,"code":"import defined from \"./defined.js\";\nimport DeveloperError from \"./DeveloperError.js\";\n\n/**\n * Parses a query string into an object, where the keys and values of the object are the\n * name/value pairs from the query string, decoded. If a name appears multiple times,\n * the value in the object will be an array of values.\n * @function queryToObject\n *\n * @param {string} queryString The query string.\n * @returns {object} An object containing the parameters parsed from the query string.\n *\n *\n * @example\n * const obj = Cesium.queryToObject('key1=some%20value&key2=a%2Fb&key3=x&key3=y');\n * // obj will be:\n * // {\n * //   key1 : 'some value',\n * //   key2 : 'a/b',\n * //   key3 : ['x', 'y']\n * // }\n *\n * @see objectToQuery\n */\nfunction queryToObject(queryString) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(queryString)) {\n    throw new DeveloperError(\"queryString is required.\");\n  }\n  //>>includeEnd('debug');\n\n  const result = {};\n  if (queryString === \"\") {\n    return result;\n  }\n  const parts = queryString.replace(/\\+/g, \"%20\").split(/[&;]/);\n  for (let i = 0, len = parts.length; i < len; ++i) {\n    const subparts = parts[i].split(\"=\");\n    const name = decodeURIComponent(subparts[0]);\n    let value = subparts[1];\n    if (defined(value)) {\n      value = decodeURIComponent(value);\n    } else {\n      value = \"\";\n    }\n    const resultValue = result[name];\n    if (typeof resultValue === \"string\") {\n      // expand the single value to an array\n      result[name] = [resultValue, value];\n    } else if (Array.isArray(resultValue)) {\n      resultValue.push(value);\n    } else {\n      result[name] = value;\n    }\n  }\n  return result;\n}\nexport default queryToObject;","map":{"version":3,"names":["defined","DeveloperError","queryToObject","queryString","result","parts","replace","split","i","len","length","subparts","name","decodeURIComponent","value","resultValue","Array","isArray","push"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/engine/Source/Core/queryToObject.js"],"sourcesContent":["import defined from \"./defined.js\";\nimport DeveloperError from \"./DeveloperError.js\";\n\n/**\n * Parses a query string into an object, where the keys and values of the object are the\n * name/value pairs from the query string, decoded. If a name appears multiple times,\n * the value in the object will be an array of values.\n * @function queryToObject\n *\n * @param {string} queryString The query string.\n * @returns {object} An object containing the parameters parsed from the query string.\n *\n *\n * @example\n * const obj = Cesium.queryToObject('key1=some%20value&key2=a%2Fb&key3=x&key3=y');\n * // obj will be:\n * // {\n * //   key1 : 'some value',\n * //   key2 : 'a/b',\n * //   key3 : ['x', 'y']\n * // }\n *\n * @see objectToQuery\n */\nfunction queryToObject(queryString) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(queryString)) {\n    throw new DeveloperError(\"queryString is required.\");\n  }\n  //>>includeEnd('debug');\n\n  const result = {};\n  if (queryString === \"\") {\n    return result;\n  }\n  const parts = queryString.replace(/\\+/g, \"%20\").split(/[&;]/);\n  for (let i = 0, len = parts.length; i < len; ++i) {\n    const subparts = parts[i].split(\"=\");\n\n    const name = decodeURIComponent(subparts[0]);\n    let value = subparts[1];\n    if (defined(value)) {\n      value = decodeURIComponent(value);\n    } else {\n      value = \"\";\n    }\n\n    const resultValue = result[name];\n    if (typeof resultValue === \"string\") {\n      // expand the single value to an array\n      result[name] = [resultValue, value];\n    } else if (Array.isArray(resultValue)) {\n      resultValue.push(value);\n    } else {\n      result[name] = value;\n    }\n  }\n  return result;\n}\nexport default queryToObject;\n"],"mappings":"AAAA,OAAOA,OAAO,MAAM,cAAc;AAClC,OAAOC,cAAc,MAAM,qBAAqB;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,aAAaA,CAACC,WAAW,EAAE;EAClC;EACA,IAAI,CAACH,OAAO,CAACG,WAAW,CAAC,EAAE;IACzB,MAAM,IAAIF,cAAc,CAAC,0BAA0B,CAAC;EACtD;EACA;;EAEA,MAAMG,MAAM,GAAG,CAAC,CAAC;EACjB,IAAID,WAAW,KAAK,EAAE,EAAE;IACtB,OAAOC,MAAM;EACf;EACA,MAAMC,KAAK,GAAGF,WAAW,CAACG,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CAACC,KAAK,CAAC,MAAM,CAAC;EAC7D,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEC,GAAG,GAAGJ,KAAK,CAACK,MAAM,EAAEF,CAAC,GAAGC,GAAG,EAAE,EAAED,CAAC,EAAE;IAChD,MAAMG,QAAQ,GAAGN,KAAK,CAACG,CAAC,CAAC,CAACD,KAAK,CAAC,GAAG,CAAC;IAEpC,MAAMK,IAAI,GAAGC,kBAAkB,CAACF,QAAQ,CAAC,CAAC,CAAC,CAAC;IAC5C,IAAIG,KAAK,GAAGH,QAAQ,CAAC,CAAC,CAAC;IACvB,IAAIX,OAAO,CAACc,KAAK,CAAC,EAAE;MAClBA,KAAK,GAAGD,kBAAkB,CAACC,KAAK,CAAC;IACnC,CAAC,MAAM;MACLA,KAAK,GAAG,EAAE;IACZ;IAEA,MAAMC,WAAW,GAAGX,MAAM,CAACQ,IAAI,CAAC;IAChC,IAAI,OAAOG,WAAW,KAAK,QAAQ,EAAE;MACnC;MACAX,MAAM,CAACQ,IAAI,CAAC,GAAG,CAACG,WAAW,EAAED,KAAK,CAAC;IACrC,CAAC,MAAM,IAAIE,KAAK,CAACC,OAAO,CAACF,WAAW,CAAC,EAAE;MACrCA,WAAW,CAACG,IAAI,CAACJ,KAAK,CAAC;IACzB,CAAC,MAAM;MACLV,MAAM,CAACQ,IAAI,CAAC,GAAGE,KAAK;IACtB;EACF;EACA,OAAOV,MAAM;AACf;AACA,eAAeF,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}