{"ast":null,"code":"import { defaultValue, defined, DeveloperError, Event } from \"@cesium/engine\";\nimport knockout from \"./ThirdParty/knockout.js\";\n\n/**\n * Create a Command from a given function, for use with ViewModels.\n *\n * A Command is a function with an extra <code>canExecute</code> observable property to determine\n * whether the command can be executed.  When executed, a Command function will check the\n * value of <code>canExecute</code> and throw if false.  It also provides events for when\n * a command has been or is about to be executed.\n *\n * @function\n *\n * @param {Function} func The function to execute.\n * @param {boolean} [canExecute=true] A boolean indicating whether the function can currently be executed.\n */\nfunction createCommand(func, canExecute) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(func)) {\n    throw new DeveloperError(\"func is required.\");\n  }\n  //>>includeEnd('debug');\n\n  canExecute = defaultValue(canExecute, true);\n  const beforeExecute = new Event();\n  const afterExecute = new Event();\n  function command() {\n    //>>includeStart('debug', pragmas.debug);\n    if (!command.canExecute) {\n      throw new DeveloperError(\"Cannot execute command, canExecute is false.\");\n    }\n    //>>includeEnd('debug');\n\n    const commandInfo = {\n      args: arguments,\n      cancel: false\n    };\n    let result;\n    beforeExecute.raiseEvent(commandInfo);\n    if (!commandInfo.cancel) {\n      result = func.apply(null, arguments);\n      afterExecute.raiseEvent(result);\n    }\n    return result;\n  }\n  command.canExecute = canExecute;\n  knockout.track(command, [\"canExecute\"]);\n  Object.defineProperties(command, {\n    beforeExecute: {\n      value: beforeExecute\n    },\n    afterExecute: {\n      value: afterExecute\n    }\n  });\n  return command;\n}\nexport default createCommand;","map":{"version":3,"names":["defaultValue","defined","DeveloperError","Event","knockout","createCommand","func","canExecute","beforeExecute","afterExecute","command","commandInfo","args","arguments","cancel","result","raiseEvent","apply","track","Object","defineProperties","value"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/widgets/Source/createCommand.js"],"sourcesContent":["import { defaultValue, defined, DeveloperError, Event } from \"@cesium/engine\";\nimport knockout from \"./ThirdParty/knockout.js\";\n\n/**\n * Create a Command from a given function, for use with ViewModels.\n *\n * A Command is a function with an extra <code>canExecute</code> observable property to determine\n * whether the command can be executed.  When executed, a Command function will check the\n * value of <code>canExecute</code> and throw if false.  It also provides events for when\n * a command has been or is about to be executed.\n *\n * @function\n *\n * @param {Function} func The function to execute.\n * @param {boolean} [canExecute=true] A boolean indicating whether the function can currently be executed.\n */\nfunction createCommand(func, canExecute) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(func)) {\n    throw new DeveloperError(\"func is required.\");\n  }\n  //>>includeEnd('debug');\n\n  canExecute = defaultValue(canExecute, true);\n\n  const beforeExecute = new Event();\n  const afterExecute = new Event();\n\n  function command() {\n    //>>includeStart('debug', pragmas.debug);\n    if (!command.canExecute) {\n      throw new DeveloperError(\"Cannot execute command, canExecute is false.\");\n    }\n    //>>includeEnd('debug');\n\n    const commandInfo = {\n      args: arguments,\n      cancel: false,\n    };\n\n    let result;\n    beforeExecute.raiseEvent(commandInfo);\n    if (!commandInfo.cancel) {\n      result = func.apply(null, arguments);\n      afterExecute.raiseEvent(result);\n    }\n    return result;\n  }\n\n  command.canExecute = canExecute;\n  knockout.track(command, [\"canExecute\"]);\n\n  Object.defineProperties(command, {\n    beforeExecute: {\n      value: beforeExecute,\n    },\n    afterExecute: {\n      value: afterExecute,\n    },\n  });\n\n  return command;\n}\nexport default createCommand;\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,OAAO,EAAEC,cAAc,EAAEC,KAAK,QAAQ,gBAAgB;AAC7E,OAAOC,QAAQ,MAAM,0BAA0B;;AAE/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,aAAaA,CAACC,IAAI,EAAEC,UAAU,EAAE;EACvC;EACA,IAAI,CAACN,OAAO,CAACK,IAAI,CAAC,EAAE;IAClB,MAAM,IAAIJ,cAAc,CAAC,mBAAmB,CAAC;EAC/C;EACA;;EAEAK,UAAU,GAAGP,YAAY,CAACO,UAAU,EAAE,IAAI,CAAC;EAE3C,MAAMC,aAAa,GAAG,IAAIL,KAAK,CAAC,CAAC;EACjC,MAAMM,YAAY,GAAG,IAAIN,KAAK,CAAC,CAAC;EAEhC,SAASO,OAAOA,CAAA,EAAG;IACjB;IACA,IAAI,CAACA,OAAO,CAACH,UAAU,EAAE;MACvB,MAAM,IAAIL,cAAc,CAAC,8CAA8C,CAAC;IAC1E;IACA;;IAEA,MAAMS,WAAW,GAAG;MAClBC,IAAI,EAAEC,SAAS;MACfC,MAAM,EAAE;IACV,CAAC;IAED,IAAIC,MAAM;IACVP,aAAa,CAACQ,UAAU,CAACL,WAAW,CAAC;IACrC,IAAI,CAACA,WAAW,CAACG,MAAM,EAAE;MACvBC,MAAM,GAAGT,IAAI,CAACW,KAAK,CAAC,IAAI,EAAEJ,SAAS,CAAC;MACpCJ,YAAY,CAACO,UAAU,CAACD,MAAM,CAAC;IACjC;IACA,OAAOA,MAAM;EACf;EAEAL,OAAO,CAACH,UAAU,GAAGA,UAAU;EAC/BH,QAAQ,CAACc,KAAK,CAACR,OAAO,EAAE,CAAC,YAAY,CAAC,CAAC;EAEvCS,MAAM,CAACC,gBAAgB,CAACV,OAAO,EAAE;IAC/BF,aAAa,EAAE;MACba,KAAK,EAAEb;IACT,CAAC;IACDC,YAAY,EAAE;MACZY,KAAK,EAAEZ;IACT;EACF,CAAC,CAAC;EAEF,OAAOC,OAAO;AAChB;AACA,eAAeL,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}