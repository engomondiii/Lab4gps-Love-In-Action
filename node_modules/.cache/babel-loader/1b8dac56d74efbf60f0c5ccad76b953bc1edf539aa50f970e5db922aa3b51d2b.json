{"ast":null,"code":"import defined from \"./defined.js\";\nimport DeveloperError from \"./DeveloperError.js\";\nimport getAbsoluteUri from \"./getAbsoluteUri.js\";\nimport Resource from \"./Resource.js\";\n\n/*global CESIUM_BASE_URL,define,require*/\n\nconst cesiumScriptRegex = /((?:.*\\/)|^)Cesium\\.js(?:\\?|\\#|$)/;\nfunction getBaseUrlFromCesiumScript() {\n  const scripts = document.getElementsByTagName(\"script\");\n  for (let i = 0, len = scripts.length; i < len; ++i) {\n    const src = scripts[i].getAttribute(\"src\");\n    const result = cesiumScriptRegex.exec(src);\n    if (result !== null) {\n      return result[1];\n    }\n  }\n  return undefined;\n}\nlet a;\nfunction tryMakeAbsolute(url) {\n  if (typeof document === \"undefined\") {\n    // Node.js and Web Workers. In both cases, the URL will already be absolute.\n    return url;\n  }\n  if (!defined(a)) {\n    a = document.createElement(\"a\");\n  }\n  a.href = url;\n  return a.href;\n}\nlet baseResource;\nfunction getCesiumBaseUrl() {\n  if (defined(baseResource)) {\n    return baseResource;\n  }\n  let baseUrlString;\n  if (typeof CESIUM_BASE_URL !== \"undefined\") {\n    baseUrlString = CESIUM_BASE_URL;\n  } else if (defined(import.meta?.url)) {\n    // ESM\n    baseUrlString = getAbsoluteUri(\".\", import.meta.url);\n  } else if (typeof define === \"object\" && defined(define.amd) && !define.amd.toUrlUndefined && defined(require.toUrl)) {\n    // RequireJS\n    baseUrlString = getAbsoluteUri(\"..\", buildModuleUrl(\"Core/buildModuleUrl.js\"));\n  } else {\n    // IIFE\n    baseUrlString = getBaseUrlFromCesiumScript();\n  }\n\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(baseUrlString)) {\n    throw new DeveloperError(\"Unable to determine Cesium base URL automatically, try defining a global variable called CESIUM_BASE_URL.\");\n  }\n  //>>includeEnd('debug');\n\n  baseResource = new Resource({\n    url: tryMakeAbsolute(baseUrlString)\n  });\n  baseResource.appendForwardSlash();\n  return baseResource;\n}\nfunction buildModuleUrlFromRequireToUrl(moduleID) {\n  //moduleID will be non-relative, so require it relative to this module, in Core.\n  return tryMakeAbsolute(require.toUrl(`../${moduleID}`));\n}\nfunction buildModuleUrlFromBaseUrl(moduleID) {\n  const resource = getCesiumBaseUrl().getDerivedResource({\n    url: moduleID\n  });\n  return resource.url;\n}\nlet implementation;\n\n/**\n * Given a relative URL under the Cesium base URL, returns an absolute URL.\n * @function\n *\n * @param {string} relativeUrl The relative path.\n * @returns {string} The absolutely URL representation of the provided path.\n *\n * @example\n * const viewer = new Cesium.Viewer(\"cesiumContainer\", {\n *   baseLayer: Cesium.ImageryLayer.fromProviderAsync(\n *     Cesium.TileMapServiceImageryProvider.fromUrl(\n *       Cesium.buildModuleUrl(\"Assets/Textures/NaturalEarthII\"),\n *     )),\n *   baseLayerPicker: false,\n * });\n */\nfunction buildModuleUrl(relativeUrl) {\n  if (!defined(implementation)) {\n    //select implementation\n    if (typeof define === \"object\" && defined(define.amd) && !define.amd.toUrlUndefined && defined(require.toUrl)) {\n      implementation = buildModuleUrlFromRequireToUrl;\n    } else {\n      implementation = buildModuleUrlFromBaseUrl;\n    }\n  }\n  const url = implementation(relativeUrl);\n  return url;\n}\n\n// exposed for testing\nbuildModuleUrl._cesiumScriptRegex = cesiumScriptRegex;\nbuildModuleUrl._buildModuleUrlFromBaseUrl = buildModuleUrlFromBaseUrl;\nbuildModuleUrl._clearBaseResource = function () {\n  baseResource = undefined;\n};\n\n/**\n * Sets the base URL for resolving modules.\n * @param {string} value The new base URL.\n */\nbuildModuleUrl.setBaseUrl = function (value) {\n  baseResource = Resource.DEFAULT.getDerivedResource({\n    url: value\n  });\n};\n\n/**\n * Gets the base URL for resolving modules.\n *\n * @function\n * @returns {string} The configured base URL\n */\nbuildModuleUrl.getCesiumBaseUrl = getCesiumBaseUrl;\nexport default buildModuleUrl;","map":{"version":3,"names":["defined","DeveloperError","getAbsoluteUri","Resource","cesiumScriptRegex","getBaseUrlFromCesiumScript","scripts","document","getElementsByTagName","i","len","length","src","getAttribute","result","exec","undefined","a","tryMakeAbsolute","url","createElement","href","baseResource","getCesiumBaseUrl","baseUrlString","CESIUM_BASE_URL","import","meta","define","amd","toUrlUndefined","require","toUrl","buildModuleUrl","appendForwardSlash","buildModuleUrlFromRequireToUrl","moduleID","buildModuleUrlFromBaseUrl","resource","getDerivedResource","implementation","relativeUrl","_cesiumScriptRegex","_buildModuleUrlFromBaseUrl","_clearBaseResource","setBaseUrl","value","DEFAULT"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/engine/Source/Core/buildModuleUrl.js"],"sourcesContent":["import defined from \"./defined.js\";\nimport DeveloperError from \"./DeveloperError.js\";\nimport getAbsoluteUri from \"./getAbsoluteUri.js\";\nimport Resource from \"./Resource.js\";\n\n/*global CESIUM_BASE_URL,define,require*/\n\nconst cesiumScriptRegex = /((?:.*\\/)|^)Cesium\\.js(?:\\?|\\#|$)/;\nfunction getBaseUrlFromCesiumScript() {\n  const scripts = document.getElementsByTagName(\"script\");\n  for (let i = 0, len = scripts.length; i < len; ++i) {\n    const src = scripts[i].getAttribute(\"src\");\n    const result = cesiumScriptRegex.exec(src);\n    if (result !== null) {\n      return result[1];\n    }\n  }\n  return undefined;\n}\n\nlet a;\nfunction tryMakeAbsolute(url) {\n  if (typeof document === \"undefined\") {\n    // Node.js and Web Workers. In both cases, the URL will already be absolute.\n    return url;\n  }\n\n  if (!defined(a)) {\n    a = document.createElement(\"a\");\n  }\n  a.href = url;\n  return a.href;\n}\n\nlet baseResource;\nfunction getCesiumBaseUrl() {\n  if (defined(baseResource)) {\n    return baseResource;\n  }\n\n  let baseUrlString;\n  if (typeof CESIUM_BASE_URL !== \"undefined\") {\n    baseUrlString = CESIUM_BASE_URL;\n  } else if (defined(import.meta?.url)) {\n    // ESM\n    baseUrlString = getAbsoluteUri(\".\", import.meta.url);\n  } else if (\n    typeof define === \"object\" &&\n    defined(define.amd) &&\n    !define.amd.toUrlUndefined &&\n    defined(require.toUrl)\n  ) {\n    // RequireJS\n    baseUrlString = getAbsoluteUri(\n      \"..\",\n      buildModuleUrl(\"Core/buildModuleUrl.js\"),\n    );\n  } else {\n    // IIFE\n    baseUrlString = getBaseUrlFromCesiumScript();\n  }\n\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(baseUrlString)) {\n    throw new DeveloperError(\n      \"Unable to determine Cesium base URL automatically, try defining a global variable called CESIUM_BASE_URL.\",\n    );\n  }\n  //>>includeEnd('debug');\n\n  baseResource = new Resource({\n    url: tryMakeAbsolute(baseUrlString),\n  });\n  baseResource.appendForwardSlash();\n\n  return baseResource;\n}\n\nfunction buildModuleUrlFromRequireToUrl(moduleID) {\n  //moduleID will be non-relative, so require it relative to this module, in Core.\n  return tryMakeAbsolute(require.toUrl(`../${moduleID}`));\n}\n\nfunction buildModuleUrlFromBaseUrl(moduleID) {\n  const resource = getCesiumBaseUrl().getDerivedResource({\n    url: moduleID,\n  });\n  return resource.url;\n}\n\nlet implementation;\n\n/**\n * Given a relative URL under the Cesium base URL, returns an absolute URL.\n * @function\n *\n * @param {string} relativeUrl The relative path.\n * @returns {string} The absolutely URL representation of the provided path.\n *\n * @example\n * const viewer = new Cesium.Viewer(\"cesiumContainer\", {\n *   baseLayer: Cesium.ImageryLayer.fromProviderAsync(\n *     Cesium.TileMapServiceImageryProvider.fromUrl(\n *       Cesium.buildModuleUrl(\"Assets/Textures/NaturalEarthII\"),\n *     )),\n *   baseLayerPicker: false,\n * });\n */\nfunction buildModuleUrl(relativeUrl) {\n  if (!defined(implementation)) {\n    //select implementation\n    if (\n      typeof define === \"object\" &&\n      defined(define.amd) &&\n      !define.amd.toUrlUndefined &&\n      defined(require.toUrl)\n    ) {\n      implementation = buildModuleUrlFromRequireToUrl;\n    } else {\n      implementation = buildModuleUrlFromBaseUrl;\n    }\n  }\n\n  const url = implementation(relativeUrl);\n  return url;\n}\n\n// exposed for testing\nbuildModuleUrl._cesiumScriptRegex = cesiumScriptRegex;\nbuildModuleUrl._buildModuleUrlFromBaseUrl = buildModuleUrlFromBaseUrl;\nbuildModuleUrl._clearBaseResource = function () {\n  baseResource = undefined;\n};\n\n/**\n * Sets the base URL for resolving modules.\n * @param {string} value The new base URL.\n */\nbuildModuleUrl.setBaseUrl = function (value) {\n  baseResource = Resource.DEFAULT.getDerivedResource({\n    url: value,\n  });\n};\n\n/**\n * Gets the base URL for resolving modules.\n *\n * @function\n * @returns {string} The configured base URL\n */\nbuildModuleUrl.getCesiumBaseUrl = getCesiumBaseUrl;\n\nexport default buildModuleUrl;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}