{"ast":null,"code":"import DeveloperError from \"../Core/DeveloperError.js\";\n\n/**\n * The subdivision scheme for an implicit tileset.\n *\n * @enum {string}\n * @private\n * @experimental This feature is using part of the 3D Tiles spec that is not final and is subject to change without Cesium's standard deprecation policy.\n */\nconst ImplicitSubdivisionScheme = {\n  /**\n   * A quadtree divides a parent tile into four children, split at the midpoint\n   * of the x and y dimensions of the bounding box\n   * @type {string}\n   * @constant\n   * @private\n   */\n  QUADTREE: \"QUADTREE\",\n  /**\n   * An octree divides a parent tile into eight children, split at the midpoint\n   * of the x, y, and z dimensions of the bounding box.\n   * @type {string}\n   * @constant\n   * @private\n   */\n  OCTREE: \"OCTREE\"\n};\n\n/**\n * Get the branching factor for the given subdivision scheme\n * @param {ImplicitSubdivisionScheme} subdivisionScheme The subdivision scheme\n * @returns {number} The branching factor, either 4 for QUADTREE or 8 for OCTREE\n * @private\n */\nImplicitSubdivisionScheme.getBranchingFactor = function (subdivisionScheme) {\n  switch (subdivisionScheme) {\n    case ImplicitSubdivisionScheme.OCTREE:\n      return 8;\n    case ImplicitSubdivisionScheme.QUADTREE:\n      return 4;\n    //>>includeStart('debug', pragmas.debug);\n    default:\n      throw new DeveloperError(\"subdivisionScheme is not a valid value.\");\n    //>>includeEnd('debug');\n  }\n};\nexport default Object.freeze(ImplicitSubdivisionScheme);","map":{"version":3,"names":["DeveloperError","ImplicitSubdivisionScheme","QUADTREE","OCTREE","getBranchingFactor","subdivisionScheme","Object","freeze"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/engine/Source/Scene/ImplicitSubdivisionScheme.js"],"sourcesContent":["import DeveloperError from \"../Core/DeveloperError.js\";\n\n/**\n * The subdivision scheme for an implicit tileset.\n *\n * @enum {string}\n * @private\n * @experimental This feature is using part of the 3D Tiles spec that is not final and is subject to change without Cesium's standard deprecation policy.\n */\nconst ImplicitSubdivisionScheme = {\n  /**\n   * A quadtree divides a parent tile into four children, split at the midpoint\n   * of the x and y dimensions of the bounding box\n   * @type {string}\n   * @constant\n   * @private\n   */\n  QUADTREE: \"QUADTREE\",\n  /**\n   * An octree divides a parent tile into eight children, split at the midpoint\n   * of the x, y, and z dimensions of the bounding box.\n   * @type {string}\n   * @constant\n   * @private\n   */\n  OCTREE: \"OCTREE\",\n};\n\n/**\n * Get the branching factor for the given subdivision scheme\n * @param {ImplicitSubdivisionScheme} subdivisionScheme The subdivision scheme\n * @returns {number} The branching factor, either 4 for QUADTREE or 8 for OCTREE\n * @private\n */\nImplicitSubdivisionScheme.getBranchingFactor = function (subdivisionScheme) {\n  switch (subdivisionScheme) {\n    case ImplicitSubdivisionScheme.OCTREE:\n      return 8;\n    case ImplicitSubdivisionScheme.QUADTREE:\n      return 4;\n    //>>includeStart('debug', pragmas.debug);\n    default:\n      throw new DeveloperError(\"subdivisionScheme is not a valid value.\");\n    //>>includeEnd('debug');\n  }\n};\n\nexport default Object.freeze(ImplicitSubdivisionScheme);\n"],"mappings":"AAAA,OAAOA,cAAc,MAAM,2BAA2B;;AAEtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,yBAAyB,GAAG;EAChC;AACF;AACA;AACA;AACA;AACA;AACA;EACEC,QAAQ,EAAE,UAAU;EACpB;AACF;AACA;AACA;AACA;AACA;AACA;EACEC,MAAM,EAAE;AACV,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACAF,yBAAyB,CAACG,kBAAkB,GAAG,UAAUC,iBAAiB,EAAE;EAC1E,QAAQA,iBAAiB;IACvB,KAAKJ,yBAAyB,CAACE,MAAM;MACnC,OAAO,CAAC;IACV,KAAKF,yBAAyB,CAACC,QAAQ;MACrC,OAAO,CAAC;IACV;IACA;MACE,MAAM,IAAIF,cAAc,CAAC,yCAAyC,CAAC;IACrE;EACF;AACF,CAAC;AAED,eAAeM,MAAM,CAACC,MAAM,CAACN,yBAAyB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}