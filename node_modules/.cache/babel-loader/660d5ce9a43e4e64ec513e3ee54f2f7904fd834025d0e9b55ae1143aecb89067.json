{"ast":null,"code":"import ColorGeometryInstanceAttribute from \"../Core/ColorGeometryInstanceAttribute.js\";\nimport defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport GeometryInstance from \"../Core/GeometryInstance.js\";\nimport GeometryPipeline from \"../Core/GeometryPipeline.js\";\nimport Matrix4 from \"../Core/Matrix4.js\";\nimport PerInstanceColorAppearance from \"./PerInstanceColorAppearance.js\";\nimport Primitive from \"./Primitive.js\";\n\n/**\n * Creates a {@link Primitive} to visualize well-known vector vertex attributes:\n * <code>normal</code>, <code>tangent</code>, and <code>bitangent</code>.  Normal\n * is red; tangent is green; and bitangent is blue.  If an attribute is not\n * present, it is not drawn.\n *\n * @function\n *\n * @param {object} options Object with the following properties:\n * @param {Geometry} options.geometry The <code>Geometry</code> instance with the attribute.\n * @param {number} [options.length=10000.0] The length of each line segment in meters.  This can be negative to point the vector in the opposite direction.\n * @param {Matrix4} [options.modelMatrix=Matrix4.IDENTITY] The model matrix that transforms to transform the geometry from model to world coordinates.\n * @returns {Primitive} A new <code>Primitive</code> instance with geometry for the vectors.\n *\n * @example\n * scene.primitives.add(Cesium.createTangentSpaceDebugPrimitive({\n *    geometry : instance.geometry,\n *    length : 100000.0,\n *    modelMatrix : instance.modelMatrix\n * }));\n */\nfunction createTangentSpaceDebugPrimitive(options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n  const instances = [];\n  let geometry = options.geometry;\n\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(geometry)) {\n    throw new DeveloperError(\"options.geometry is required.\");\n  }\n  //>>includeEnd('debug');\n\n  if (!defined(geometry.attributes) || !defined(geometry.primitiveType)) {\n    // to create the debug lines, we need the computed attributes.\n    // compute them if they are undefined.\n    geometry = geometry.constructor.createGeometry(geometry);\n  }\n  const attributes = geometry.attributes;\n  const modelMatrix = Matrix4.clone(defaultValue(options.modelMatrix, Matrix4.IDENTITY));\n  const length = defaultValue(options.length, 10000.0);\n  if (defined(attributes.normal)) {\n    instances.push(new GeometryInstance({\n      geometry: GeometryPipeline.createLineSegmentsForVectors(geometry, \"normal\", length),\n      attributes: {\n        color: new ColorGeometryInstanceAttribute(1.0, 0.0, 0.0, 1.0)\n      },\n      modelMatrix: modelMatrix\n    }));\n  }\n  if (defined(attributes.tangent)) {\n    instances.push(new GeometryInstance({\n      geometry: GeometryPipeline.createLineSegmentsForVectors(geometry, \"tangent\", length),\n      attributes: {\n        color: new ColorGeometryInstanceAttribute(0.0, 1.0, 0.0, 1.0)\n      },\n      modelMatrix: modelMatrix\n    }));\n  }\n  if (defined(attributes.bitangent)) {\n    instances.push(new GeometryInstance({\n      geometry: GeometryPipeline.createLineSegmentsForVectors(geometry, \"bitangent\", length),\n      attributes: {\n        color: new ColorGeometryInstanceAttribute(0.0, 0.0, 1.0, 1.0)\n      },\n      modelMatrix: modelMatrix\n    }));\n  }\n  if (instances.length > 0) {\n    return new Primitive({\n      asynchronous: false,\n      geometryInstances: instances,\n      appearance: new PerInstanceColorAppearance({\n        flat: true,\n        translucent: false\n      })\n    });\n  }\n  return undefined;\n}\nexport default createTangentSpaceDebugPrimitive;","map":{"version":3,"names":["ColorGeometryInstanceAttribute","defaultValue","defined","DeveloperError","GeometryInstance","GeometryPipeline","Matrix4","PerInstanceColorAppearance","Primitive","createTangentSpaceDebugPrimitive","options","EMPTY_OBJECT","instances","geometry","attributes","primitiveType","constructor","createGeometry","modelMatrix","clone","IDENTITY","length","normal","push","createLineSegmentsForVectors","color","tangent","bitangent","asynchronous","geometryInstances","appearance","flat","translucent","undefined"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/engine/Source/Scene/createTangentSpaceDebugPrimitive.js"],"sourcesContent":["import ColorGeometryInstanceAttribute from \"../Core/ColorGeometryInstanceAttribute.js\";\nimport defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport GeometryInstance from \"../Core/GeometryInstance.js\";\nimport GeometryPipeline from \"../Core/GeometryPipeline.js\";\nimport Matrix4 from \"../Core/Matrix4.js\";\nimport PerInstanceColorAppearance from \"./PerInstanceColorAppearance.js\";\nimport Primitive from \"./Primitive.js\";\n\n/**\n * Creates a {@link Primitive} to visualize well-known vector vertex attributes:\n * <code>normal</code>, <code>tangent</code>, and <code>bitangent</code>.  Normal\n * is red; tangent is green; and bitangent is blue.  If an attribute is not\n * present, it is not drawn.\n *\n * @function\n *\n * @param {object} options Object with the following properties:\n * @param {Geometry} options.geometry The <code>Geometry</code> instance with the attribute.\n * @param {number} [options.length=10000.0] The length of each line segment in meters.  This can be negative to point the vector in the opposite direction.\n * @param {Matrix4} [options.modelMatrix=Matrix4.IDENTITY] The model matrix that transforms to transform the geometry from model to world coordinates.\n * @returns {Primitive} A new <code>Primitive</code> instance with geometry for the vectors.\n *\n * @example\n * scene.primitives.add(Cesium.createTangentSpaceDebugPrimitive({\n *    geometry : instance.geometry,\n *    length : 100000.0,\n *    modelMatrix : instance.modelMatrix\n * }));\n */\nfunction createTangentSpaceDebugPrimitive(options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n  const instances = [];\n  let geometry = options.geometry;\n\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(geometry)) {\n    throw new DeveloperError(\"options.geometry is required.\");\n  }\n  //>>includeEnd('debug');\n\n  if (!defined(geometry.attributes) || !defined(geometry.primitiveType)) {\n    // to create the debug lines, we need the computed attributes.\n    // compute them if they are undefined.\n    geometry = geometry.constructor.createGeometry(geometry);\n  }\n\n  const attributes = geometry.attributes;\n  const modelMatrix = Matrix4.clone(\n    defaultValue(options.modelMatrix, Matrix4.IDENTITY),\n  );\n  const length = defaultValue(options.length, 10000.0);\n\n  if (defined(attributes.normal)) {\n    instances.push(\n      new GeometryInstance({\n        geometry: GeometryPipeline.createLineSegmentsForVectors(\n          geometry,\n          \"normal\",\n          length,\n        ),\n        attributes: {\n          color: new ColorGeometryInstanceAttribute(1.0, 0.0, 0.0, 1.0),\n        },\n        modelMatrix: modelMatrix,\n      }),\n    );\n  }\n\n  if (defined(attributes.tangent)) {\n    instances.push(\n      new GeometryInstance({\n        geometry: GeometryPipeline.createLineSegmentsForVectors(\n          geometry,\n          \"tangent\",\n          length,\n        ),\n        attributes: {\n          color: new ColorGeometryInstanceAttribute(0.0, 1.0, 0.0, 1.0),\n        },\n        modelMatrix: modelMatrix,\n      }),\n    );\n  }\n\n  if (defined(attributes.bitangent)) {\n    instances.push(\n      new GeometryInstance({\n        geometry: GeometryPipeline.createLineSegmentsForVectors(\n          geometry,\n          \"bitangent\",\n          length,\n        ),\n        attributes: {\n          color: new ColorGeometryInstanceAttribute(0.0, 0.0, 1.0, 1.0),\n        },\n        modelMatrix: modelMatrix,\n      }),\n    );\n  }\n\n  if (instances.length > 0) {\n    return new Primitive({\n      asynchronous: false,\n      geometryInstances: instances,\n      appearance: new PerInstanceColorAppearance({\n        flat: true,\n        translucent: false,\n      }),\n    });\n  }\n\n  return undefined;\n}\nexport default createTangentSpaceDebugPrimitive;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}