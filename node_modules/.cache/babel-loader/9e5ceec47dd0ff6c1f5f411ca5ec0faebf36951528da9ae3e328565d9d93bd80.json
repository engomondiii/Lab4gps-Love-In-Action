{"ast":null,"code":"import { defined } from \"@cesium/engine\";\nimport knockout from \"../ThirdParty/knockout.js\";\nfunction expandItemsHandler(data, event) {\n  const nestedList = event.currentTarget.parentElement.parentElement.querySelector(`#${data.name}-expander`);\n  nestedList.classList.toggle(\"active\");\n  event.currentTarget.textContent = event.currentTarget.textContent === \"+\" ? \"-\" : \"+\";\n}\nfunction trackSublayer(sublayer, viewModel) {\n  knockout.track(sublayer);\n  for (let i = 0; i < sublayer.sublayers.length; i++) {\n    trackSublayer(sublayer.sublayers[i], viewModel);\n  }\n}\nfunction isFullModel(layer) {\n  return layer.modelName === \"FullModel\";\n}\nfunction isOverview(layer) {\n  return layer.modelName === \"Overview\";\n}\nfunction isTopLayer(layer) {\n  return isOverview(layer) || isFullModel(layer);\n}\nfunction addTopLayer(layer, viewModel) {\n  if (isTopLayer(layer)) {\n    layer.visibility = false;\n    for (let i = 0; i < layer.sublayers.length; i++) {\n      layer.sublayers[i].visibility = true;\n    }\n    const topLayer = {\n      name: layer.name,\n      modelName: layer.modelName,\n      disable: knockout.observable(false),\n      index: viewModel.sublayers.length\n    };\n    viewModel.topLayers.push(topLayer);\n    viewModel.sublayers.push(layer);\n    return topLayer;\n  }\n}\nfunction handleTopLayerSelector(layer, viewModel) {\n  if (isTopLayer(layer)) {\n    viewModel.sublayers.forEach(elem => elem.visibility = false);\n    viewModel.sublayers[layer.index].visibility = true;\n    const bsl = document.getElementById(\"bsl-wrapper\");\n    if (isFullModel(layer)) {\n      viewModel.currentLevel = viewModel.selectedLevel;\n      bsl.style.display = \"block\";\n    } else {\n      viewModel.selectedLevel = viewModel.currentLevel;\n      viewModel.currentLevel = \"All\";\n      bsl.style.display = \"none\";\n    }\n  }\n}\nasync function setLevels(i3sProvider, levels) {\n  try {\n    const attributes = i3sProvider.getAttributeNames();\n    for (let index = 0; index < attributes.length; index++) {\n      if (attributes[index] === \"BldgLevel\") {\n        const values = i3sProvider.getAttributeValues(attributes[index]);\n        for (let i = 0; i < values.length; i++) {\n          levels.push(values[i]);\n        }\n      }\n    }\n    levels.sort((a, b) => a - b);\n    levels.unshift(\"All\");\n  } catch (error) {\n    console.log(`There was an error getting attributes: ${error}`);\n  }\n}\n\n/**\n * The view model for {@link I3SBuildingSceneLayerExplorer}.\n * @alias I3sBslExplorerViewModel\n * @constructor\n *\n * @param {I3SDataProvider} i3sProvider I3S Data provider instance.\n */\nfunction I3SBuildingSceneLayerExplorerViewModel(i3sProvider) {\n  const that = this;\n  this.levels = [];\n  this.viewModel = {\n    sublayers: [],\n    levels: this.levels,\n    currentLevel: knockout.observable(),\n    selectedLevel: \"All\",\n    topLayers: [{\n      name: \"Select a layer to explore...\",\n      disable: knockout.observable(true),\n      index: -1\n    }],\n    currentLayer: knockout.observable(),\n    expandClickHandler: expandItemsHandler,\n    setOptionDisable: function (option, item) {\n      knockout.applyBindingsToNode(option, {\n        disable: item.disable\n      }, item);\n    },\n    defaultLayer: undefined\n  };\n\n  // Handling change of a layer for exploring\n  this.viewModel.currentLayer.subscribe(function (layer) {\n    handleTopLayerSelector(layer, that.viewModel);\n  });\n\n  // Setting a sublayers tree to the viewModel\n  const sublayers = i3sProvider.sublayers;\n  for (let i = 0; i < sublayers.length; i++) {\n    trackSublayer(sublayers[i], this.viewModel);\n    const topLayer = addTopLayer(sublayers[i], this.viewModel);\n    if (defined(topLayer) && (isOverview(topLayer) || !defined(this.viewModel.defaultLayer) && isFullModel(topLayer))) {\n      this.viewModel.defaultLayer = topLayer;\n    }\n  }\n  // There is no Full Model and/or Overview\n  if (this.viewModel.topLayers.length === 1 && sublayers.length > 0) {\n    i3sProvider.show = false;\n    const fullModel = {\n      name: \"Full Model\",\n      modelName: \"FullModel\",\n      visibility: i3sProvider.show,\n      sublayers: i3sProvider.sublayers\n    };\n    this.viewModel.defaultLayer = addTopLayer(fullModel, this.viewModel);\n    this.viewModel.currentLayer.subscribe(function (layer) {\n      i3sProvider.show = isFullModel(layer);\n    });\n  } else if (this.viewModel.topLayers.length === 1) {\n    this.viewModel.topLayers[0].name = \"Building layers not found\";\n  }\n\n  // Setting levels to the viewModel\n  setLevels(i3sProvider, this.levels);\n\n  // Filtering by levels\n  this.viewModel.currentLevel.subscribe(function (newValue) {\n    if (newValue !== \"All\") {\n      i3sProvider.filterByAttributes([{\n        name: \"BldgLevel\",\n        values: [newValue]\n      }]);\n    } else {\n      i3sProvider.filterByAttributes();\n    }\n  });\n  return this.viewModel;\n}\nexport default I3SBuildingSceneLayerExplorerViewModel;","map":{"version":3,"names":["defined","knockout","expandItemsHandler","data","event","nestedList","currentTarget","parentElement","querySelector","name","classList","toggle","textContent","trackSublayer","sublayer","viewModel","track","i","sublayers","length","isFullModel","layer","modelName","isOverview","isTopLayer","addTopLayer","visibility","topLayer","disable","observable","index","topLayers","push","handleTopLayerSelector","forEach","elem","bsl","document","getElementById","currentLevel","selectedLevel","style","display","setLevels","i3sProvider","levels","attributes","getAttributeNames","values","getAttributeValues","sort","a","b","unshift","error","console","log","I3SBuildingSceneLayerExplorerViewModel","that","currentLayer","expandClickHandler","setOptionDisable","option","item","applyBindingsToNode","defaultLayer","undefined","subscribe","show","fullModel","newValue","filterByAttributes"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/widgets/Source/I3SBuildingSceneLayerExplorer/I3SBuildingSceneLayerExplorerViewModel.js"],"sourcesContent":["import { defined } from \"@cesium/engine\";\nimport knockout from \"../ThirdParty/knockout.js\";\n\nfunction expandItemsHandler(data, event) {\n  const nestedList =\n    event.currentTarget.parentElement.parentElement.querySelector(\n      `#${data.name}-expander`,\n    );\n  nestedList.classList.toggle(\"active\");\n  event.currentTarget.textContent =\n    event.currentTarget.textContent === \"+\" ? \"-\" : \"+\";\n}\n\nfunction trackSublayer(sublayer, viewModel) {\n  knockout.track(sublayer);\n\n  for (let i = 0; i < sublayer.sublayers.length; i++) {\n    trackSublayer(sublayer.sublayers[i], viewModel);\n  }\n}\n\nfunction isFullModel(layer) {\n  return layer.modelName === \"FullModel\";\n}\n\nfunction isOverview(layer) {\n  return layer.modelName === \"Overview\";\n}\n\nfunction isTopLayer(layer) {\n  return isOverview(layer) || isFullModel(layer);\n}\n\nfunction addTopLayer(layer, viewModel) {\n  if (isTopLayer(layer)) {\n    layer.visibility = false;\n    for (let i = 0; i < layer.sublayers.length; i++) {\n      layer.sublayers[i].visibility = true;\n    }\n\n    const topLayer = {\n      name: layer.name,\n      modelName: layer.modelName,\n      disable: knockout.observable(false),\n      index: viewModel.sublayers.length,\n    };\n    viewModel.topLayers.push(topLayer);\n    viewModel.sublayers.push(layer);\n    return topLayer;\n  }\n}\n\nfunction handleTopLayerSelector(layer, viewModel) {\n  if (isTopLayer(layer)) {\n    viewModel.sublayers.forEach((elem) => (elem.visibility = false));\n    viewModel.sublayers[layer.index].visibility = true;\n    const bsl = document.getElementById(\"bsl-wrapper\");\n    if (isFullModel(layer)) {\n      viewModel.currentLevel = viewModel.selectedLevel;\n      bsl.style.display = \"block\";\n    } else {\n      viewModel.selectedLevel = viewModel.currentLevel;\n      viewModel.currentLevel = \"All\";\n      bsl.style.display = \"none\";\n    }\n  }\n}\n\nasync function setLevels(i3sProvider, levels) {\n  try {\n    const attributes = i3sProvider.getAttributeNames();\n    for (let index = 0; index < attributes.length; index++) {\n      if (attributes[index] === \"BldgLevel\") {\n        const values = i3sProvider.getAttributeValues(attributes[index]);\n        for (let i = 0; i < values.length; i++) {\n          levels.push(values[i]);\n        }\n      }\n    }\n\n    levels.sort((a, b) => a - b);\n    levels.unshift(\"All\");\n  } catch (error) {\n    console.log(`There was an error getting attributes: ${error}`);\n  }\n}\n\n/**\n * The view model for {@link I3SBuildingSceneLayerExplorer}.\n * @alias I3sBslExplorerViewModel\n * @constructor\n *\n * @param {I3SDataProvider} i3sProvider I3S Data provider instance.\n */\nfunction I3SBuildingSceneLayerExplorerViewModel(i3sProvider) {\n  const that = this;\n  this.levels = [];\n  this.viewModel = {\n    sublayers: [],\n    levels: this.levels,\n    currentLevel: knockout.observable(),\n    selectedLevel: \"All\",\n    topLayers: [\n      {\n        name: \"Select a layer to explore...\",\n        disable: knockout.observable(true),\n        index: -1,\n      },\n    ],\n    currentLayer: knockout.observable(),\n    expandClickHandler: expandItemsHandler,\n    setOptionDisable: function (option, item) {\n      knockout.applyBindingsToNode(option, { disable: item.disable }, item);\n    },\n    defaultLayer: undefined,\n  };\n\n  // Handling change of a layer for exploring\n  this.viewModel.currentLayer.subscribe(function (layer) {\n    handleTopLayerSelector(layer, that.viewModel);\n  });\n\n  // Setting a sublayers tree to the viewModel\n  const sublayers = i3sProvider.sublayers;\n  for (let i = 0; i < sublayers.length; i++) {\n    trackSublayer(sublayers[i], this.viewModel);\n    const topLayer = addTopLayer(sublayers[i], this.viewModel);\n    if (\n      defined(topLayer) &&\n      (isOverview(topLayer) ||\n        (!defined(this.viewModel.defaultLayer) && isFullModel(topLayer)))\n    ) {\n      this.viewModel.defaultLayer = topLayer;\n    }\n  }\n  // There is no Full Model and/or Overview\n  if (this.viewModel.topLayers.length === 1 && sublayers.length > 0) {\n    i3sProvider.show = false;\n    const fullModel = {\n      name: \"Full Model\",\n      modelName: \"FullModel\",\n      visibility: i3sProvider.show,\n      sublayers: i3sProvider.sublayers,\n    };\n    this.viewModel.defaultLayer = addTopLayer(fullModel, this.viewModel);\n    this.viewModel.currentLayer.subscribe(function (layer) {\n      i3sProvider.show = isFullModel(layer);\n    });\n  } else if (this.viewModel.topLayers.length === 1) {\n    this.viewModel.topLayers[0].name = \"Building layers not found\";\n  }\n\n  // Setting levels to the viewModel\n  setLevels(i3sProvider, this.levels);\n\n  // Filtering by levels\n  this.viewModel.currentLevel.subscribe(function (newValue) {\n    if (newValue !== \"All\") {\n      i3sProvider.filterByAttributes([\n        {\n          name: \"BldgLevel\",\n          values: [newValue],\n        },\n      ]);\n    } else {\n      i3sProvider.filterByAttributes();\n    }\n  });\n\n  return this.viewModel;\n}\n\nexport default I3SBuildingSceneLayerExplorerViewModel;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}