{"ast":null,"code":"import Check from \"../Core/Check.js\";\nimport defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport getJsonFromTypedArray from \"../Core/getJsonFromTypedArray.js\";\nimport getMagic from \"../Core/getMagic.js\";\nimport isDataUri from \"../Core/isDataUri.js\";\nimport Resource from \"../Core/Resource.js\";\nimport RuntimeError from \"../Core/RuntimeError.js\";\nimport addDefaults from \"./GltfPipeline/addDefaults.js\";\nimport addPipelineExtras from \"./GltfPipeline/addPipelineExtras.js\";\nimport ForEach from \"./GltfPipeline/ForEach.js\";\nimport parseGlb from \"./GltfPipeline/parseGlb.js\";\nimport removePipelineExtras from \"./GltfPipeline/removePipelineExtras.js\";\nimport updateVersion from \"./GltfPipeline/updateVersion.js\";\nimport usesExtension from \"./GltfPipeline/usesExtension.js\";\nimport ResourceLoader from \"./ResourceLoader.js\";\nimport ResourceLoaderState from \"./ResourceLoaderState.js\";\nimport ModelUtility from \"./Model/ModelUtility.js\";\n\n/**\n * Loads a glTF JSON from a glTF or glb.\n * <p>\n * Implements the {@link ResourceLoader} interface.\n * </p>\n *\n * @alias GltfJsonLoader\n * @constructor\n * @augments ResourceLoader\n *\n * @param {object} options Object with the following properties:\n * @param {ResourceCache} options.resourceCache The {@link ResourceCache} (to avoid circular dependencies).\n * @param {Resource} options.gltfResource The {@link Resource} containing the glTF.\n * @param {Resource} options.baseResource The {@link Resource} that paths in the glTF JSON are relative to.\n * @param {Uint8Array} [options.typedArray] The typed array containing the glTF contents.\n * @param {object} [options.gltfJson] The parsed glTF JSON contents.\n * @param {string} [options.cacheKey] The cache key of the resource.\n *\n * @private\n */\nfunction GltfJsonLoader(options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n  const resourceCache = options.resourceCache;\n  const gltfResource = options.gltfResource;\n  const baseResource = options.baseResource;\n  const typedArray = options.typedArray;\n  const gltfJson = options.gltfJson;\n  const cacheKey = options.cacheKey;\n\n  //>>includeStart('debug', pragmas.debug);\n  Check.typeOf.func(\"options.resourceCache\", resourceCache);\n  Check.typeOf.object(\"options.gltfResource\", gltfResource);\n  Check.typeOf.object(\"options.baseResource\", baseResource);\n  //>>includeEnd('debug');\n\n  this._resourceCache = resourceCache;\n  this._gltfResource = gltfResource;\n  this._baseResource = baseResource;\n  this._typedArray = typedArray;\n  this._gltfJson = gltfJson;\n  this._cacheKey = cacheKey;\n  this._gltf = undefined;\n  this._bufferLoaders = [];\n  this._state = ResourceLoaderState.UNLOADED;\n  this._promise = undefined;\n}\nif (defined(Object.create)) {\n  GltfJsonLoader.prototype = Object.create(ResourceLoader.prototype);\n  GltfJsonLoader.prototype.constructor = GltfJsonLoader;\n}\nObject.defineProperties(GltfJsonLoader.prototype, {\n  /**\n   * The cache key of the resource.\n   *\n   * @memberof GltfJsonLoader.prototype\n   *\n   * @type {string}\n   * @readonly\n   * @private\n   */\n  cacheKey: {\n    get: function () {\n      return this._cacheKey;\n    }\n  },\n  /**\n   * The glTF JSON.\n   *\n   * @memberof GltfJsonLoader.prototype\n   *\n   * @type {object}\n   * @readonly\n   * @private\n   */\n  gltf: {\n    get: function () {\n      return this._gltf;\n    }\n  }\n});\n\n/**\n * Loads the resource.\n * @returns {Promise<GltfJsonLoader>} A promise which resolves to the loader when the resource loading is completed.\n * @private\n */\nGltfJsonLoader.prototype.load = async function () {\n  if (defined(this._promise)) {\n    return this._promise;\n  }\n  this._state = ResourceLoaderState.LOADING;\n  if (defined(this._gltfJson)) {\n    this._promise = processGltfJson(this, this._gltfJson);\n    return this._promise;\n  }\n  if (defined(this._typedArray)) {\n    this._promise = processGltfTypedArray(this, this._typedArray);\n    return this._promise;\n  }\n  this._promise = loadFromUri(this);\n  return this._promise;\n};\nasync function loadFromUri(gltfJsonLoader) {\n  let typedArray;\n  try {\n    const arrayBuffer = await gltfJsonLoader._fetchGltf();\n    if (gltfJsonLoader.isDestroyed()) {\n      return;\n    }\n    typedArray = new Uint8Array(arrayBuffer);\n  } catch (error) {\n    if (gltfJsonLoader.isDestroyed()) {\n      return;\n    }\n    handleError(gltfJsonLoader, error);\n  }\n  return processGltfTypedArray(gltfJsonLoader, typedArray);\n}\nfunction handleError(gltfJsonLoader, error) {\n  gltfJsonLoader.unload();\n  gltfJsonLoader._state = ResourceLoaderState.FAILED;\n  const errorMessage = `Failed to load glTF: ${gltfJsonLoader._gltfResource.url}`;\n  throw gltfJsonLoader.getError(errorMessage, error);\n}\nasync function upgradeVersion(gltfJsonLoader, gltf) {\n  if (defined(gltf.asset) && gltf.asset.version === \"2.0\" && !usesExtension(gltf, \"KHR_techniques_webgl\") && !usesExtension(gltf, \"KHR_materials_common\")) {\n    return Promise.resolve();\n  }\n\n  // Load all buffers into memory. updateVersion will read and in some cases modify\n  // the buffer data, which it accesses from buffer.extras._pipeline.source\n  const promises = [];\n  ForEach.buffer(gltf, function (buffer) {\n    if (!defined(buffer.extras._pipeline.source) &&\n    // Ignore uri if this buffer uses the glTF 1.0 KHR_binary_glTF extension\n    defined(buffer.uri)) {\n      const resource = gltfJsonLoader._baseResource.getDerivedResource({\n        url: buffer.uri\n      });\n      const resourceCache = gltfJsonLoader._resourceCache;\n      const bufferLoader = resourceCache.getExternalBufferLoader({\n        resource: resource\n      });\n      gltfJsonLoader._bufferLoaders.push(bufferLoader);\n      promises.push(bufferLoader.load().then(function () {\n        if (bufferLoader.isDestroyed()) {\n          return;\n        }\n        buffer.extras._pipeline.source = bufferLoader.typedArray;\n      }));\n    }\n  });\n  await Promise.all(promises);\n  updateVersion(gltf);\n}\nfunction decodeDataUris(gltf) {\n  const promises = [];\n  ForEach.buffer(gltf, function (buffer) {\n    const bufferUri = buffer.uri;\n    if (!defined(buffer.extras._pipeline.source) &&\n    // Ignore uri if this buffer uses the glTF 1.0 KHR_binary_glTF extension\n    defined(bufferUri) && isDataUri(bufferUri)) {\n      delete buffer.uri; // Delete the data URI to keep the cached glTF JSON small\n      promises.push(Resource.fetchArrayBuffer(bufferUri).then(function (arrayBuffer) {\n        buffer.extras._pipeline.source = new Uint8Array(arrayBuffer);\n      }));\n    }\n  });\n  return Promise.all(promises);\n}\nfunction loadEmbeddedBuffers(gltfJsonLoader, gltf) {\n  const promises = [];\n  ForEach.buffer(gltf, function (buffer, bufferId) {\n    const source = buffer.extras._pipeline.source;\n    if (defined(source) && !defined(buffer.uri)) {\n      const resourceCache = gltfJsonLoader._resourceCache;\n      const bufferLoader = resourceCache.getEmbeddedBufferLoader({\n        parentResource: gltfJsonLoader._gltfResource,\n        bufferId: bufferId,\n        typedArray: source\n      });\n      gltfJsonLoader._bufferLoaders.push(bufferLoader);\n      promises.push(bufferLoader.load());\n    }\n  });\n  return Promise.all(promises);\n}\nasync function processGltfJson(gltfJsonLoader, gltf) {\n  try {\n    addPipelineExtras(gltf);\n    await decodeDataUris(gltf);\n    await upgradeVersion(gltfJsonLoader, gltf);\n    addDefaults(gltf);\n    await loadEmbeddedBuffers(gltfJsonLoader, gltf);\n    removePipelineExtras(gltf);\n    const version = gltf.asset.version;\n    if (version !== \"1.0\" && version !== \"2.0\") {\n      throw new RuntimeError(`Unsupported glTF version: ${version}`);\n    }\n    const extensionsRequired = gltf.extensionsRequired;\n    if (defined(extensionsRequired)) {\n      ModelUtility.checkSupportedExtensions(extensionsRequired);\n    }\n    gltfJsonLoader._gltf = gltf;\n    gltfJsonLoader._state = ResourceLoaderState.READY;\n    return gltfJsonLoader;\n  } catch (error) {\n    if (gltfJsonLoader.isDestroyed()) {\n      return;\n    }\n    handleError(gltfJsonLoader, error);\n  }\n}\nasync function processGltfTypedArray(gltfJsonLoader, typedArray) {\n  let gltf;\n  try {\n    if (getMagic(typedArray) === \"glTF\") {\n      gltf = parseGlb(typedArray);\n    } else {\n      gltf = getJsonFromTypedArray(typedArray);\n    }\n  } catch (error) {\n    if (gltfJsonLoader.isDestroyed()) {\n      return;\n    }\n    handleError(gltfJsonLoader, error);\n  }\n  return processGltfJson(gltfJsonLoader, gltf);\n}\n\n/**\n * Unloads the resource.\n * @private\n */\nGltfJsonLoader.prototype.unload = function () {\n  const bufferLoaders = this._bufferLoaders;\n  const bufferLoadersLength = bufferLoaders.length;\n  for (let i = 0; i < bufferLoadersLength; ++i) {\n    bufferLoaders[i] = !bufferLoaders[i].isDestroyed() && this._resourceCache.unload(bufferLoaders[i]);\n  }\n  this._bufferLoaders.length = 0;\n  this._gltf = undefined;\n};\n\n/**\n * Exposed for testing\n *\n * @private\n */\nGltfJsonLoader.prototype._fetchGltf = function () {\n  return this._gltfResource.fetchArrayBuffer();\n};\nexport default GltfJsonLoader;","map":{"version":3,"names":["Check","defaultValue","defined","getJsonFromTypedArray","getMagic","isDataUri","Resource","RuntimeError","addDefaults","addPipelineExtras","ForEach","parseGlb","removePipelineExtras","updateVersion","usesExtension","ResourceLoader","ResourceLoaderState","ModelUtility","GltfJsonLoader","options","EMPTY_OBJECT","resourceCache","gltfResource","baseResource","typedArray","gltfJson","cacheKey","typeOf","func","object","_resourceCache","_gltfResource","_baseResource","_typedArray","_gltfJson","_cacheKey","_gltf","undefined","_bufferLoaders","_state","UNLOADED","_promise","Object","create","prototype","constructor","defineProperties","get","gltf","load","LOADING","processGltfJson","processGltfTypedArray","loadFromUri","gltfJsonLoader","arrayBuffer","_fetchGltf","isDestroyed","Uint8Array","error","handleError","unload","FAILED","errorMessage","url","getError","upgradeVersion","asset","version","Promise","resolve","promises","buffer","extras","_pipeline","source","uri","resource","getDerivedResource","bufferLoader","getExternalBufferLoader","push","then","all","decodeDataUris","bufferUri","fetchArrayBuffer","loadEmbeddedBuffers","bufferId","getEmbeddedBufferLoader","parentResource","extensionsRequired","checkSupportedExtensions","READY","bufferLoaders","bufferLoadersLength","length","i"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/engine/Source/Scene/GltfJsonLoader.js"],"sourcesContent":["import Check from \"../Core/Check.js\";\nimport defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport getJsonFromTypedArray from \"../Core/getJsonFromTypedArray.js\";\nimport getMagic from \"../Core/getMagic.js\";\nimport isDataUri from \"../Core/isDataUri.js\";\nimport Resource from \"../Core/Resource.js\";\nimport RuntimeError from \"../Core/RuntimeError.js\";\nimport addDefaults from \"./GltfPipeline/addDefaults.js\";\nimport addPipelineExtras from \"./GltfPipeline/addPipelineExtras.js\";\nimport ForEach from \"./GltfPipeline/ForEach.js\";\nimport parseGlb from \"./GltfPipeline/parseGlb.js\";\nimport removePipelineExtras from \"./GltfPipeline/removePipelineExtras.js\";\nimport updateVersion from \"./GltfPipeline/updateVersion.js\";\nimport usesExtension from \"./GltfPipeline/usesExtension.js\";\nimport ResourceLoader from \"./ResourceLoader.js\";\nimport ResourceLoaderState from \"./ResourceLoaderState.js\";\nimport ModelUtility from \"./Model/ModelUtility.js\";\n\n/**\n * Loads a glTF JSON from a glTF or glb.\n * <p>\n * Implements the {@link ResourceLoader} interface.\n * </p>\n *\n * @alias GltfJsonLoader\n * @constructor\n * @augments ResourceLoader\n *\n * @param {object} options Object with the following properties:\n * @param {ResourceCache} options.resourceCache The {@link ResourceCache} (to avoid circular dependencies).\n * @param {Resource} options.gltfResource The {@link Resource} containing the glTF.\n * @param {Resource} options.baseResource The {@link Resource} that paths in the glTF JSON are relative to.\n * @param {Uint8Array} [options.typedArray] The typed array containing the glTF contents.\n * @param {object} [options.gltfJson] The parsed glTF JSON contents.\n * @param {string} [options.cacheKey] The cache key of the resource.\n *\n * @private\n */\nfunction GltfJsonLoader(options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n  const resourceCache = options.resourceCache;\n  const gltfResource = options.gltfResource;\n  const baseResource = options.baseResource;\n  const typedArray = options.typedArray;\n  const gltfJson = options.gltfJson;\n  const cacheKey = options.cacheKey;\n\n  //>>includeStart('debug', pragmas.debug);\n  Check.typeOf.func(\"options.resourceCache\", resourceCache);\n  Check.typeOf.object(\"options.gltfResource\", gltfResource);\n  Check.typeOf.object(\"options.baseResource\", baseResource);\n  //>>includeEnd('debug');\n\n  this._resourceCache = resourceCache;\n  this._gltfResource = gltfResource;\n  this._baseResource = baseResource;\n  this._typedArray = typedArray;\n  this._gltfJson = gltfJson;\n  this._cacheKey = cacheKey;\n  this._gltf = undefined;\n  this._bufferLoaders = [];\n  this._state = ResourceLoaderState.UNLOADED;\n  this._promise = undefined;\n}\n\nif (defined(Object.create)) {\n  GltfJsonLoader.prototype = Object.create(ResourceLoader.prototype);\n  GltfJsonLoader.prototype.constructor = GltfJsonLoader;\n}\n\nObject.defineProperties(GltfJsonLoader.prototype, {\n  /**\n   * The cache key of the resource.\n   *\n   * @memberof GltfJsonLoader.prototype\n   *\n   * @type {string}\n   * @readonly\n   * @private\n   */\n  cacheKey: {\n    get: function () {\n      return this._cacheKey;\n    },\n  },\n  /**\n   * The glTF JSON.\n   *\n   * @memberof GltfJsonLoader.prototype\n   *\n   * @type {object}\n   * @readonly\n   * @private\n   */\n  gltf: {\n    get: function () {\n      return this._gltf;\n    },\n  },\n});\n\n/**\n * Loads the resource.\n * @returns {Promise<GltfJsonLoader>} A promise which resolves to the loader when the resource loading is completed.\n * @private\n */\nGltfJsonLoader.prototype.load = async function () {\n  if (defined(this._promise)) {\n    return this._promise;\n  }\n\n  this._state = ResourceLoaderState.LOADING;\n\n  if (defined(this._gltfJson)) {\n    this._promise = processGltfJson(this, this._gltfJson);\n    return this._promise;\n  }\n\n  if (defined(this._typedArray)) {\n    this._promise = processGltfTypedArray(this, this._typedArray);\n    return this._promise;\n  }\n\n  this._promise = loadFromUri(this);\n  return this._promise;\n};\n\nasync function loadFromUri(gltfJsonLoader) {\n  let typedArray;\n  try {\n    const arrayBuffer = await gltfJsonLoader._fetchGltf();\n    if (gltfJsonLoader.isDestroyed()) {\n      return;\n    }\n\n    typedArray = new Uint8Array(arrayBuffer);\n  } catch (error) {\n    if (gltfJsonLoader.isDestroyed()) {\n      return;\n    }\n\n    handleError(gltfJsonLoader, error);\n  }\n\n  return processGltfTypedArray(gltfJsonLoader, typedArray);\n}\n\nfunction handleError(gltfJsonLoader, error) {\n  gltfJsonLoader.unload();\n  gltfJsonLoader._state = ResourceLoaderState.FAILED;\n  const errorMessage = `Failed to load glTF: ${gltfJsonLoader._gltfResource.url}`;\n  throw gltfJsonLoader.getError(errorMessage, error);\n}\n\nasync function upgradeVersion(gltfJsonLoader, gltf) {\n  if (\n    defined(gltf.asset) &&\n    gltf.asset.version === \"2.0\" &&\n    !usesExtension(gltf, \"KHR_techniques_webgl\") &&\n    !usesExtension(gltf, \"KHR_materials_common\")\n  ) {\n    return Promise.resolve();\n  }\n\n  // Load all buffers into memory. updateVersion will read and in some cases modify\n  // the buffer data, which it accesses from buffer.extras._pipeline.source\n  const promises = [];\n  ForEach.buffer(gltf, function (buffer) {\n    if (\n      !defined(buffer.extras._pipeline.source) && // Ignore uri if this buffer uses the glTF 1.0 KHR_binary_glTF extension\n      defined(buffer.uri)\n    ) {\n      const resource = gltfJsonLoader._baseResource.getDerivedResource({\n        url: buffer.uri,\n      });\n      const resourceCache = gltfJsonLoader._resourceCache;\n      const bufferLoader = resourceCache.getExternalBufferLoader({\n        resource: resource,\n      });\n      gltfJsonLoader._bufferLoaders.push(bufferLoader);\n\n      promises.push(\n        bufferLoader.load().then(function () {\n          if (bufferLoader.isDestroyed()) {\n            return;\n          }\n\n          buffer.extras._pipeline.source = bufferLoader.typedArray;\n        }),\n      );\n    }\n  });\n\n  await Promise.all(promises);\n  updateVersion(gltf);\n}\n\nfunction decodeDataUris(gltf) {\n  const promises = [];\n  ForEach.buffer(gltf, function (buffer) {\n    const bufferUri = buffer.uri;\n    if (\n      !defined(buffer.extras._pipeline.source) && // Ignore uri if this buffer uses the glTF 1.0 KHR_binary_glTF extension\n      defined(bufferUri) &&\n      isDataUri(bufferUri)\n    ) {\n      delete buffer.uri; // Delete the data URI to keep the cached glTF JSON small\n      promises.push(\n        Resource.fetchArrayBuffer(bufferUri).then(function (arrayBuffer) {\n          buffer.extras._pipeline.source = new Uint8Array(arrayBuffer);\n        }),\n      );\n    }\n  });\n  return Promise.all(promises);\n}\n\nfunction loadEmbeddedBuffers(gltfJsonLoader, gltf) {\n  const promises = [];\n  ForEach.buffer(gltf, function (buffer, bufferId) {\n    const source = buffer.extras._pipeline.source;\n    if (defined(source) && !defined(buffer.uri)) {\n      const resourceCache = gltfJsonLoader._resourceCache;\n      const bufferLoader = resourceCache.getEmbeddedBufferLoader({\n        parentResource: gltfJsonLoader._gltfResource,\n        bufferId: bufferId,\n        typedArray: source,\n      });\n      gltfJsonLoader._bufferLoaders.push(bufferLoader);\n      promises.push(bufferLoader.load());\n    }\n  });\n  return Promise.all(promises);\n}\n\nasync function processGltfJson(gltfJsonLoader, gltf) {\n  try {\n    addPipelineExtras(gltf);\n\n    await decodeDataUris(gltf);\n    await upgradeVersion(gltfJsonLoader, gltf);\n    addDefaults(gltf);\n    await loadEmbeddedBuffers(gltfJsonLoader, gltf);\n    removePipelineExtras(gltf);\n\n    const version = gltf.asset.version;\n    if (version !== \"1.0\" && version !== \"2.0\") {\n      throw new RuntimeError(`Unsupported glTF version: ${version}`);\n    }\n\n    const extensionsRequired = gltf.extensionsRequired;\n    if (defined(extensionsRequired)) {\n      ModelUtility.checkSupportedExtensions(extensionsRequired);\n    }\n\n    gltfJsonLoader._gltf = gltf;\n    gltfJsonLoader._state = ResourceLoaderState.READY;\n    return gltfJsonLoader;\n  } catch (error) {\n    if (gltfJsonLoader.isDestroyed()) {\n      return;\n    }\n\n    handleError(gltfJsonLoader, error);\n  }\n}\n\nasync function processGltfTypedArray(gltfJsonLoader, typedArray) {\n  let gltf;\n  try {\n    if (getMagic(typedArray) === \"glTF\") {\n      gltf = parseGlb(typedArray);\n    } else {\n      gltf = getJsonFromTypedArray(typedArray);\n    }\n  } catch (error) {\n    if (gltfJsonLoader.isDestroyed()) {\n      return;\n    }\n\n    handleError(gltfJsonLoader, error);\n  }\n\n  return processGltfJson(gltfJsonLoader, gltf);\n}\n\n/**\n * Unloads the resource.\n * @private\n */\nGltfJsonLoader.prototype.unload = function () {\n  const bufferLoaders = this._bufferLoaders;\n  const bufferLoadersLength = bufferLoaders.length;\n  for (let i = 0; i < bufferLoadersLength; ++i) {\n    bufferLoaders[i] =\n      !bufferLoaders[i].isDestroyed() &&\n      this._resourceCache.unload(bufferLoaders[i]);\n  }\n  this._bufferLoaders.length = 0;\n\n  this._gltf = undefined;\n};\n\n/**\n * Exposed for testing\n *\n * @private\n */\nGltfJsonLoader.prototype._fetchGltf = function () {\n  return this._gltfResource.fetchArrayBuffer();\n};\n\nexport default GltfJsonLoader;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}