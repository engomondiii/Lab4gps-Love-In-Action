{"ast":null,"code":"import Check from \"../../../../Core/Check.js\";\n\n/**\n * @typedef {object} PpeTexture.ConstructorOptions\n *\n * Initialization options for the PpeTexture constructor\n *\n * @property {PpeMetadata} traits The traits that indicate which data is stored in this texture\n * @property {number} index The index of the texture inside the glTF textures array\n * @property {number|undefined} [texCoord] The optional set index for the TEXCOORD attribute\n * @property {number|undefined} [noData] The value to represent missing data\n * @property {number|undefined} [offset] An offset to apply to property values.\n * @property {number|undefined} [scale] A scale to apply to property values.\n */\n\n/**\n * PPE (Per-Point Error) texture in `NGA_gpm_local`.\n *\n * This reflects the `ppeTexture` definition of the\n * {@link https://nsgreg.nga.mil/csmwg.jsp|NGA_gpm_local} glTF extension.\n *\n * This is a valid glTF `TextureInfo` object (with a required `index`\n * and an optional `texCoord)`, with additional properties that\n * describe the structure of the metdata that is stored in the texture.\n *\n * @constructor\n * @param {PpeTexture.ConstructorOptions} options An object describing initialization options\n *\n * @private\n */\nfunction PpeTexture(options) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.typeOf.object(\"options.traits\", options.traits);\n  Check.typeOf.number.greaterThanOrEquals(\"options.index\", options.index, 0);\n  //>>includeEnd('debug');\n\n  this._traits = options.traits;\n  this._noData = options.noData;\n  this._offset = options.offset;\n  this._scale = options.scale;\n  this._index = options.index;\n  this._texCoord = options.texCoord;\n}\nObject.defineProperties(PpeTexture.prototype, {\n  /**\n   * The data contained here applies to this node and corresponding\n   * texture.\n   *\n   * @memberof PpeTexture.prototype\n   * @type {PpeMetadata}\n   * @readonly\n   */\n  traits: {\n    get: function () {\n      return this._traits;\n    }\n  },\n  /**\n   * A value to represent missing data - also known as a sentinel value -\n   * wherever it appears.\n   *\n   * @memberof PpeTexture.prototype\n   * @type {number|undefined}\n   * @readonly\n   */\n  noData: {\n    get: function () {\n      return this._noData;\n    }\n  },\n  /**\n   * An offset to apply to property values.\n   *\n   * @memberof PpeTexture.prototype\n   * @type {number|undefined}\n   * @readonly\n   */\n  offset: {\n    get: function () {\n      return this._offset;\n    }\n  },\n  /**\n   * An scale to apply to property values.\n   *\n   * @memberof PpeTexture.prototype\n   * @type {number|undefined}\n   * @readonly\n   */\n  scale: {\n    get: function () {\n      return this._scale;\n    }\n  },\n  /**\n   * The index of the texture\n   *\n   * @memberof PpeTexture.prototype\n   * @type {number}\n   * @readonly\n   */\n  index: {\n    get: function () {\n      return this._index;\n    }\n  },\n  /**\n   * The set index of texture's TEXCOORD attribute used for texture coordinate mapping.\n   *\n   * @memberof PpeTexture.prototype\n   * @type {number|undefined}\n   * @readonly\n   */\n  texCoord: {\n    get: function () {\n      return this._texCoord;\n    }\n  }\n});\nexport default PpeTexture;","map":{"version":3,"names":["Check","PpeTexture","options","typeOf","object","traits","number","greaterThanOrEquals","index","_traits","_noData","noData","_offset","offset","_scale","scale","_index","_texCoord","texCoord","Object","defineProperties","prototype","get"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/engine/Source/Scene/Model/Extensions/Gpm/PpeTexture.js"],"sourcesContent":["import Check from \"../../../../Core/Check.js\";\n\n/**\n * @typedef {object} PpeTexture.ConstructorOptions\n *\n * Initialization options for the PpeTexture constructor\n *\n * @property {PpeMetadata} traits The traits that indicate which data is stored in this texture\n * @property {number} index The index of the texture inside the glTF textures array\n * @property {number|undefined} [texCoord] The optional set index for the TEXCOORD attribute\n * @property {number|undefined} [noData] The value to represent missing data\n * @property {number|undefined} [offset] An offset to apply to property values.\n * @property {number|undefined} [scale] A scale to apply to property values.\n */\n\n/**\n * PPE (Per-Point Error) texture in `NGA_gpm_local`.\n *\n * This reflects the `ppeTexture` definition of the\n * {@link https://nsgreg.nga.mil/csmwg.jsp|NGA_gpm_local} glTF extension.\n *\n * This is a valid glTF `TextureInfo` object (with a required `index`\n * and an optional `texCoord)`, with additional properties that\n * describe the structure of the metdata that is stored in the texture.\n *\n * @constructor\n * @param {PpeTexture.ConstructorOptions} options An object describing initialization options\n *\n * @private\n */\nfunction PpeTexture(options) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.typeOf.object(\"options.traits\", options.traits);\n  Check.typeOf.number.greaterThanOrEquals(\"options.index\", options.index, 0);\n  //>>includeEnd('debug');\n\n  this._traits = options.traits;\n  this._noData = options.noData;\n  this._offset = options.offset;\n  this._scale = options.scale;\n  this._index = options.index;\n  this._texCoord = options.texCoord;\n}\n\nObject.defineProperties(PpeTexture.prototype, {\n  /**\n   * The data contained here applies to this node and corresponding\n   * texture.\n   *\n   * @memberof PpeTexture.prototype\n   * @type {PpeMetadata}\n   * @readonly\n   */\n  traits: {\n    get: function () {\n      return this._traits;\n    },\n  },\n\n  /**\n   * A value to represent missing data - also known as a sentinel value -\n   * wherever it appears.\n   *\n   * @memberof PpeTexture.prototype\n   * @type {number|undefined}\n   * @readonly\n   */\n  noData: {\n    get: function () {\n      return this._noData;\n    },\n  },\n\n  /**\n   * An offset to apply to property values.\n   *\n   * @memberof PpeTexture.prototype\n   * @type {number|undefined}\n   * @readonly\n   */\n  offset: {\n    get: function () {\n      return this._offset;\n    },\n  },\n\n  /**\n   * An scale to apply to property values.\n   *\n   * @memberof PpeTexture.prototype\n   * @type {number|undefined}\n   * @readonly\n   */\n  scale: {\n    get: function () {\n      return this._scale;\n    },\n  },\n\n  /**\n   * The index of the texture\n   *\n   * @memberof PpeTexture.prototype\n   * @type {number}\n   * @readonly\n   */\n  index: {\n    get: function () {\n      return this._index;\n    },\n  },\n\n  /**\n   * The set index of texture's TEXCOORD attribute used for texture coordinate mapping.\n   *\n   * @memberof PpeTexture.prototype\n   * @type {number|undefined}\n   * @readonly\n   */\n  texCoord: {\n    get: function () {\n      return this._texCoord;\n    },\n  },\n});\n\nexport default PpeTexture;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,2BAA2B;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,UAAUA,CAACC,OAAO,EAAE;EAC3B;EACAF,KAAK,CAACG,MAAM,CAACC,MAAM,CAAC,gBAAgB,EAAEF,OAAO,CAACG,MAAM,CAAC;EACrDL,KAAK,CAACG,MAAM,CAACG,MAAM,CAACC,mBAAmB,CAAC,eAAe,EAAEL,OAAO,CAACM,KAAK,EAAE,CAAC,CAAC;EAC1E;;EAEA,IAAI,CAACC,OAAO,GAAGP,OAAO,CAACG,MAAM;EAC7B,IAAI,CAACK,OAAO,GAAGR,OAAO,CAACS,MAAM;EAC7B,IAAI,CAACC,OAAO,GAAGV,OAAO,CAACW,MAAM;EAC7B,IAAI,CAACC,MAAM,GAAGZ,OAAO,CAACa,KAAK;EAC3B,IAAI,CAACC,MAAM,GAAGd,OAAO,CAACM,KAAK;EAC3B,IAAI,CAACS,SAAS,GAAGf,OAAO,CAACgB,QAAQ;AACnC;AAEAC,MAAM,CAACC,gBAAgB,CAACnB,UAAU,CAACoB,SAAS,EAAE;EAC5C;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACEhB,MAAM,EAAE;IACNiB,GAAG,EAAE,SAAAA,CAAA,EAAY;MACf,OAAO,IAAI,CAACb,OAAO;IACrB;EACF,CAAC;EAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACEE,MAAM,EAAE;IACNW,GAAG,EAAE,SAAAA,CAAA,EAAY;MACf,OAAO,IAAI,CAACZ,OAAO;IACrB;EACF,CAAC;EAED;AACF;AACA;AACA;AACA;AACA;AACA;EACEG,MAAM,EAAE;IACNS,GAAG,EAAE,SAAAA,CAAA,EAAY;MACf,OAAO,IAAI,CAACV,OAAO;IACrB;EACF,CAAC;EAED;AACF;AACA;AACA;AACA;AACA;AACA;EACEG,KAAK,EAAE;IACLO,GAAG,EAAE,SAAAA,CAAA,EAAY;MACf,OAAO,IAAI,CAACR,MAAM;IACpB;EACF,CAAC;EAED;AACF;AACA;AACA;AACA;AACA;AACA;EACEN,KAAK,EAAE;IACLc,GAAG,EAAE,SAAAA,CAAA,EAAY;MACf,OAAO,IAAI,CAACN,MAAM;IACpB;EACF,CAAC;EAED;AACF;AACA;AACA;AACA;AACA;AACA;EACEE,QAAQ,EAAE;IACRI,GAAG,EAAE,SAAAA,CAAA,EAAY;MACf,OAAO,IAAI,CAACL,SAAS;IACvB;EACF;AACF,CAAC,CAAC;AAEF,eAAehB,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}