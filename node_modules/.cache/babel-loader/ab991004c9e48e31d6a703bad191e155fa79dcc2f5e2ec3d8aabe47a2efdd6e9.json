{"ast":null,"code":"import Cartesian2 from \"../Core/Cartesian2.js\";\nimport Cartesian3 from \"../Core/Cartesian3.js\";\nimport Color from \"../Core/Color.js\";\nimport defined from \"../Core/defined.js\";\nimport destroyObject from \"../Core/destroyObject.js\";\nimport DistanceDisplayCondition from \"../Core/DistanceDisplayCondition.js\";\nimport Ellipsoid from \"../Core/Ellipsoid.js\";\nimport NearFarScalar from \"../Core/NearFarScalar.js\";\nimport Rectangle from \"../Core/Rectangle.js\";\nimport TaskProcessor from \"../Core/TaskProcessor.js\";\nimport BillboardCollection from \"./BillboardCollection.js\";\nimport Cesium3DTilePointFeature from \"./Cesium3DTilePointFeature.js\";\nimport HorizontalOrigin from \"./HorizontalOrigin.js\";\nimport LabelCollection from \"./LabelCollection.js\";\nimport LabelStyle from \"./LabelStyle.js\";\nimport PolylineCollection from \"./PolylineCollection.js\";\nimport VerticalOrigin from \"./VerticalOrigin.js\";\n\n/**\n * Creates a batch of points or billboards and labels.\n *\n * @alias Vector3DTilePoints\n * @constructor\n *\n * @param {object} options An object with following properties:\n * @param {Uint16Array} options.positions The positions of the polygons.\n * @param {number} options.minimumHeight The minimum height of the terrain covered by the tile.\n * @param {number} options.maximumHeight The maximum height of the terrain covered by the tile.\n * @param {Rectangle} options.rectangle The rectangle containing the tile.\n * @param {Cesium3DTileBatchTable} options.batchTable The batch table for the tile containing the batched polygons.\n * @param {Uint16Array} options.batchIds The batch ids for each polygon.\n *\n * @private\n */\nfunction Vector3DTilePoints(options) {\n  // released after the first update\n  this._positions = options.positions;\n  this._batchTable = options.batchTable;\n  this._batchIds = options.batchIds;\n  this._rectangle = options.rectangle;\n  this._minHeight = options.minimumHeight;\n  this._maxHeight = options.maximumHeight;\n  this._billboardCollection = new BillboardCollection({\n    batchTable: options.batchTable\n  });\n  this._labelCollection = new LabelCollection({\n    batchTable: options.batchTable\n  });\n  this._polylineCollection = new PolylineCollection();\n  this._polylineCollection._useHighlightColor = true;\n  this._packedBuffer = undefined;\n  this._ready = false;\n  this._promise = undefined;\n  this._error = undefined;\n}\nObject.defineProperties(Vector3DTilePoints.prototype, {\n  /**\n   * Returns true if the points are ready to render\n   *\n   * @memberof Vector3DTilePoints.prototype\n   *\n   * @type {boolean}\n   * @readonly\n   * @private\n   */\n  ready: {\n    get: function () {\n      return this._ready;\n    }\n  },\n  /**\n   * Gets the number of points.\n   *\n   * @memberof Vector3DTilePoints.prototype\n   *\n   * @type {number}\n   * @readonly\n   * @private\n   */\n  pointsLength: {\n    get: function () {\n      return this._billboardCollection.length;\n    }\n  },\n  /**\n   * Gets the texture atlas memory in bytes.\n   *\n   * @memberof Vector3DTilePoints.prototype\n   *\n   * @type {number}\n   * @readonly\n   * @private\n   */\n  texturesByteLength: {\n    get: function () {\n      const billboardSize = this._billboardCollection.textureAtlas.texture.sizeInBytes;\n      const labelSize = this._labelCollection._textureAtlas.texture.sizeInBytes;\n      return billboardSize + labelSize;\n    }\n  }\n});\nfunction packBuffer(points, ellipsoid) {\n  const rectangle = points._rectangle;\n  const minimumHeight = points._minHeight;\n  const maximumHeight = points._maxHeight;\n  const packedLength = 2 + Rectangle.packedLength + Ellipsoid.packedLength;\n  const packedBuffer = new Float64Array(packedLength);\n  let offset = 0;\n  packedBuffer[offset++] = minimumHeight;\n  packedBuffer[offset++] = maximumHeight;\n  Rectangle.pack(rectangle, packedBuffer, offset);\n  offset += Rectangle.packedLength;\n  Ellipsoid.pack(ellipsoid, packedBuffer, offset);\n  return packedBuffer;\n}\nconst createVerticesTaskProcessor = new TaskProcessor(\"createVectorTilePoints\", 5);\nconst scratchPosition = new Cartesian3();\nfunction createPoints(points, ellipsoid) {\n  let positions = points._positions;\n  let packedBuffer = points._packedBuffer;\n  if (!defined(packedBuffer)) {\n    // Copy because they may be the views on the same buffer.\n    positions = points._positions = positions.slice();\n    points._batchIds = points._batchIds.slice();\n    packedBuffer = points._packedBuffer = packBuffer(points, ellipsoid);\n  }\n  const transferrableObjects = [positions.buffer, packedBuffer.buffer];\n  const parameters = {\n    positions: positions.buffer,\n    packedBuffer: packedBuffer.buffer\n  };\n  const verticesPromise = createVerticesTaskProcessor.scheduleTask(parameters, transferrableObjects);\n  if (!defined(verticesPromise)) {\n    // Postponed\n    return;\n  }\n  return verticesPromise.then(result => {\n    if (points.isDestroyed()) {\n      return;\n    }\n    points._positions = new Float64Array(result.positions);\n    const billboardCollection = points._billboardCollection;\n    const labelCollection = points._labelCollection;\n    const polylineCollection = points._polylineCollection;\n    positions = points._positions;\n    const batchIds = points._batchIds;\n    const numberOfPoints = positions.length / 3;\n    for (let i = 0; i < numberOfPoints; ++i) {\n      const id = batchIds[i];\n      const position = Cartesian3.unpack(positions, i * 3, scratchPosition);\n      const b = billboardCollection.add();\n      b.position = position;\n      b._batchIndex = id;\n      const l = labelCollection.add();\n      l.text = \" \";\n      l.position = position;\n      l._batchIndex = id;\n      const p = polylineCollection.add();\n      p.positions = [Cartesian3.clone(position), Cartesian3.clone(position)];\n    }\n    points._positions = undefined;\n    points._packedBuffer = undefined;\n    points._ready = true;\n  }).catch(error => {\n    if (points.isDestroyed()) {\n      return;\n    }\n\n    // Throw the error next frame\n    points._error = error;\n  });\n}\n\n/**\n * Creates features for each point and places it at the batch id index of features.\n *\n * @param {Vector3DTileContent} content The vector tile content.\n * @param {Cesium3DTileFeature[]} features An array of features where the point features will be placed.\n */\nVector3DTilePoints.prototype.createFeatures = function (content, features) {\n  const billboardCollection = this._billboardCollection;\n  const labelCollection = this._labelCollection;\n  const polylineCollection = this._polylineCollection;\n  const batchIds = this._batchIds;\n  const length = batchIds.length;\n  for (let i = 0; i < length; ++i) {\n    const batchId = batchIds[i];\n    const billboard = billboardCollection.get(i);\n    const label = labelCollection.get(i);\n    const polyline = polylineCollection.get(i);\n    features[batchId] = new Cesium3DTilePointFeature(content, batchId, billboard, label, polyline);\n  }\n};\n\n/**\n * Colors the entire tile when enabled is true. The resulting color will be (batch table color * color).\n *\n * @param {boolean} enabled Whether to enable debug coloring.\n * @param {Color} color The debug color.\n */\nVector3DTilePoints.prototype.applyDebugSettings = function (enabled, color) {\n  if (enabled) {\n    Color.clone(color, this._billboardCollection._highlightColor);\n    Color.clone(color, this._labelCollection._highlightColor);\n    Color.clone(color, this._polylineCollection._highlightColor);\n  } else {\n    Color.clone(Color.WHITE, this._billboardCollection._highlightColor);\n    Color.clone(Color.WHITE, this._labelCollection._highlightColor);\n    Color.clone(Color.WHITE, this._polylineCollection._highlightColor);\n  }\n};\nfunction clearStyle(polygons, features) {\n  const batchIds = polygons._batchIds;\n  const length = batchIds.length;\n  for (let i = 0; i < length; ++i) {\n    const batchId = batchIds[i];\n    const feature = features[batchId];\n    feature.show = true;\n    feature.pointSize = Cesium3DTilePointFeature.defaultPointSize;\n    feature.color = Cesium3DTilePointFeature.defaultColor;\n    feature.pointOutlineColor = Cesium3DTilePointFeature.defaultPointOutlineColor;\n    feature.pointOutlineWidth = Cesium3DTilePointFeature.defaultPointOutlineWidth;\n    feature.labelColor = Color.WHITE;\n    feature.labelOutlineColor = Color.WHITE;\n    feature.labelOutlineWidth = 1.0;\n    feature.font = \"30px sans-serif\";\n    feature.labelStyle = LabelStyle.FILL;\n    feature.labelText = undefined;\n    feature.backgroundColor = new Color(0.165, 0.165, 0.165, 0.8);\n    feature.backgroundPadding = new Cartesian2(7, 5);\n    feature.backgroundEnabled = false;\n    feature.scaleByDistance = undefined;\n    feature.translucencyByDistance = undefined;\n    feature.distanceDisplayCondition = undefined;\n    feature.heightOffset = 0.0;\n    feature.anchorLineEnabled = false;\n    feature.anchorLineColor = Color.WHITE;\n    feature.image = undefined;\n    feature.disableDepthTestDistance = 0.0;\n    feature.horizontalOrigin = HorizontalOrigin.CENTER;\n    feature.verticalOrigin = VerticalOrigin.CENTER;\n    feature.labelHorizontalOrigin = HorizontalOrigin.RIGHT;\n    feature.labelVerticalOrigin = VerticalOrigin.BASELINE;\n  }\n}\nconst scratchColor = new Color();\nconst scratchColor2 = new Color();\nconst scratchColor3 = new Color();\nconst scratchColor4 = new Color();\nconst scratchColor5 = new Color();\nconst scratchColor6 = new Color();\nconst scratchScaleByDistance = new NearFarScalar();\nconst scratchTranslucencyByDistance = new NearFarScalar();\nconst scratchDistanceDisplayCondition = new DistanceDisplayCondition();\n\n/**\n * Apply a style to the content.\n *\n * @param {Cesium3DTileStyle} style The style.\n * @param {Cesium3DTileFeature[]} features The array of features.\n */\nVector3DTilePoints.prototype.applyStyle = function (style, features) {\n  if (!defined(style)) {\n    clearStyle(this, features);\n    return;\n  }\n  const batchIds = this._batchIds;\n  const length = batchIds.length;\n  for (let i = 0; i < length; ++i) {\n    const batchId = batchIds[i];\n    const feature = features[batchId];\n    if (defined(style.show)) {\n      feature.show = style.show.evaluate(feature);\n    }\n    if (defined(style.pointSize)) {\n      feature.pointSize = style.pointSize.evaluate(feature);\n    }\n    if (defined(style.color)) {\n      feature.color = style.color.evaluateColor(feature, scratchColor);\n    }\n    if (defined(style.pointOutlineColor)) {\n      feature.pointOutlineColor = style.pointOutlineColor.evaluateColor(feature, scratchColor2);\n    }\n    if (defined(style.pointOutlineWidth)) {\n      feature.pointOutlineWidth = style.pointOutlineWidth.evaluate(feature);\n    }\n    if (defined(style.labelColor)) {\n      feature.labelColor = style.labelColor.evaluateColor(feature, scratchColor3);\n    }\n    if (defined(style.labelOutlineColor)) {\n      feature.labelOutlineColor = style.labelOutlineColor.evaluateColor(feature, scratchColor4);\n    }\n    if (defined(style.labelOutlineWidth)) {\n      feature.labelOutlineWidth = style.labelOutlineWidth.evaluate(feature);\n    }\n    if (defined(style.font)) {\n      feature.font = style.font.evaluate(feature);\n    }\n    if (defined(style.labelStyle)) {\n      feature.labelStyle = style.labelStyle.evaluate(feature);\n    }\n    if (defined(style.labelText)) {\n      feature.labelText = style.labelText.evaluate(feature);\n    } else {\n      feature.labelText = undefined;\n    }\n    if (defined(style.backgroundColor)) {\n      feature.backgroundColor = style.backgroundColor.evaluateColor(feature, scratchColor5);\n    }\n    if (defined(style.backgroundPadding)) {\n      feature.backgroundPadding = style.backgroundPadding.evaluate(feature);\n    }\n    if (defined(style.backgroundEnabled)) {\n      feature.backgroundEnabled = style.backgroundEnabled.evaluate(feature);\n    }\n    if (defined(style.scaleByDistance)) {\n      const scaleByDistanceCart4 = style.scaleByDistance.evaluate(feature);\n      if (defined(scaleByDistanceCart4)) {\n        scratchScaleByDistance.near = scaleByDistanceCart4.x;\n        scratchScaleByDistance.nearValue = scaleByDistanceCart4.y;\n        scratchScaleByDistance.far = scaleByDistanceCart4.z;\n        scratchScaleByDistance.farValue = scaleByDistanceCart4.w;\n        feature.scaleByDistance = scratchScaleByDistance;\n      } else {\n        feature.scaleByDistance = undefined;\n      }\n    } else {\n      feature.scaleByDistance = undefined;\n    }\n    if (defined(style.translucencyByDistance)) {\n      const translucencyByDistanceCart4 = style.translucencyByDistance.evaluate(feature);\n      if (defined(translucencyByDistanceCart4)) {\n        scratchTranslucencyByDistance.near = translucencyByDistanceCart4.x;\n        scratchTranslucencyByDistance.nearValue = translucencyByDistanceCart4.y;\n        scratchTranslucencyByDistance.far = translucencyByDistanceCart4.z;\n        scratchTranslucencyByDistance.farValue = translucencyByDistanceCart4.w;\n        feature.translucencyByDistance = scratchTranslucencyByDistance;\n      } else {\n        feature.translucencyByDistance = undefined;\n      }\n    } else {\n      feature.translucencyByDistance = undefined;\n    }\n    if (defined(style.distanceDisplayCondition)) {\n      const distanceDisplayConditionCart2 = style.distanceDisplayCondition.evaluate(feature);\n      if (defined(distanceDisplayConditionCart2)) {\n        scratchDistanceDisplayCondition.near = distanceDisplayConditionCart2.x;\n        scratchDistanceDisplayCondition.far = distanceDisplayConditionCart2.y;\n        feature.distanceDisplayCondition = scratchDistanceDisplayCondition;\n      } else {\n        feature.distanceDisplayCondition = undefined;\n      }\n    } else {\n      feature.distanceDisplayCondition = undefined;\n    }\n    if (defined(style.heightOffset)) {\n      feature.heightOffset = style.heightOffset.evaluate(feature);\n    }\n    if (defined(style.anchorLineEnabled)) {\n      feature.anchorLineEnabled = style.anchorLineEnabled.evaluate(feature);\n    }\n    if (defined(style.anchorLineColor)) {\n      feature.anchorLineColor = style.anchorLineColor.evaluateColor(feature, scratchColor6);\n    }\n    if (defined(style.image)) {\n      feature.image = style.image.evaluate(feature);\n    } else {\n      feature.image = undefined;\n    }\n    if (defined(style.disableDepthTestDistance)) {\n      feature.disableDepthTestDistance = style.disableDepthTestDistance.evaluate(feature);\n    }\n    if (defined(style.horizontalOrigin)) {\n      feature.horizontalOrigin = style.horizontalOrigin.evaluate(feature);\n    }\n    if (defined(style.verticalOrigin)) {\n      feature.verticalOrigin = style.verticalOrigin.evaluate(feature);\n    }\n    if (defined(style.labelHorizontalOrigin)) {\n      feature.labelHorizontalOrigin = style.labelHorizontalOrigin.evaluate(feature);\n    }\n    if (defined(style.labelVerticalOrigin)) {\n      feature.labelVerticalOrigin = style.labelVerticalOrigin.evaluate(feature);\n    }\n  }\n};\n\n/**\n * @private\n */\nVector3DTilePoints.prototype.update = function (frameState) {\n  if (!this._ready) {\n    if (!defined(this._promise)) {\n      this._promise = createPoints(this, frameState.mapProjection.ellipsoid);\n    }\n    if (defined(this._error)) {\n      const error = this._error;\n      this._error = undefined;\n      throw error;\n    }\n    return;\n  }\n  this._polylineCollection.update(frameState);\n  this._billboardCollection.update(frameState);\n  this._labelCollection.update(frameState);\n};\n\n/**\n * Returns true if this object was destroyed; otherwise, false.\n * <p>\n * If this object was destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.\n * </p>\n *\n * @returns {boolean} <code>true</code> if this object was destroyed; otherwise, <code>false</code>.\n */\nVector3DTilePoints.prototype.isDestroyed = function () {\n  return false;\n};\n\n/**\n * Destroys the WebGL resources held by this object.  Destroying an object allows for deterministic\n * release of WebGL resources, instead of relying on the garbage collector to destroy this object.\n * <p>\n * Once an object is destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.  Therefore,\n * assign the return value (<code>undefined</code>) to the object as done in the example.\n * </p>\n *\n * @exception {DeveloperError} This object was destroyed, i.e., destroy() was called.\n */\nVector3DTilePoints.prototype.destroy = function () {\n  this._billboardCollection = this._billboardCollection && this._billboardCollection.destroy();\n  this._labelCollection = this._labelCollection && this._labelCollection.destroy();\n  this._polylineCollection = this._polylineCollection && this._polylineCollection.destroy();\n  return destroyObject(this);\n};\nexport default Vector3DTilePoints;","map":{"version":3,"names":["Cartesian2","Cartesian3","Color","defined","destroyObject","DistanceDisplayCondition","Ellipsoid","NearFarScalar","Rectangle","TaskProcessor","BillboardCollection","Cesium3DTilePointFeature","HorizontalOrigin","LabelCollection","LabelStyle","PolylineCollection","VerticalOrigin","Vector3DTilePoints","options","_positions","positions","_batchTable","batchTable","_batchIds","batchIds","_rectangle","rectangle","_minHeight","minimumHeight","_maxHeight","maximumHeight","_billboardCollection","_labelCollection","_polylineCollection","_useHighlightColor","_packedBuffer","undefined","_ready","_promise","_error","Object","defineProperties","prototype","ready","get","pointsLength","length","texturesByteLength","billboardSize","textureAtlas","texture","sizeInBytes","labelSize","_textureAtlas","packBuffer","points","ellipsoid","packedLength","packedBuffer","Float64Array","offset","pack","createVerticesTaskProcessor","scratchPosition","createPoints","slice","transferrableObjects","buffer","parameters","verticesPromise","scheduleTask","then","result","isDestroyed","billboardCollection","labelCollection","polylineCollection","numberOfPoints","i","id","position","unpack","b","add","_batchIndex","l","text","p","clone","catch","error","createFeatures","content","features","batchId","billboard","label","polyline","applyDebugSettings","enabled","color","_highlightColor","WHITE","clearStyle","polygons","feature","show","pointSize","defaultPointSize","defaultColor","pointOutlineColor","defaultPointOutlineColor","pointOutlineWidth","defaultPointOutlineWidth","labelColor","labelOutlineColor","labelOutlineWidth","font","labelStyle","FILL","labelText","backgroundColor","backgroundPadding","backgroundEnabled","scaleByDistance","translucencyByDistance","distanceDisplayCondition","heightOffset","anchorLineEnabled","anchorLineColor","image","disableDepthTestDistance","horizontalOrigin","CENTER","verticalOrigin","labelHorizontalOrigin","RIGHT","labelVerticalOrigin","BASELINE","scratchColor","scratchColor2","scratchColor3","scratchColor4","scratchColor5","scratchColor6","scratchScaleByDistance","scratchTranslucencyByDistance","scratchDistanceDisplayCondition","applyStyle","style","evaluate","evaluateColor","scaleByDistanceCart4","near","x","nearValue","y","far","z","farValue","w","translucencyByDistanceCart4","distanceDisplayConditionCart2","update","frameState","mapProjection","destroy"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/engine/Source/Scene/Vector3DTilePoints.js"],"sourcesContent":["import Cartesian2 from \"../Core/Cartesian2.js\";\nimport Cartesian3 from \"../Core/Cartesian3.js\";\nimport Color from \"../Core/Color.js\";\nimport defined from \"../Core/defined.js\";\nimport destroyObject from \"../Core/destroyObject.js\";\nimport DistanceDisplayCondition from \"../Core/DistanceDisplayCondition.js\";\nimport Ellipsoid from \"../Core/Ellipsoid.js\";\nimport NearFarScalar from \"../Core/NearFarScalar.js\";\nimport Rectangle from \"../Core/Rectangle.js\";\nimport TaskProcessor from \"../Core/TaskProcessor.js\";\nimport BillboardCollection from \"./BillboardCollection.js\";\nimport Cesium3DTilePointFeature from \"./Cesium3DTilePointFeature.js\";\nimport HorizontalOrigin from \"./HorizontalOrigin.js\";\nimport LabelCollection from \"./LabelCollection.js\";\nimport LabelStyle from \"./LabelStyle.js\";\nimport PolylineCollection from \"./PolylineCollection.js\";\nimport VerticalOrigin from \"./VerticalOrigin.js\";\n\n/**\n * Creates a batch of points or billboards and labels.\n *\n * @alias Vector3DTilePoints\n * @constructor\n *\n * @param {object} options An object with following properties:\n * @param {Uint16Array} options.positions The positions of the polygons.\n * @param {number} options.minimumHeight The minimum height of the terrain covered by the tile.\n * @param {number} options.maximumHeight The maximum height of the terrain covered by the tile.\n * @param {Rectangle} options.rectangle The rectangle containing the tile.\n * @param {Cesium3DTileBatchTable} options.batchTable The batch table for the tile containing the batched polygons.\n * @param {Uint16Array} options.batchIds The batch ids for each polygon.\n *\n * @private\n */\nfunction Vector3DTilePoints(options) {\n  // released after the first update\n  this._positions = options.positions;\n\n  this._batchTable = options.batchTable;\n  this._batchIds = options.batchIds;\n\n  this._rectangle = options.rectangle;\n  this._minHeight = options.minimumHeight;\n  this._maxHeight = options.maximumHeight;\n\n  this._billboardCollection = new BillboardCollection({\n    batchTable: options.batchTable,\n  });\n  this._labelCollection = new LabelCollection({\n    batchTable: options.batchTable,\n  });\n  this._polylineCollection = new PolylineCollection();\n  this._polylineCollection._useHighlightColor = true;\n\n  this._packedBuffer = undefined;\n\n  this._ready = false;\n  this._promise = undefined;\n  this._error = undefined;\n}\n\nObject.defineProperties(Vector3DTilePoints.prototype, {\n  /**\n   * Returns true if the points are ready to render\n   *\n   * @memberof Vector3DTilePoints.prototype\n   *\n   * @type {boolean}\n   * @readonly\n   * @private\n   */\n  ready: {\n    get: function () {\n      return this._ready;\n    },\n  },\n\n  /**\n   * Gets the number of points.\n   *\n   * @memberof Vector3DTilePoints.prototype\n   *\n   * @type {number}\n   * @readonly\n   * @private\n   */\n  pointsLength: {\n    get: function () {\n      return this._billboardCollection.length;\n    },\n  },\n\n  /**\n   * Gets the texture atlas memory in bytes.\n   *\n   * @memberof Vector3DTilePoints.prototype\n   *\n   * @type {number}\n   * @readonly\n   * @private\n   */\n  texturesByteLength: {\n    get: function () {\n      const billboardSize =\n        this._billboardCollection.textureAtlas.texture.sizeInBytes;\n      const labelSize = this._labelCollection._textureAtlas.texture.sizeInBytes;\n      return billboardSize + labelSize;\n    },\n  },\n});\n\nfunction packBuffer(points, ellipsoid) {\n  const rectangle = points._rectangle;\n  const minimumHeight = points._minHeight;\n  const maximumHeight = points._maxHeight;\n\n  const packedLength = 2 + Rectangle.packedLength + Ellipsoid.packedLength;\n  const packedBuffer = new Float64Array(packedLength);\n\n  let offset = 0;\n  packedBuffer[offset++] = minimumHeight;\n  packedBuffer[offset++] = maximumHeight;\n\n  Rectangle.pack(rectangle, packedBuffer, offset);\n  offset += Rectangle.packedLength;\n\n  Ellipsoid.pack(ellipsoid, packedBuffer, offset);\n\n  return packedBuffer;\n}\n\nconst createVerticesTaskProcessor = new TaskProcessor(\n  \"createVectorTilePoints\",\n  5,\n);\nconst scratchPosition = new Cartesian3();\n\nfunction createPoints(points, ellipsoid) {\n  let positions = points._positions;\n  let packedBuffer = points._packedBuffer;\n\n  if (!defined(packedBuffer)) {\n    // Copy because they may be the views on the same buffer.\n    positions = points._positions = positions.slice();\n    points._batchIds = points._batchIds.slice();\n\n    packedBuffer = points._packedBuffer = packBuffer(points, ellipsoid);\n  }\n\n  const transferrableObjects = [positions.buffer, packedBuffer.buffer];\n  const parameters = {\n    positions: positions.buffer,\n    packedBuffer: packedBuffer.buffer,\n  };\n\n  const verticesPromise = createVerticesTaskProcessor.scheduleTask(\n    parameters,\n    transferrableObjects,\n  );\n  if (!defined(verticesPromise)) {\n    // Postponed\n    return;\n  }\n\n  return verticesPromise\n    .then((result) => {\n      if (points.isDestroyed()) {\n        return;\n      }\n\n      points._positions = new Float64Array(result.positions);\n      const billboardCollection = points._billboardCollection;\n      const labelCollection = points._labelCollection;\n      const polylineCollection = points._polylineCollection;\n      positions = points._positions;\n      const batchIds = points._batchIds;\n      const numberOfPoints = positions.length / 3;\n\n      for (let i = 0; i < numberOfPoints; ++i) {\n        const id = batchIds[i];\n\n        const position = Cartesian3.unpack(positions, i * 3, scratchPosition);\n\n        const b = billboardCollection.add();\n        b.position = position;\n        b._batchIndex = id;\n\n        const l = labelCollection.add();\n        l.text = \" \";\n        l.position = position;\n        l._batchIndex = id;\n\n        const p = polylineCollection.add();\n        p.positions = [Cartesian3.clone(position), Cartesian3.clone(position)];\n      }\n\n      points._positions = undefined;\n      points._packedBuffer = undefined;\n      points._ready = true;\n    })\n    .catch((error) => {\n      if (points.isDestroyed()) {\n        return;\n      }\n\n      // Throw the error next frame\n      points._error = error;\n    });\n}\n\n/**\n * Creates features for each point and places it at the batch id index of features.\n *\n * @param {Vector3DTileContent} content The vector tile content.\n * @param {Cesium3DTileFeature[]} features An array of features where the point features will be placed.\n */\nVector3DTilePoints.prototype.createFeatures = function (content, features) {\n  const billboardCollection = this._billboardCollection;\n  const labelCollection = this._labelCollection;\n  const polylineCollection = this._polylineCollection;\n\n  const batchIds = this._batchIds;\n  const length = batchIds.length;\n  for (let i = 0; i < length; ++i) {\n    const batchId = batchIds[i];\n\n    const billboard = billboardCollection.get(i);\n    const label = labelCollection.get(i);\n    const polyline = polylineCollection.get(i);\n\n    features[batchId] = new Cesium3DTilePointFeature(\n      content,\n      batchId,\n      billboard,\n      label,\n      polyline,\n    );\n  }\n};\n\n/**\n * Colors the entire tile when enabled is true. The resulting color will be (batch table color * color).\n *\n * @param {boolean} enabled Whether to enable debug coloring.\n * @param {Color} color The debug color.\n */\nVector3DTilePoints.prototype.applyDebugSettings = function (enabled, color) {\n  if (enabled) {\n    Color.clone(color, this._billboardCollection._highlightColor);\n    Color.clone(color, this._labelCollection._highlightColor);\n    Color.clone(color, this._polylineCollection._highlightColor);\n  } else {\n    Color.clone(Color.WHITE, this._billboardCollection._highlightColor);\n    Color.clone(Color.WHITE, this._labelCollection._highlightColor);\n    Color.clone(Color.WHITE, this._polylineCollection._highlightColor);\n  }\n};\n\nfunction clearStyle(polygons, features) {\n  const batchIds = polygons._batchIds;\n  const length = batchIds.length;\n  for (let i = 0; i < length; ++i) {\n    const batchId = batchIds[i];\n    const feature = features[batchId];\n\n    feature.show = true;\n    feature.pointSize = Cesium3DTilePointFeature.defaultPointSize;\n    feature.color = Cesium3DTilePointFeature.defaultColor;\n    feature.pointOutlineColor =\n      Cesium3DTilePointFeature.defaultPointOutlineColor;\n    feature.pointOutlineWidth =\n      Cesium3DTilePointFeature.defaultPointOutlineWidth;\n    feature.labelColor = Color.WHITE;\n    feature.labelOutlineColor = Color.WHITE;\n    feature.labelOutlineWidth = 1.0;\n    feature.font = \"30px sans-serif\";\n    feature.labelStyle = LabelStyle.FILL;\n    feature.labelText = undefined;\n    feature.backgroundColor = new Color(0.165, 0.165, 0.165, 0.8);\n    feature.backgroundPadding = new Cartesian2(7, 5);\n    feature.backgroundEnabled = false;\n    feature.scaleByDistance = undefined;\n    feature.translucencyByDistance = undefined;\n    feature.distanceDisplayCondition = undefined;\n    feature.heightOffset = 0.0;\n    feature.anchorLineEnabled = false;\n    feature.anchorLineColor = Color.WHITE;\n    feature.image = undefined;\n    feature.disableDepthTestDistance = 0.0;\n    feature.horizontalOrigin = HorizontalOrigin.CENTER;\n    feature.verticalOrigin = VerticalOrigin.CENTER;\n    feature.labelHorizontalOrigin = HorizontalOrigin.RIGHT;\n    feature.labelVerticalOrigin = VerticalOrigin.BASELINE;\n  }\n}\n\nconst scratchColor = new Color();\nconst scratchColor2 = new Color();\nconst scratchColor3 = new Color();\nconst scratchColor4 = new Color();\nconst scratchColor5 = new Color();\nconst scratchColor6 = new Color();\nconst scratchScaleByDistance = new NearFarScalar();\nconst scratchTranslucencyByDistance = new NearFarScalar();\nconst scratchDistanceDisplayCondition = new DistanceDisplayCondition();\n\n/**\n * Apply a style to the content.\n *\n * @param {Cesium3DTileStyle} style The style.\n * @param {Cesium3DTileFeature[]} features The array of features.\n */\nVector3DTilePoints.prototype.applyStyle = function (style, features) {\n  if (!defined(style)) {\n    clearStyle(this, features);\n    return;\n  }\n\n  const batchIds = this._batchIds;\n  const length = batchIds.length;\n  for (let i = 0; i < length; ++i) {\n    const batchId = batchIds[i];\n    const feature = features[batchId];\n\n    if (defined(style.show)) {\n      feature.show = style.show.evaluate(feature);\n    }\n\n    if (defined(style.pointSize)) {\n      feature.pointSize = style.pointSize.evaluate(feature);\n    }\n\n    if (defined(style.color)) {\n      feature.color = style.color.evaluateColor(feature, scratchColor);\n    }\n\n    if (defined(style.pointOutlineColor)) {\n      feature.pointOutlineColor = style.pointOutlineColor.evaluateColor(\n        feature,\n        scratchColor2,\n      );\n    }\n\n    if (defined(style.pointOutlineWidth)) {\n      feature.pointOutlineWidth = style.pointOutlineWidth.evaluate(feature);\n    }\n\n    if (defined(style.labelColor)) {\n      feature.labelColor = style.labelColor.evaluateColor(\n        feature,\n        scratchColor3,\n      );\n    }\n\n    if (defined(style.labelOutlineColor)) {\n      feature.labelOutlineColor = style.labelOutlineColor.evaluateColor(\n        feature,\n        scratchColor4,\n      );\n    }\n\n    if (defined(style.labelOutlineWidth)) {\n      feature.labelOutlineWidth = style.labelOutlineWidth.evaluate(feature);\n    }\n\n    if (defined(style.font)) {\n      feature.font = style.font.evaluate(feature);\n    }\n\n    if (defined(style.labelStyle)) {\n      feature.labelStyle = style.labelStyle.evaluate(feature);\n    }\n\n    if (defined(style.labelText)) {\n      feature.labelText = style.labelText.evaluate(feature);\n    } else {\n      feature.labelText = undefined;\n    }\n\n    if (defined(style.backgroundColor)) {\n      feature.backgroundColor = style.backgroundColor.evaluateColor(\n        feature,\n        scratchColor5,\n      );\n    }\n\n    if (defined(style.backgroundPadding)) {\n      feature.backgroundPadding = style.backgroundPadding.evaluate(feature);\n    }\n\n    if (defined(style.backgroundEnabled)) {\n      feature.backgroundEnabled = style.backgroundEnabled.evaluate(feature);\n    }\n\n    if (defined(style.scaleByDistance)) {\n      const scaleByDistanceCart4 = style.scaleByDistance.evaluate(feature);\n      if (defined(scaleByDistanceCart4)) {\n        scratchScaleByDistance.near = scaleByDistanceCart4.x;\n        scratchScaleByDistance.nearValue = scaleByDistanceCart4.y;\n        scratchScaleByDistance.far = scaleByDistanceCart4.z;\n        scratchScaleByDistance.farValue = scaleByDistanceCart4.w;\n        feature.scaleByDistance = scratchScaleByDistance;\n      } else {\n        feature.scaleByDistance = undefined;\n      }\n    } else {\n      feature.scaleByDistance = undefined;\n    }\n\n    if (defined(style.translucencyByDistance)) {\n      const translucencyByDistanceCart4 =\n        style.translucencyByDistance.evaluate(feature);\n      if (defined(translucencyByDistanceCart4)) {\n        scratchTranslucencyByDistance.near = translucencyByDistanceCart4.x;\n        scratchTranslucencyByDistance.nearValue = translucencyByDistanceCart4.y;\n        scratchTranslucencyByDistance.far = translucencyByDistanceCart4.z;\n        scratchTranslucencyByDistance.farValue = translucencyByDistanceCart4.w;\n        feature.translucencyByDistance = scratchTranslucencyByDistance;\n      } else {\n        feature.translucencyByDistance = undefined;\n      }\n    } else {\n      feature.translucencyByDistance = undefined;\n    }\n\n    if (defined(style.distanceDisplayCondition)) {\n      const distanceDisplayConditionCart2 =\n        style.distanceDisplayCondition.evaluate(feature);\n      if (defined(distanceDisplayConditionCart2)) {\n        scratchDistanceDisplayCondition.near = distanceDisplayConditionCart2.x;\n        scratchDistanceDisplayCondition.far = distanceDisplayConditionCart2.y;\n        feature.distanceDisplayCondition = scratchDistanceDisplayCondition;\n      } else {\n        feature.distanceDisplayCondition = undefined;\n      }\n    } else {\n      feature.distanceDisplayCondition = undefined;\n    }\n\n    if (defined(style.heightOffset)) {\n      feature.heightOffset = style.heightOffset.evaluate(feature);\n    }\n\n    if (defined(style.anchorLineEnabled)) {\n      feature.anchorLineEnabled = style.anchorLineEnabled.evaluate(feature);\n    }\n\n    if (defined(style.anchorLineColor)) {\n      feature.anchorLineColor = style.anchorLineColor.evaluateColor(\n        feature,\n        scratchColor6,\n      );\n    }\n\n    if (defined(style.image)) {\n      feature.image = style.image.evaluate(feature);\n    } else {\n      feature.image = undefined;\n    }\n\n    if (defined(style.disableDepthTestDistance)) {\n      feature.disableDepthTestDistance =\n        style.disableDepthTestDistance.evaluate(feature);\n    }\n\n    if (defined(style.horizontalOrigin)) {\n      feature.horizontalOrigin = style.horizontalOrigin.evaluate(feature);\n    }\n\n    if (defined(style.verticalOrigin)) {\n      feature.verticalOrigin = style.verticalOrigin.evaluate(feature);\n    }\n\n    if (defined(style.labelHorizontalOrigin)) {\n      feature.labelHorizontalOrigin =\n        style.labelHorizontalOrigin.evaluate(feature);\n    }\n\n    if (defined(style.labelVerticalOrigin)) {\n      feature.labelVerticalOrigin = style.labelVerticalOrigin.evaluate(feature);\n    }\n  }\n};\n\n/**\n * @private\n */\nVector3DTilePoints.prototype.update = function (frameState) {\n  if (!this._ready) {\n    if (!defined(this._promise)) {\n      this._promise = createPoints(this, frameState.mapProjection.ellipsoid);\n    }\n\n    if (defined(this._error)) {\n      const error = this._error;\n      this._error = undefined;\n      throw error;\n    }\n\n    return;\n  }\n\n  this._polylineCollection.update(frameState);\n  this._billboardCollection.update(frameState);\n  this._labelCollection.update(frameState);\n};\n\n/**\n * Returns true if this object was destroyed; otherwise, false.\n * <p>\n * If this object was destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.\n * </p>\n *\n * @returns {boolean} <code>true</code> if this object was destroyed; otherwise, <code>false</code>.\n */\nVector3DTilePoints.prototype.isDestroyed = function () {\n  return false;\n};\n\n/**\n * Destroys the WebGL resources held by this object.  Destroying an object allows for deterministic\n * release of WebGL resources, instead of relying on the garbage collector to destroy this object.\n * <p>\n * Once an object is destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.  Therefore,\n * assign the return value (<code>undefined</code>) to the object as done in the example.\n * </p>\n *\n * @exception {DeveloperError} This object was destroyed, i.e., destroy() was called.\n */\nVector3DTilePoints.prototype.destroy = function () {\n  this._billboardCollection =\n    this._billboardCollection && this._billboardCollection.destroy();\n  this._labelCollection =\n    this._labelCollection && this._labelCollection.destroy();\n  this._polylineCollection =\n    this._polylineCollection && this._polylineCollection.destroy();\n  return destroyObject(this);\n};\nexport default Vector3DTilePoints;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}