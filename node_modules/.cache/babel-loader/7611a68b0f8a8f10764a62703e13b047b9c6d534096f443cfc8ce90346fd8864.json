{"ast":null,"code":"/**\n * Constants used by {@link Clock#tick} to determine behavior\n * when {@link Clock#startTime} or {@link Clock#stopTime} is reached.\n *\n * @enum {number}\n *\n * @see Clock\n * @see ClockStep\n */\nconst ClockRange = {\n  /**\n   * {@link Clock#tick} will always advances the clock in its current direction.\n   *\n   * @type {number}\n   * @constant\n   */\n  UNBOUNDED: 0,\n  /**\n   * When {@link Clock#startTime} or {@link Clock#stopTime} is reached,\n   * {@link Clock#tick} will not advance {@link Clock#currentTime} any further.\n   *\n   * @type {number}\n   * @constant\n   */\n  CLAMPED: 1,\n  /**\n   * When {@link Clock#stopTime} is reached, {@link Clock#tick} will advance\n   * {@link Clock#currentTime} to the opposite end of the interval.  When\n   * time is moving backwards, {@link Clock#tick} will not advance past\n   * {@link Clock#startTime}\n   *\n   * @type {number}\n   * @constant\n   */\n  LOOP_STOP: 2\n};\nexport default Object.freeze(ClockRange);","map":{"version":3,"names":["ClockRange","UNBOUNDED","CLAMPED","LOOP_STOP","Object","freeze"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/engine/Source/Core/ClockRange.js"],"sourcesContent":["/**\n * Constants used by {@link Clock#tick} to determine behavior\n * when {@link Clock#startTime} or {@link Clock#stopTime} is reached.\n *\n * @enum {number}\n *\n * @see Clock\n * @see ClockStep\n */\nconst ClockRange = {\n  /**\n   * {@link Clock#tick} will always advances the clock in its current direction.\n   *\n   * @type {number}\n   * @constant\n   */\n  UNBOUNDED: 0,\n\n  /**\n   * When {@link Clock#startTime} or {@link Clock#stopTime} is reached,\n   * {@link Clock#tick} will not advance {@link Clock#currentTime} any further.\n   *\n   * @type {number}\n   * @constant\n   */\n  CLAMPED: 1,\n\n  /**\n   * When {@link Clock#stopTime} is reached, {@link Clock#tick} will advance\n   * {@link Clock#currentTime} to the opposite end of the interval.  When\n   * time is moving backwards, {@link Clock#tick} will not advance past\n   * {@link Clock#startTime}\n   *\n   * @type {number}\n   * @constant\n   */\n  LOOP_STOP: 2,\n};\nexport default Object.freeze(ClockRange);\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,UAAU,GAAG;EACjB;AACF;AACA;AACA;AACA;AACA;EACEC,SAAS,EAAE,CAAC;EAEZ;AACF;AACA;AACA;AACA;AACA;AACA;EACEC,OAAO,EAAE,CAAC;EAEV;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEC,SAAS,EAAE;AACb,CAAC;AACD,eAAeC,MAAM,CAACC,MAAM,CAACL,UAAU,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}