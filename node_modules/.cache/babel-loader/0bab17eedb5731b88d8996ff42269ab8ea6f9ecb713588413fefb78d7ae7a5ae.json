{"ast":null,"code":"import Intersect from \"../Core/Intersect.js\";\nimport ManagedArray from \"../Core/ManagedArray.js\";\nimport Cesium3DTileRefine from \"./Cesium3DTileRefine.js\";\nimport Cesium3DTilesetTraversal from \"./Cesium3DTilesetTraversal.js\";\n\n/**\n * Traversal that loads all leaves that intersect the camera frustum.\n * Used to determine ray-tileset intersections during a pickFromRayMostDetailed call.\n *\n * @alias Cesium3DTilesetMostDetailedTraversal\n * @constructor\n *\n * @private\n */\nfunction Cesium3DTilesetMostDetailedTraversal() {}\nconst traversal = {\n  stack: new ManagedArray(),\n  stackMaximumLength: 0\n};\n\n/**\n * Traverses a {@link Cesium3DTileset} to determine which tiles to load and render.\n *\n * @private\n * @param {Cesium3DTileset} tileset\n * @param {FrameState} frameState\n * @returns {boolean} Whether the appropriate tile is ready for picking\n */\nCesium3DTilesetMostDetailedTraversal.selectTiles = function (tileset, frameState) {\n  tileset._selectedTiles.length = 0;\n  tileset._requestedTiles.length = 0;\n  tileset.hasMixedContent = false;\n  let ready = true;\n  const root = tileset.root;\n  root.updateVisibility(frameState);\n  if (!root.isVisible) {\n    return ready;\n  }\n  const {\n    touchTile,\n    visitTile\n  } = Cesium3DTilesetTraversal;\n  const stack = traversal.stack;\n  stack.push(root);\n  while (stack.length > 0) {\n    traversal.stackMaximumLength = Math.max(traversal.stackMaximumLength, stack.length);\n    const tile = stack.pop();\n    const add = tile.refine === Cesium3DTileRefine.ADD;\n    const replace = tile.refine === Cesium3DTileRefine.REPLACE;\n    const traverse = canTraverse(tile);\n    if (traverse) {\n      updateAndPushChildren(tile, stack, frameState);\n    }\n    if (add || replace && !traverse) {\n      loadTile(tileset, tile);\n      touchTile(tile, frameState);\n      selectDesiredTile(tile, frameState);\n      if (tile.hasRenderableContent && !tile.contentAvailable) {\n        ready = false;\n      }\n    }\n    visitTile(tile, frameState);\n  }\n  traversal.stack.trim(traversal.stackMaximumLength);\n  return ready;\n};\nfunction canTraverse(tile) {\n  if (tile.children.length === 0) {\n    return false;\n  }\n  if (tile.hasTilesetContent || tile.hasImplicitContent) {\n    // Traverse external tileset to visit its root tile\n    // Don't traverse if the subtree is expired because it will be destroyed\n    return !tile.contentExpired;\n  }\n  if (tile.hasEmptyContent) {\n    return true;\n  }\n  return true; // Keep traversing until a leaf is hit\n}\nfunction updateAndPushChildren(tile, stack, frameState) {\n  const {\n    children\n  } = tile;\n  for (let i = 0; i < children.length; ++i) {\n    const child = children[i];\n    child.updateVisibility(frameState);\n    if (child.isVisible) {\n      stack.push(child);\n    }\n  }\n}\nfunction loadTile(tileset, tile) {\n  if (tile.hasUnloadedRenderableContent || tile.contentExpired) {\n    tile._priority = 0.0; // Highest priority\n    tileset._requestedTiles.push(tile);\n  }\n}\nfunction selectDesiredTile(tile, frameState) {\n  if (tile.contentAvailable && tile.contentVisibility(frameState) !== Intersect.OUTSIDE) {\n    tile.tileset._selectedTiles.push(tile);\n  }\n}\nexport default Cesium3DTilesetMostDetailedTraversal;","map":{"version":3,"names":["Intersect","ManagedArray","Cesium3DTileRefine","Cesium3DTilesetTraversal","Cesium3DTilesetMostDetailedTraversal","traversal","stack","stackMaximumLength","selectTiles","tileset","frameState","_selectedTiles","length","_requestedTiles","hasMixedContent","ready","root","updateVisibility","isVisible","touchTile","visitTile","push","Math","max","tile","pop","add","refine","ADD","replace","REPLACE","traverse","canTraverse","updateAndPushChildren","loadTile","selectDesiredTile","hasRenderableContent","contentAvailable","trim","children","hasTilesetContent","hasImplicitContent","contentExpired","hasEmptyContent","i","child","hasUnloadedRenderableContent","_priority","contentVisibility","OUTSIDE"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/engine/Source/Scene/Cesium3DTilesetMostDetailedTraversal.js"],"sourcesContent":["import Intersect from \"../Core/Intersect.js\";\nimport ManagedArray from \"../Core/ManagedArray.js\";\nimport Cesium3DTileRefine from \"./Cesium3DTileRefine.js\";\nimport Cesium3DTilesetTraversal from \"./Cesium3DTilesetTraversal.js\";\n\n/**\n * Traversal that loads all leaves that intersect the camera frustum.\n * Used to determine ray-tileset intersections during a pickFromRayMostDetailed call.\n *\n * @alias Cesium3DTilesetMostDetailedTraversal\n * @constructor\n *\n * @private\n */\nfunction Cesium3DTilesetMostDetailedTraversal() {}\n\nconst traversal = {\n  stack: new ManagedArray(),\n  stackMaximumLength: 0,\n};\n\n/**\n * Traverses a {@link Cesium3DTileset} to determine which tiles to load and render.\n *\n * @private\n * @param {Cesium3DTileset} tileset\n * @param {FrameState} frameState\n * @returns {boolean} Whether the appropriate tile is ready for picking\n */\nCesium3DTilesetMostDetailedTraversal.selectTiles = function (\n  tileset,\n  frameState,\n) {\n  tileset._selectedTiles.length = 0;\n  tileset._requestedTiles.length = 0;\n  tileset.hasMixedContent = false;\n\n  let ready = true;\n\n  const root = tileset.root;\n  root.updateVisibility(frameState);\n\n  if (!root.isVisible) {\n    return ready;\n  }\n\n  const { touchTile, visitTile } = Cesium3DTilesetTraversal;\n\n  const stack = traversal.stack;\n  stack.push(root);\n\n  while (stack.length > 0) {\n    traversal.stackMaximumLength = Math.max(\n      traversal.stackMaximumLength,\n      stack.length,\n    );\n\n    const tile = stack.pop();\n    const add = tile.refine === Cesium3DTileRefine.ADD;\n    const replace = tile.refine === Cesium3DTileRefine.REPLACE;\n    const traverse = canTraverse(tile);\n\n    if (traverse) {\n      updateAndPushChildren(tile, stack, frameState);\n    }\n\n    if (add || (replace && !traverse)) {\n      loadTile(tileset, tile);\n      touchTile(tile, frameState);\n      selectDesiredTile(tile, frameState);\n\n      if (tile.hasRenderableContent && !tile.contentAvailable) {\n        ready = false;\n      }\n    }\n\n    visitTile(tile, frameState);\n  }\n\n  traversal.stack.trim(traversal.stackMaximumLength);\n\n  return ready;\n};\n\nfunction canTraverse(tile) {\n  if (tile.children.length === 0) {\n    return false;\n  }\n\n  if (tile.hasTilesetContent || tile.hasImplicitContent) {\n    // Traverse external tileset to visit its root tile\n    // Don't traverse if the subtree is expired because it will be destroyed\n    return !tile.contentExpired;\n  }\n\n  if (tile.hasEmptyContent) {\n    return true;\n  }\n\n  return true; // Keep traversing until a leaf is hit\n}\n\nfunction updateAndPushChildren(tile, stack, frameState) {\n  const { children } = tile;\n\n  for (let i = 0; i < children.length; ++i) {\n    const child = children[i];\n    child.updateVisibility(frameState);\n    if (child.isVisible) {\n      stack.push(child);\n    }\n  }\n}\n\nfunction loadTile(tileset, tile) {\n  if (tile.hasUnloadedRenderableContent || tile.contentExpired) {\n    tile._priority = 0.0; // Highest priority\n    tileset._requestedTiles.push(tile);\n  }\n}\n\nfunction selectDesiredTile(tile, frameState) {\n  if (\n    tile.contentAvailable &&\n    tile.contentVisibility(frameState) !== Intersect.OUTSIDE\n  ) {\n    tile.tileset._selectedTiles.push(tile);\n  }\n}\n\nexport default Cesium3DTilesetMostDetailedTraversal;\n"],"mappings":"AAAA,OAAOA,SAAS,MAAM,sBAAsB;AAC5C,OAAOC,YAAY,MAAM,yBAAyB;AAClD,OAAOC,kBAAkB,MAAM,yBAAyB;AACxD,OAAOC,wBAAwB,MAAM,+BAA+B;;AAEpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,oCAAoCA,CAAA,EAAG,CAAC;AAEjD,MAAMC,SAAS,GAAG;EAChBC,KAAK,EAAE,IAAIL,YAAY,CAAC,CAAC;EACzBM,kBAAkB,EAAE;AACtB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAH,oCAAoC,CAACI,WAAW,GAAG,UACjDC,OAAO,EACPC,UAAU,EACV;EACAD,OAAO,CAACE,cAAc,CAACC,MAAM,GAAG,CAAC;EACjCH,OAAO,CAACI,eAAe,CAACD,MAAM,GAAG,CAAC;EAClCH,OAAO,CAACK,eAAe,GAAG,KAAK;EAE/B,IAAIC,KAAK,GAAG,IAAI;EAEhB,MAAMC,IAAI,GAAGP,OAAO,CAACO,IAAI;EACzBA,IAAI,CAACC,gBAAgB,CAACP,UAAU,CAAC;EAEjC,IAAI,CAACM,IAAI,CAACE,SAAS,EAAE;IACnB,OAAOH,KAAK;EACd;EAEA,MAAM;IAAEI,SAAS;IAAEC;EAAU,CAAC,GAAGjB,wBAAwB;EAEzD,MAAMG,KAAK,GAAGD,SAAS,CAACC,KAAK;EAC7BA,KAAK,CAACe,IAAI,CAACL,IAAI,CAAC;EAEhB,OAAOV,KAAK,CAACM,MAAM,GAAG,CAAC,EAAE;IACvBP,SAAS,CAACE,kBAAkB,GAAGe,IAAI,CAACC,GAAG,CACrClB,SAAS,CAACE,kBAAkB,EAC5BD,KAAK,CAACM,MACR,CAAC;IAED,MAAMY,IAAI,GAAGlB,KAAK,CAACmB,GAAG,CAAC,CAAC;IACxB,MAAMC,GAAG,GAAGF,IAAI,CAACG,MAAM,KAAKzB,kBAAkB,CAAC0B,GAAG;IAClD,MAAMC,OAAO,GAAGL,IAAI,CAACG,MAAM,KAAKzB,kBAAkB,CAAC4B,OAAO;IAC1D,MAAMC,QAAQ,GAAGC,WAAW,CAACR,IAAI,CAAC;IAElC,IAAIO,QAAQ,EAAE;MACZE,qBAAqB,CAACT,IAAI,EAAElB,KAAK,EAAEI,UAAU,CAAC;IAChD;IAEA,IAAIgB,GAAG,IAAKG,OAAO,IAAI,CAACE,QAAS,EAAE;MACjCG,QAAQ,CAACzB,OAAO,EAAEe,IAAI,CAAC;MACvBL,SAAS,CAACK,IAAI,EAAEd,UAAU,CAAC;MAC3ByB,iBAAiB,CAACX,IAAI,EAAEd,UAAU,CAAC;MAEnC,IAAIc,IAAI,CAACY,oBAAoB,IAAI,CAACZ,IAAI,CAACa,gBAAgB,EAAE;QACvDtB,KAAK,GAAG,KAAK;MACf;IACF;IAEAK,SAAS,CAACI,IAAI,EAAEd,UAAU,CAAC;EAC7B;EAEAL,SAAS,CAACC,KAAK,CAACgC,IAAI,CAACjC,SAAS,CAACE,kBAAkB,CAAC;EAElD,OAAOQ,KAAK;AACd,CAAC;AAED,SAASiB,WAAWA,CAACR,IAAI,EAAE;EACzB,IAAIA,IAAI,CAACe,QAAQ,CAAC3B,MAAM,KAAK,CAAC,EAAE;IAC9B,OAAO,KAAK;EACd;EAEA,IAAIY,IAAI,CAACgB,iBAAiB,IAAIhB,IAAI,CAACiB,kBAAkB,EAAE;IACrD;IACA;IACA,OAAO,CAACjB,IAAI,CAACkB,cAAc;EAC7B;EAEA,IAAIlB,IAAI,CAACmB,eAAe,EAAE;IACxB,OAAO,IAAI;EACb;EAEA,OAAO,IAAI,CAAC,CAAC;AACf;AAEA,SAASV,qBAAqBA,CAACT,IAAI,EAAElB,KAAK,EAAEI,UAAU,EAAE;EACtD,MAAM;IAAE6B;EAAS,CAAC,GAAGf,IAAI;EAEzB,KAAK,IAAIoB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,QAAQ,CAAC3B,MAAM,EAAE,EAAEgC,CAAC,EAAE;IACxC,MAAMC,KAAK,GAAGN,QAAQ,CAACK,CAAC,CAAC;IACzBC,KAAK,CAAC5B,gBAAgB,CAACP,UAAU,CAAC;IAClC,IAAImC,KAAK,CAAC3B,SAAS,EAAE;MACnBZ,KAAK,CAACe,IAAI,CAACwB,KAAK,CAAC;IACnB;EACF;AACF;AAEA,SAASX,QAAQA,CAACzB,OAAO,EAAEe,IAAI,EAAE;EAC/B,IAAIA,IAAI,CAACsB,4BAA4B,IAAItB,IAAI,CAACkB,cAAc,EAAE;IAC5DlB,IAAI,CAACuB,SAAS,GAAG,GAAG,CAAC,CAAC;IACtBtC,OAAO,CAACI,eAAe,CAACQ,IAAI,CAACG,IAAI,CAAC;EACpC;AACF;AAEA,SAASW,iBAAiBA,CAACX,IAAI,EAAEd,UAAU,EAAE;EAC3C,IACEc,IAAI,CAACa,gBAAgB,IACrBb,IAAI,CAACwB,iBAAiB,CAACtC,UAAU,CAAC,KAAKV,SAAS,CAACiD,OAAO,EACxD;IACAzB,IAAI,CAACf,OAAO,CAACE,cAAc,CAACU,IAAI,CAACG,IAAI,CAAC;EACxC;AACF;AAEA,eAAepB,oCAAoC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}