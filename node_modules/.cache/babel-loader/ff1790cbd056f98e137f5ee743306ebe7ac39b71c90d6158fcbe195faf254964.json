{"ast":null,"code":"import { defined, destroyObject, DeveloperError, FeatureDetection, getElement } from \"@cesium/engine\";\nimport knockout from \"../ThirdParty/knockout.js\";\nimport BaseLayerPickerViewModel from \"./BaseLayerPickerViewModel.js\";\n\n/**\n * <span style=\"display: block; text-align: center;\">\n * <img src=\"Images/BaseLayerPicker.png\" width=\"264\" alt=\"BaseLayerPicker\" />\n * <br />BaseLayerPicker with its drop-panel open.\n * </span>\n * <br /><br />\n * The BaseLayerPicker is a single button widget that displays a panel of available imagery and\n * terrain providers.  When imagery is selected, the corresponding imagery layer is created and inserted\n * as the base layer of the imagery collection; removing the existing base.  When terrain is selected,\n * it replaces the current terrain provider.  Each item in the available providers list contains a name,\n * a representative icon, and a tooltip to display more information when hovered. The list is initially\n * empty, and must be configured before use, as illustrated in the below example.\n * <br /><br />\n * By default, the BaseLayerPicker uses a default list of example providers for demonstration purposes.\n * Notably some of these providers, such as <a href=\"https://developers.arcgis.com\" target=\"_blank\">Esri ArcGIS</a> and <a href=\"https://docs.stadiamaps.com/ target=\"_blank\">Stadia Maps</a>, have seperate terms of service and require authentication for production use.\n *\n * @alias BaseLayerPicker\n * @constructor\n *\n * @param {Element|string} container The parent HTML container node or ID for this widget.\n * @param {object} options Object with the following properties:\n * @param {Globe} options.globe The Globe to use.\n * @param {ProviderViewModel[]} [options.imageryProviderViewModels=[]] The array of ProviderViewModel instances to use for imagery.\n * @param {ProviderViewModel} [options.selectedImageryProviderViewModel] The view model for the current base imagery layer, if not supplied the first available imagery layer is used.\n * @param {ProviderViewModel[]} [options.terrainProviderViewModels=[]] The array of ProviderViewModel instances to use for terrain.\n * @param {ProviderViewModel} [options.selectedTerrainProviderViewModel] The view model for the current base terrain layer, if not supplied the first available terrain layer is used.\n *\n * @exception {DeveloperError} Element with id \"container\" does not exist in the document.\n *\n *\n * @example\n * // In HTML head, include a link to the BaseLayerPicker.css stylesheet,\n * // and in the body, include: <div id=\"baseLayerPickerContainer\"\n * //   style=\"position:absolute;top:24px;right:24px;width:38px;height:38px;\"></div>\n *\n * //Create the list of available providers we would like the user to select from.\n * //This example uses 3, OpenStreetMap, The Black Marble, and a single, non-streaming world image.\n * const imageryViewModels = [];\n * imageryViewModels.push(new Cesium.ProviderViewModel({\n *      name: \"Open\\u00adStreet\\u00adMap\",\n *      iconUrl: Cesium.buildModuleUrl(\"Widgets/Images/ImageryProviders/openStreetMap.png\"),\n *      tooltip: \"OpenStreetMap (OSM) is a collaborative project to create a free editable \\\n * map of the world.\\nhttp://www.openstreetmap.org\",\n *      creationFunction: function() {\n *          return new Cesium.OpenStreetMapImageryProvider({\n *              url: \"https://tile.openstreetmap.org/\"\n *          });\n *      }\n *  }));\n *\n *  imageryViewModels.push(new Cesium.ProviderViewModel({\n *      name: \"Earth at Night\",\n *      iconUrl: Cesium.buildModuleUrl(\"Widgets/Images/ImageryProviders/blackMarble.png\"),\n *      tooltip: \"The lights of cities and villages trace the outlines of civilization \\\n * in this global view of the Earth at night as seen by NASA/NOAA's Suomi NPP satellite.\",\n *      creationFunction: function() {\n *          return Cesium.IonImageryProvider.fromAssetId(3812);\n *      }\n *  }));\n *\n *  imageryViewModels.push(new Cesium.ProviderViewModel({\n *      name: \"Natural Earth\\u00a0II\",\n *      iconUrl: Cesium.buildModuleUrl(\"Widgets/Images/ImageryProviders/naturalEarthII.png\"),\n *      tooltip: \"Natural Earth II, darkened for contrast.\\nhttp://www.naturalearthdata.com/\",\n *      creationFunction: function() {\n *          return Cesium.TileMapServiceImageryProvider.fromUrl(\n *              Cesium.buildModuleUrl(\"Assets/Textures/NaturalEarthII\")\n *          );\n *      }\n *  }));\n *\n * //Create a CesiumWidget without imagery, if you haven't already done so.\n * const cesiumWidget = new Cesium.CesiumWidget(\"cesiumContainer\", { baseLayer: false });\n *\n * //Finally, create the baseLayerPicker widget using our view models.\n * const layers = cesiumWidget.imageryLayers;\n * const baseLayerPicker = new Cesium.BaseLayerPicker(\"baseLayerPickerContainer\", {\n *     globe: cesiumWidget.scene.globe,\n *     imageryProviderViewModels: imageryViewModels\n * });\n *\n * @see TerrainProvider\n * @see ImageryProvider\n * @see ImageryLayerCollection\n */\nfunction BaseLayerPicker(container, options) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(container)) {\n    throw new DeveloperError(\"container is required.\");\n  }\n  //>>includeEnd('debug');\n\n  container = getElement(container);\n  const viewModel = new BaseLayerPickerViewModel(options);\n  const element = document.createElement(\"button\");\n  element.type = \"button\";\n  element.className = \"cesium-button cesium-toolbar-button\";\n  element.setAttribute(\"data-bind\", \"\\\nattr: { title: buttonTooltip },\\\nclick: toggleDropDown\");\n  container.appendChild(element);\n  const imgElement = document.createElement(\"img\");\n  imgElement.setAttribute(\"draggable\", \"false\");\n  imgElement.className = \"cesium-baseLayerPicker-selected\";\n  imgElement.setAttribute(\"data-bind\", \"\\\nattr: { src: buttonImageUrl }, visible: !!buttonImageUrl\");\n  element.appendChild(imgElement);\n  const dropPanel = document.createElement(\"div\");\n  dropPanel.className = \"cesium-baseLayerPicker-dropDown\";\n  dropPanel.setAttribute(\"data-bind\", '\\\ncss: { \"cesium-baseLayerPicker-dropDown-visible\" : dropDownVisible }');\n  container.appendChild(dropPanel);\n  const imageryTitle = document.createElement(\"div\");\n  imageryTitle.className = \"cesium-baseLayerPicker-sectionTitle\";\n  imageryTitle.setAttribute(\"data-bind\", \"visible: imageryProviderViewModels.length > 0\");\n  imageryTitle.innerHTML = \"Imagery\";\n  dropPanel.appendChild(imageryTitle);\n  const imagerySection = document.createElement(\"div\");\n  imagerySection.className = \"cesium-baseLayerPicker-section\";\n  imagerySection.setAttribute(\"data-bind\", \"foreach: _imageryProviders\");\n  dropPanel.appendChild(imagerySection);\n  const imageryCategories = document.createElement(\"div\");\n  imageryCategories.className = \"cesium-baseLayerPicker-category\";\n  imagerySection.appendChild(imageryCategories);\n  const categoryTitle = document.createElement(\"div\");\n  categoryTitle.className = \"cesium-baseLayerPicker-categoryTitle\";\n  categoryTitle.setAttribute(\"data-bind\", \"text: name\");\n  imageryCategories.appendChild(categoryTitle);\n  const imageryChoices = document.createElement(\"div\");\n  imageryChoices.className = \"cesium-baseLayerPicker-choices\";\n  imageryChoices.setAttribute(\"data-bind\", \"foreach: providers\");\n  imageryCategories.appendChild(imageryChoices);\n  const imageryProvider = document.createElement(\"div\");\n  imageryProvider.className = \"cesium-baseLayerPicker-item\";\n  imageryProvider.setAttribute(\"data-bind\", '\\\ncss: { \"cesium-baseLayerPicker-selectedItem\" : $data === $parents[1].selectedImagery },\\\nattr: { title: tooltip },\\\nvisible: creationCommand.canExecute,\\\nclick: function($data) { $parents[1].selectedImagery = $data; }');\n  imageryChoices.appendChild(imageryProvider);\n  const providerIcon = document.createElement(\"img\");\n  providerIcon.className = \"cesium-baseLayerPicker-itemIcon\";\n  providerIcon.setAttribute(\"data-bind\", \"attr: { src: iconUrl }\");\n  providerIcon.setAttribute(\"draggable\", \"false\");\n  imageryProvider.appendChild(providerIcon);\n  const providerLabel = document.createElement(\"div\");\n  providerLabel.className = \"cesium-baseLayerPicker-itemLabel\";\n  providerLabel.setAttribute(\"data-bind\", \"text: name\");\n  imageryProvider.appendChild(providerLabel);\n  const terrainTitle = document.createElement(\"div\");\n  terrainTitle.className = \"cesium-baseLayerPicker-sectionTitle\";\n  terrainTitle.setAttribute(\"data-bind\", \"visible: terrainProviderViewModels.length > 0\");\n  terrainTitle.innerHTML = \"Terrain\";\n  dropPanel.appendChild(terrainTitle);\n  const terrainSection = document.createElement(\"div\");\n  terrainSection.className = \"cesium-baseLayerPicker-section\";\n  terrainSection.setAttribute(\"data-bind\", \"foreach: _terrainProviders\");\n  dropPanel.appendChild(terrainSection);\n  const terrainCategories = document.createElement(\"div\");\n  terrainCategories.className = \"cesium-baseLayerPicker-category\";\n  terrainSection.appendChild(terrainCategories);\n  const terrainCategoryTitle = document.createElement(\"div\");\n  terrainCategoryTitle.className = \"cesium-baseLayerPicker-categoryTitle\";\n  terrainCategoryTitle.setAttribute(\"data-bind\", \"text: name\");\n  terrainCategories.appendChild(terrainCategoryTitle);\n  const terrainChoices = document.createElement(\"div\");\n  terrainChoices.className = \"cesium-baseLayerPicker-choices\";\n  terrainChoices.setAttribute(\"data-bind\", \"foreach: providers\");\n  terrainCategories.appendChild(terrainChoices);\n  const terrainProvider = document.createElement(\"div\");\n  terrainProvider.className = \"cesium-baseLayerPicker-item\";\n  terrainProvider.setAttribute(\"data-bind\", '\\\ncss: { \"cesium-baseLayerPicker-selectedItem\" : $data === $parents[1].selectedTerrain },\\\nattr: { title: tooltip },\\\nvisible: creationCommand.canExecute,\\\nclick: function($data) { $parents[1].selectedTerrain = $data; }');\n  terrainChoices.appendChild(terrainProvider);\n  const terrainProviderIcon = document.createElement(\"img\");\n  terrainProviderIcon.className = \"cesium-baseLayerPicker-itemIcon\";\n  terrainProviderIcon.setAttribute(\"data-bind\", \"attr: { src: iconUrl }\");\n  terrainProviderIcon.setAttribute(\"draggable\", \"false\");\n  terrainProvider.appendChild(terrainProviderIcon);\n  const terrainProviderLabel = document.createElement(\"div\");\n  terrainProviderLabel.className = \"cesium-baseLayerPicker-itemLabel\";\n  terrainProviderLabel.setAttribute(\"data-bind\", \"text: name\");\n  terrainProvider.appendChild(terrainProviderLabel);\n  knockout.applyBindings(viewModel, element);\n  knockout.applyBindings(viewModel, dropPanel);\n  this._viewModel = viewModel;\n  this._container = container;\n  this._element = element;\n  this._dropPanel = dropPanel;\n  this._closeDropDown = function (e) {\n    if (!(element.contains(e.target) || dropPanel.contains(e.target))) {\n      viewModel.dropDownVisible = false;\n    }\n  };\n  if (FeatureDetection.supportsPointerEvents()) {\n    document.addEventListener(\"pointerdown\", this._closeDropDown, true);\n  } else {\n    document.addEventListener(\"mousedown\", this._closeDropDown, true);\n    document.addEventListener(\"touchstart\", this._closeDropDown, true);\n  }\n}\nObject.defineProperties(BaseLayerPicker.prototype, {\n  /**\n   * Gets the parent container.\n   * @memberof BaseLayerPicker.prototype\n   *\n   * @type {Element}\n   */\n  container: {\n    get: function () {\n      return this._container;\n    }\n  },\n  /**\n   * Gets the view model.\n   * @memberof BaseLayerPicker.prototype\n   *\n   * @type {BaseLayerPickerViewModel}\n   */\n  viewModel: {\n    get: function () {\n      return this._viewModel;\n    }\n  }\n});\n\n/**\n * @returns {boolean} true if the object has been destroyed, false otherwise.\n */\nBaseLayerPicker.prototype.isDestroyed = function () {\n  return false;\n};\n\n/**\n * Destroys the widget.  Should be called if permanently\n * removing the widget from layout.\n */\nBaseLayerPicker.prototype.destroy = function () {\n  if (FeatureDetection.supportsPointerEvents()) {\n    document.removeEventListener(\"pointerdown\", this._closeDropDown, true);\n  } else {\n    document.removeEventListener(\"mousedown\", this._closeDropDown, true);\n    document.removeEventListener(\"touchstart\", this._closeDropDown, true);\n  }\n  knockout.cleanNode(this._element);\n  knockout.cleanNode(this._dropPanel);\n  this._container.removeChild(this._element);\n  this._container.removeChild(this._dropPanel);\n  return destroyObject(this);\n};\nexport default BaseLayerPicker;","map":{"version":3,"names":["defined","destroyObject","DeveloperError","FeatureDetection","getElement","knockout","BaseLayerPickerViewModel","BaseLayerPicker","container","options","viewModel","element","document","createElement","type","className","setAttribute","appendChild","imgElement","dropPanel","imageryTitle","innerHTML","imagerySection","imageryCategories","categoryTitle","imageryChoices","imageryProvider","providerIcon","providerLabel","terrainTitle","terrainSection","terrainCategories","terrainCategoryTitle","terrainChoices","terrainProvider","terrainProviderIcon","terrainProviderLabel","applyBindings","_viewModel","_container","_element","_dropPanel","_closeDropDown","e","contains","target","dropDownVisible","supportsPointerEvents","addEventListener","Object","defineProperties","prototype","get","isDestroyed","destroy","removeEventListener","cleanNode","removeChild"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/widgets/Source/BaseLayerPicker/BaseLayerPicker.js"],"sourcesContent":["import {\n  defined,\n  destroyObject,\n  DeveloperError,\n  FeatureDetection,\n  getElement,\n} from \"@cesium/engine\";\nimport knockout from \"../ThirdParty/knockout.js\";\nimport BaseLayerPickerViewModel from \"./BaseLayerPickerViewModel.js\";\n\n/**\n * <span style=\"display: block; text-align: center;\">\n * <img src=\"Images/BaseLayerPicker.png\" width=\"264\" alt=\"BaseLayerPicker\" />\n * <br />BaseLayerPicker with its drop-panel open.\n * </span>\n * <br /><br />\n * The BaseLayerPicker is a single button widget that displays a panel of available imagery and\n * terrain providers.  When imagery is selected, the corresponding imagery layer is created and inserted\n * as the base layer of the imagery collection; removing the existing base.  When terrain is selected,\n * it replaces the current terrain provider.  Each item in the available providers list contains a name,\n * a representative icon, and a tooltip to display more information when hovered. The list is initially\n * empty, and must be configured before use, as illustrated in the below example.\n * <br /><br />\n * By default, the BaseLayerPicker uses a default list of example providers for demonstration purposes.\n * Notably some of these providers, such as <a href=\"https://developers.arcgis.com\" target=\"_blank\">Esri ArcGIS</a> and <a href=\"https://docs.stadiamaps.com/ target=\"_blank\">Stadia Maps</a>, have seperate terms of service and require authentication for production use.\n *\n * @alias BaseLayerPicker\n * @constructor\n *\n * @param {Element|string} container The parent HTML container node or ID for this widget.\n * @param {object} options Object with the following properties:\n * @param {Globe} options.globe The Globe to use.\n * @param {ProviderViewModel[]} [options.imageryProviderViewModels=[]] The array of ProviderViewModel instances to use for imagery.\n * @param {ProviderViewModel} [options.selectedImageryProviderViewModel] The view model for the current base imagery layer, if not supplied the first available imagery layer is used.\n * @param {ProviderViewModel[]} [options.terrainProviderViewModels=[]] The array of ProviderViewModel instances to use for terrain.\n * @param {ProviderViewModel} [options.selectedTerrainProviderViewModel] The view model for the current base terrain layer, if not supplied the first available terrain layer is used.\n *\n * @exception {DeveloperError} Element with id \"container\" does not exist in the document.\n *\n *\n * @example\n * // In HTML head, include a link to the BaseLayerPicker.css stylesheet,\n * // and in the body, include: <div id=\"baseLayerPickerContainer\"\n * //   style=\"position:absolute;top:24px;right:24px;width:38px;height:38px;\"></div>\n *\n * //Create the list of available providers we would like the user to select from.\n * //This example uses 3, OpenStreetMap, The Black Marble, and a single, non-streaming world image.\n * const imageryViewModels = [];\n * imageryViewModels.push(new Cesium.ProviderViewModel({\n *      name: \"Open\\u00adStreet\\u00adMap\",\n *      iconUrl: Cesium.buildModuleUrl(\"Widgets/Images/ImageryProviders/openStreetMap.png\"),\n *      tooltip: \"OpenStreetMap (OSM) is a collaborative project to create a free editable \\\n * map of the world.\\nhttp://www.openstreetmap.org\",\n *      creationFunction: function() {\n *          return new Cesium.OpenStreetMapImageryProvider({\n *              url: \"https://tile.openstreetmap.org/\"\n *          });\n *      }\n *  }));\n *\n *  imageryViewModels.push(new Cesium.ProviderViewModel({\n *      name: \"Earth at Night\",\n *      iconUrl: Cesium.buildModuleUrl(\"Widgets/Images/ImageryProviders/blackMarble.png\"),\n *      tooltip: \"The lights of cities and villages trace the outlines of civilization \\\n * in this global view of the Earth at night as seen by NASA/NOAA's Suomi NPP satellite.\",\n *      creationFunction: function() {\n *          return Cesium.IonImageryProvider.fromAssetId(3812);\n *      }\n *  }));\n *\n *  imageryViewModels.push(new Cesium.ProviderViewModel({\n *      name: \"Natural Earth\\u00a0II\",\n *      iconUrl: Cesium.buildModuleUrl(\"Widgets/Images/ImageryProviders/naturalEarthII.png\"),\n *      tooltip: \"Natural Earth II, darkened for contrast.\\nhttp://www.naturalearthdata.com/\",\n *      creationFunction: function() {\n *          return Cesium.TileMapServiceImageryProvider.fromUrl(\n *              Cesium.buildModuleUrl(\"Assets/Textures/NaturalEarthII\")\n *          );\n *      }\n *  }));\n *\n * //Create a CesiumWidget without imagery, if you haven't already done so.\n * const cesiumWidget = new Cesium.CesiumWidget(\"cesiumContainer\", { baseLayer: false });\n *\n * //Finally, create the baseLayerPicker widget using our view models.\n * const layers = cesiumWidget.imageryLayers;\n * const baseLayerPicker = new Cesium.BaseLayerPicker(\"baseLayerPickerContainer\", {\n *     globe: cesiumWidget.scene.globe,\n *     imageryProviderViewModels: imageryViewModels\n * });\n *\n * @see TerrainProvider\n * @see ImageryProvider\n * @see ImageryLayerCollection\n */\nfunction BaseLayerPicker(container, options) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(container)) {\n    throw new DeveloperError(\"container is required.\");\n  }\n  //>>includeEnd('debug');\n\n  container = getElement(container);\n\n  const viewModel = new BaseLayerPickerViewModel(options);\n\n  const element = document.createElement(\"button\");\n  element.type = \"button\";\n  element.className = \"cesium-button cesium-toolbar-button\";\n  element.setAttribute(\n    \"data-bind\",\n    \"\\\nattr: { title: buttonTooltip },\\\nclick: toggleDropDown\",\n  );\n  container.appendChild(element);\n\n  const imgElement = document.createElement(\"img\");\n  imgElement.setAttribute(\"draggable\", \"false\");\n  imgElement.className = \"cesium-baseLayerPicker-selected\";\n  imgElement.setAttribute(\n    \"data-bind\",\n    \"\\\nattr: { src: buttonImageUrl }, visible: !!buttonImageUrl\",\n  );\n  element.appendChild(imgElement);\n\n  const dropPanel = document.createElement(\"div\");\n  dropPanel.className = \"cesium-baseLayerPicker-dropDown\";\n  dropPanel.setAttribute(\n    \"data-bind\",\n    '\\\ncss: { \"cesium-baseLayerPicker-dropDown-visible\" : dropDownVisible }',\n  );\n  container.appendChild(dropPanel);\n\n  const imageryTitle = document.createElement(\"div\");\n  imageryTitle.className = \"cesium-baseLayerPicker-sectionTitle\";\n  imageryTitle.setAttribute(\n    \"data-bind\",\n    \"visible: imageryProviderViewModels.length > 0\",\n  );\n  imageryTitle.innerHTML = \"Imagery\";\n  dropPanel.appendChild(imageryTitle);\n\n  const imagerySection = document.createElement(\"div\");\n  imagerySection.className = \"cesium-baseLayerPicker-section\";\n  imagerySection.setAttribute(\"data-bind\", \"foreach: _imageryProviders\");\n  dropPanel.appendChild(imagerySection);\n\n  const imageryCategories = document.createElement(\"div\");\n  imageryCategories.className = \"cesium-baseLayerPicker-category\";\n  imagerySection.appendChild(imageryCategories);\n\n  const categoryTitle = document.createElement(\"div\");\n  categoryTitle.className = \"cesium-baseLayerPicker-categoryTitle\";\n  categoryTitle.setAttribute(\"data-bind\", \"text: name\");\n  imageryCategories.appendChild(categoryTitle);\n\n  const imageryChoices = document.createElement(\"div\");\n  imageryChoices.className = \"cesium-baseLayerPicker-choices\";\n  imageryChoices.setAttribute(\"data-bind\", \"foreach: providers\");\n  imageryCategories.appendChild(imageryChoices);\n\n  const imageryProvider = document.createElement(\"div\");\n  imageryProvider.className = \"cesium-baseLayerPicker-item\";\n  imageryProvider.setAttribute(\n    \"data-bind\",\n    '\\\ncss: { \"cesium-baseLayerPicker-selectedItem\" : $data === $parents[1].selectedImagery },\\\nattr: { title: tooltip },\\\nvisible: creationCommand.canExecute,\\\nclick: function($data) { $parents[1].selectedImagery = $data; }',\n  );\n  imageryChoices.appendChild(imageryProvider);\n\n  const providerIcon = document.createElement(\"img\");\n  providerIcon.className = \"cesium-baseLayerPicker-itemIcon\";\n  providerIcon.setAttribute(\"data-bind\", \"attr: { src: iconUrl }\");\n  providerIcon.setAttribute(\"draggable\", \"false\");\n  imageryProvider.appendChild(providerIcon);\n\n  const providerLabel = document.createElement(\"div\");\n  providerLabel.className = \"cesium-baseLayerPicker-itemLabel\";\n  providerLabel.setAttribute(\"data-bind\", \"text: name\");\n  imageryProvider.appendChild(providerLabel);\n\n  const terrainTitle = document.createElement(\"div\");\n  terrainTitle.className = \"cesium-baseLayerPicker-sectionTitle\";\n  terrainTitle.setAttribute(\n    \"data-bind\",\n    \"visible: terrainProviderViewModels.length > 0\",\n  );\n  terrainTitle.innerHTML = \"Terrain\";\n  dropPanel.appendChild(terrainTitle);\n\n  const terrainSection = document.createElement(\"div\");\n  terrainSection.className = \"cesium-baseLayerPicker-section\";\n  terrainSection.setAttribute(\"data-bind\", \"foreach: _terrainProviders\");\n  dropPanel.appendChild(terrainSection);\n\n  const terrainCategories = document.createElement(\"div\");\n  terrainCategories.className = \"cesium-baseLayerPicker-category\";\n  terrainSection.appendChild(terrainCategories);\n\n  const terrainCategoryTitle = document.createElement(\"div\");\n  terrainCategoryTitle.className = \"cesium-baseLayerPicker-categoryTitle\";\n  terrainCategoryTitle.setAttribute(\"data-bind\", \"text: name\");\n  terrainCategories.appendChild(terrainCategoryTitle);\n\n  const terrainChoices = document.createElement(\"div\");\n  terrainChoices.className = \"cesium-baseLayerPicker-choices\";\n  terrainChoices.setAttribute(\"data-bind\", \"foreach: providers\");\n  terrainCategories.appendChild(terrainChoices);\n\n  const terrainProvider = document.createElement(\"div\");\n  terrainProvider.className = \"cesium-baseLayerPicker-item\";\n  terrainProvider.setAttribute(\n    \"data-bind\",\n    '\\\ncss: { \"cesium-baseLayerPicker-selectedItem\" : $data === $parents[1].selectedTerrain },\\\nattr: { title: tooltip },\\\nvisible: creationCommand.canExecute,\\\nclick: function($data) { $parents[1].selectedTerrain = $data; }',\n  );\n  terrainChoices.appendChild(terrainProvider);\n\n  const terrainProviderIcon = document.createElement(\"img\");\n  terrainProviderIcon.className = \"cesium-baseLayerPicker-itemIcon\";\n  terrainProviderIcon.setAttribute(\"data-bind\", \"attr: { src: iconUrl }\");\n  terrainProviderIcon.setAttribute(\"draggable\", \"false\");\n  terrainProvider.appendChild(terrainProviderIcon);\n\n  const terrainProviderLabel = document.createElement(\"div\");\n  terrainProviderLabel.className = \"cesium-baseLayerPicker-itemLabel\";\n  terrainProviderLabel.setAttribute(\"data-bind\", \"text: name\");\n  terrainProvider.appendChild(terrainProviderLabel);\n\n  knockout.applyBindings(viewModel, element);\n  knockout.applyBindings(viewModel, dropPanel);\n\n  this._viewModel = viewModel;\n  this._container = container;\n  this._element = element;\n  this._dropPanel = dropPanel;\n\n  this._closeDropDown = function (e) {\n    if (!(element.contains(e.target) || dropPanel.contains(e.target))) {\n      viewModel.dropDownVisible = false;\n    }\n  };\n\n  if (FeatureDetection.supportsPointerEvents()) {\n    document.addEventListener(\"pointerdown\", this._closeDropDown, true);\n  } else {\n    document.addEventListener(\"mousedown\", this._closeDropDown, true);\n    document.addEventListener(\"touchstart\", this._closeDropDown, true);\n  }\n}\n\nObject.defineProperties(BaseLayerPicker.prototype, {\n  /**\n   * Gets the parent container.\n   * @memberof BaseLayerPicker.prototype\n   *\n   * @type {Element}\n   */\n  container: {\n    get: function () {\n      return this._container;\n    },\n  },\n\n  /**\n   * Gets the view model.\n   * @memberof BaseLayerPicker.prototype\n   *\n   * @type {BaseLayerPickerViewModel}\n   */\n  viewModel: {\n    get: function () {\n      return this._viewModel;\n    },\n  },\n});\n\n/**\n * @returns {boolean} true if the object has been destroyed, false otherwise.\n */\nBaseLayerPicker.prototype.isDestroyed = function () {\n  return false;\n};\n\n/**\n * Destroys the widget.  Should be called if permanently\n * removing the widget from layout.\n */\nBaseLayerPicker.prototype.destroy = function () {\n  if (FeatureDetection.supportsPointerEvents()) {\n    document.removeEventListener(\"pointerdown\", this._closeDropDown, true);\n  } else {\n    document.removeEventListener(\"mousedown\", this._closeDropDown, true);\n    document.removeEventListener(\"touchstart\", this._closeDropDown, true);\n  }\n\n  knockout.cleanNode(this._element);\n  knockout.cleanNode(this._dropPanel);\n  this._container.removeChild(this._element);\n  this._container.removeChild(this._dropPanel);\n  return destroyObject(this);\n};\nexport default BaseLayerPicker;\n"],"mappings":"AAAA,SACEA,OAAO,EACPC,aAAa,EACbC,cAAc,EACdC,gBAAgB,EAChBC,UAAU,QACL,gBAAgB;AACvB,OAAOC,QAAQ,MAAM,2BAA2B;AAChD,OAAOC,wBAAwB,MAAM,+BAA+B;;AAEpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,eAAeA,CAACC,SAAS,EAAEC,OAAO,EAAE;EAC3C;EACA,IAAI,CAACT,OAAO,CAACQ,SAAS,CAAC,EAAE;IACvB,MAAM,IAAIN,cAAc,CAAC,wBAAwB,CAAC;EACpD;EACA;;EAEAM,SAAS,GAAGJ,UAAU,CAACI,SAAS,CAAC;EAEjC,MAAME,SAAS,GAAG,IAAIJ,wBAAwB,CAACG,OAAO,CAAC;EAEvD,MAAME,OAAO,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;EAChDF,OAAO,CAACG,IAAI,GAAG,QAAQ;EACvBH,OAAO,CAACI,SAAS,GAAG,qCAAqC;EACzDJ,OAAO,CAACK,YAAY,CAClB,WAAW,EACX;AACJ;AACA,sBACE,CAAC;EACDR,SAAS,CAACS,WAAW,CAACN,OAAO,CAAC;EAE9B,MAAMO,UAAU,GAAGN,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;EAChDK,UAAU,CAACF,YAAY,CAAC,WAAW,EAAE,OAAO,CAAC;EAC7CE,UAAU,CAACH,SAAS,GAAG,iCAAiC;EACxDG,UAAU,CAACF,YAAY,CACrB,WAAW,EACX;AACJ,yDACE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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}