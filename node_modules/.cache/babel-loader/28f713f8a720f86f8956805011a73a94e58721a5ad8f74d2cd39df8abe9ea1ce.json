{"ast":null,"code":"import defined from \"./defined.js\";\nimport DeveloperError from \"./DeveloperError.js\";\n\n/**\n * A collection of key-value pairs that is stored as a hash for easy\n * lookup but also provides an array for fast iteration.\n * @alias AssociativeArray\n * @constructor\n */\nfunction AssociativeArray() {\n  this._array = [];\n  this._hash = {};\n}\nObject.defineProperties(AssociativeArray.prototype, {\n  /**\n   * Gets the number of items in the collection.\n   * @memberof AssociativeArray.prototype\n   *\n   * @type {number}\n   */\n  length: {\n    get: function () {\n      return this._array.length;\n    }\n  },\n  /**\n   * Gets an unordered array of all values in the collection.\n   * This is a live array that will automatically reflect the values in the collection,\n   * it should not be modified directly.\n   * @memberof AssociativeArray.prototype\n   *\n   * @type {Array}\n   */\n  values: {\n    get: function () {\n      return this._array;\n    }\n  }\n});\n\n/**\n * Determines if the provided key is in the array.\n *\n * @param {string|number} key The key to check.\n * @returns {boolean} <code>true</code> if the key is in the array, <code>false</code> otherwise.\n */\nAssociativeArray.prototype.contains = function (key) {\n  //>>includeStart('debug', pragmas.debug);\n  if (typeof key !== \"string\" && typeof key !== \"number\") {\n    throw new DeveloperError(\"key is required to be a string or number.\");\n  }\n  //>>includeEnd('debug');\n  return defined(this._hash[key]);\n};\n\n/**\n * Associates the provided key with the provided value.  If the key already\n * exists, it is overwritten with the new value.\n *\n * @param {string|number} key A unique identifier.\n * @param {*} value The value to associate with the provided key.\n */\nAssociativeArray.prototype.set = function (key, value) {\n  //>>includeStart('debug', pragmas.debug);\n  if (typeof key !== \"string\" && typeof key !== \"number\") {\n    throw new DeveloperError(\"key is required to be a string or number.\");\n  }\n  //>>includeEnd('debug');\n\n  const oldValue = this._hash[key];\n  if (value !== oldValue) {\n    this.remove(key);\n    this._hash[key] = value;\n    this._array.push(value);\n  }\n};\n\n/**\n * Retrieves the value associated with the provided key.\n *\n * @param {string|number} key The key whose value is to be retrieved.\n * @returns {*} The associated value, or undefined if the key does not exist in the collection.\n */\nAssociativeArray.prototype.get = function (key) {\n  //>>includeStart('debug', pragmas.debug);\n  if (typeof key !== \"string\" && typeof key !== \"number\") {\n    throw new DeveloperError(\"key is required to be a string or number.\");\n  }\n  //>>includeEnd('debug');\n  return this._hash[key];\n};\n\n/**\n * Removes a key-value pair from the collection.\n *\n * @param {string|number} key The key to be removed.\n * @returns {boolean} True if it was removed, false if the key was not in the collection.\n */\nAssociativeArray.prototype.remove = function (key) {\n  //>>includeStart('debug', pragmas.debug);\n  if (defined(key) && typeof key !== \"string\" && typeof key !== \"number\") {\n    throw new DeveloperError(\"key is required to be a string or number.\");\n  }\n  //>>includeEnd('debug');\n\n  const value = this._hash[key];\n  const hasValue = defined(value);\n  if (hasValue) {\n    const array = this._array;\n    array.splice(array.indexOf(value), 1);\n    delete this._hash[key];\n  }\n  return hasValue;\n};\n\n/**\n * Clears the collection.\n */\nAssociativeArray.prototype.removeAll = function () {\n  const array = this._array;\n  if (array.length > 0) {\n    this._hash = {};\n    array.length = 0;\n  }\n};\nexport default AssociativeArray;","map":{"version":3,"names":["defined","DeveloperError","AssociativeArray","_array","_hash","Object","defineProperties","prototype","length","get","values","contains","key","set","value","oldValue","remove","push","hasValue","array","splice","indexOf","removeAll"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/engine/Source/Core/AssociativeArray.js"],"sourcesContent":["import defined from \"./defined.js\";\nimport DeveloperError from \"./DeveloperError.js\";\n\n/**\n * A collection of key-value pairs that is stored as a hash for easy\n * lookup but also provides an array for fast iteration.\n * @alias AssociativeArray\n * @constructor\n */\nfunction AssociativeArray() {\n  this._array = [];\n  this._hash = {};\n}\n\nObject.defineProperties(AssociativeArray.prototype, {\n  /**\n   * Gets the number of items in the collection.\n   * @memberof AssociativeArray.prototype\n   *\n   * @type {number}\n   */\n  length: {\n    get: function () {\n      return this._array.length;\n    },\n  },\n  /**\n   * Gets an unordered array of all values in the collection.\n   * This is a live array that will automatically reflect the values in the collection,\n   * it should not be modified directly.\n   * @memberof AssociativeArray.prototype\n   *\n   * @type {Array}\n   */\n  values: {\n    get: function () {\n      return this._array;\n    },\n  },\n});\n\n/**\n * Determines if the provided key is in the array.\n *\n * @param {string|number} key The key to check.\n * @returns {boolean} <code>true</code> if the key is in the array, <code>false</code> otherwise.\n */\nAssociativeArray.prototype.contains = function (key) {\n  //>>includeStart('debug', pragmas.debug);\n  if (typeof key !== \"string\" && typeof key !== \"number\") {\n    throw new DeveloperError(\"key is required to be a string or number.\");\n  }\n  //>>includeEnd('debug');\n  return defined(this._hash[key]);\n};\n\n/**\n * Associates the provided key with the provided value.  If the key already\n * exists, it is overwritten with the new value.\n *\n * @param {string|number} key A unique identifier.\n * @param {*} value The value to associate with the provided key.\n */\nAssociativeArray.prototype.set = function (key, value) {\n  //>>includeStart('debug', pragmas.debug);\n  if (typeof key !== \"string\" && typeof key !== \"number\") {\n    throw new DeveloperError(\"key is required to be a string or number.\");\n  }\n  //>>includeEnd('debug');\n\n  const oldValue = this._hash[key];\n  if (value !== oldValue) {\n    this.remove(key);\n    this._hash[key] = value;\n    this._array.push(value);\n  }\n};\n\n/**\n * Retrieves the value associated with the provided key.\n *\n * @param {string|number} key The key whose value is to be retrieved.\n * @returns {*} The associated value, or undefined if the key does not exist in the collection.\n */\nAssociativeArray.prototype.get = function (key) {\n  //>>includeStart('debug', pragmas.debug);\n  if (typeof key !== \"string\" && typeof key !== \"number\") {\n    throw new DeveloperError(\"key is required to be a string or number.\");\n  }\n  //>>includeEnd('debug');\n  return this._hash[key];\n};\n\n/**\n * Removes a key-value pair from the collection.\n *\n * @param {string|number} key The key to be removed.\n * @returns {boolean} True if it was removed, false if the key was not in the collection.\n */\nAssociativeArray.prototype.remove = function (key) {\n  //>>includeStart('debug', pragmas.debug);\n  if (defined(key) && typeof key !== \"string\" && typeof key !== \"number\") {\n    throw new DeveloperError(\"key is required to be a string or number.\");\n  }\n  //>>includeEnd('debug');\n\n  const value = this._hash[key];\n  const hasValue = defined(value);\n  if (hasValue) {\n    const array = this._array;\n    array.splice(array.indexOf(value), 1);\n    delete this._hash[key];\n  }\n  return hasValue;\n};\n\n/**\n * Clears the collection.\n */\nAssociativeArray.prototype.removeAll = function () {\n  const array = this._array;\n  if (array.length > 0) {\n    this._hash = {};\n    array.length = 0;\n  }\n};\nexport default AssociativeArray;\n"],"mappings":"AAAA,OAAOA,OAAO,MAAM,cAAc;AAClC,OAAOC,cAAc,MAAM,qBAAqB;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,gBAAgBA,CAAA,EAAG;EAC1B,IAAI,CAACC,MAAM,GAAG,EAAE;EAChB,IAAI,CAACC,KAAK,GAAG,CAAC,CAAC;AACjB;AAEAC,MAAM,CAACC,gBAAgB,CAACJ,gBAAgB,CAACK,SAAS,EAAE;EAClD;AACF;AACA;AACA;AACA;AACA;EACEC,MAAM,EAAE;IACNC,GAAG,EAAE,SAAAA,CAAA,EAAY;MACf,OAAO,IAAI,CAACN,MAAM,CAACK,MAAM;IAC3B;EACF,CAAC;EACD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACEE,MAAM,EAAE;IACND,GAAG,EAAE,SAAAA,CAAA,EAAY;MACf,OAAO,IAAI,CAACN,MAAM;IACpB;EACF;AACF,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACAD,gBAAgB,CAACK,SAAS,CAACI,QAAQ,GAAG,UAAUC,GAAG,EAAE;EACnD;EACA,IAAI,OAAOA,GAAG,KAAK,QAAQ,IAAI,OAAOA,GAAG,KAAK,QAAQ,EAAE;IACtD,MAAM,IAAIX,cAAc,CAAC,2CAA2C,CAAC;EACvE;EACA;EACA,OAAOD,OAAO,CAAC,IAAI,CAACI,KAAK,CAACQ,GAAG,CAAC,CAAC;AACjC,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACAV,gBAAgB,CAACK,SAAS,CAACM,GAAG,GAAG,UAAUD,GAAG,EAAEE,KAAK,EAAE;EACrD;EACA,IAAI,OAAOF,GAAG,KAAK,QAAQ,IAAI,OAAOA,GAAG,KAAK,QAAQ,EAAE;IACtD,MAAM,IAAIX,cAAc,CAAC,2CAA2C,CAAC;EACvE;EACA;;EAEA,MAAMc,QAAQ,GAAG,IAAI,CAACX,KAAK,CAACQ,GAAG,CAAC;EAChC,IAAIE,KAAK,KAAKC,QAAQ,EAAE;IACtB,IAAI,CAACC,MAAM,CAACJ,GAAG,CAAC;IAChB,IAAI,CAACR,KAAK,CAACQ,GAAG,CAAC,GAAGE,KAAK;IACvB,IAAI,CAACX,MAAM,CAACc,IAAI,CAACH,KAAK,CAAC;EACzB;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACAZ,gBAAgB,CAACK,SAAS,CAACE,GAAG,GAAG,UAAUG,GAAG,EAAE;EAC9C;EACA,IAAI,OAAOA,GAAG,KAAK,QAAQ,IAAI,OAAOA,GAAG,KAAK,QAAQ,EAAE;IACtD,MAAM,IAAIX,cAAc,CAAC,2CAA2C,CAAC;EACvE;EACA;EACA,OAAO,IAAI,CAACG,KAAK,CAACQ,GAAG,CAAC;AACxB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACAV,gBAAgB,CAACK,SAAS,CAACS,MAAM,GAAG,UAAUJ,GAAG,EAAE;EACjD;EACA,IAAIZ,OAAO,CAACY,GAAG,CAAC,IAAI,OAAOA,GAAG,KAAK,QAAQ,IAAI,OAAOA,GAAG,KAAK,QAAQ,EAAE;IACtE,MAAM,IAAIX,cAAc,CAAC,2CAA2C,CAAC;EACvE;EACA;;EAEA,MAAMa,KAAK,GAAG,IAAI,CAACV,KAAK,CAACQ,GAAG,CAAC;EAC7B,MAAMM,QAAQ,GAAGlB,OAAO,CAACc,KAAK,CAAC;EAC/B,IAAII,QAAQ,EAAE;IACZ,MAAMC,KAAK,GAAG,IAAI,CAAChB,MAAM;IACzBgB,KAAK,CAACC,MAAM,CAACD,KAAK,CAACE,OAAO,CAACP,KAAK,CAAC,EAAE,CAAC,CAAC;IACrC,OAAO,IAAI,CAACV,KAAK,CAACQ,GAAG,CAAC;EACxB;EACA,OAAOM,QAAQ;AACjB,CAAC;;AAED;AACA;AACA;AACAhB,gBAAgB,CAACK,SAAS,CAACe,SAAS,GAAG,YAAY;EACjD,MAAMH,KAAK,GAAG,IAAI,CAAChB,MAAM;EACzB,IAAIgB,KAAK,CAACX,MAAM,GAAG,CAAC,EAAE;IACpB,IAAI,CAACJ,KAAK,GAAG,CAAC,CAAC;IACfe,KAAK,CAACX,MAAM,GAAG,CAAC;EAClB;AACF,CAAC;AACD,eAAeN,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}