{"ast":null,"code":"import barycentricCoordinates from \"./barycentricCoordinates.js\";\nimport Cartesian3 from \"./Cartesian3.js\";\nimport defined from \"./defined.js\";\nconst scratchBarycentricCoords = new Cartesian3();\n\n/**\n * Determines if a point is inside a triangle.\n *\n * @function pointInsideTriangle\n *\n * @param {Cartesian2|Cartesian3} point The point to test.\n * @param {Cartesian2|Cartesian3} p0 The first point of the triangle.\n * @param {Cartesian2|Cartesian3} p1 The second point of the triangle.\n * @param {Cartesian2|Cartesian3} p2 The third point of the triangle.\n * @returns {boolean} <code>true</code> if the point is inside the triangle; otherwise, <code>false</code>.\n *\n * @example\n * // Returns true\n * const p = new Cesium.Cartesian2(0.25, 0.25);\n * const b = Cesium.pointInsideTriangle(p,\n *   new Cesium.Cartesian2(0.0, 0.0),\n *   new Cesium.Cartesian2(1.0, 0.0),\n *   new Cesium.Cartesian2(0.0, 1.0));\n */\nfunction pointInsideTriangle(point, p0, p1, p2) {\n  const coords = barycentricCoordinates(point, p0, p1, p2, scratchBarycentricCoords);\n  if (!defined(coords)) {\n    return false;\n  }\n  return coords.x > 0.0 && coords.y > 0.0 && coords.z > 0;\n}\nexport default pointInsideTriangle;","map":{"version":3,"names":["barycentricCoordinates","Cartesian3","defined","scratchBarycentricCoords","pointInsideTriangle","point","p0","p1","p2","coords","x","y","z"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/engine/Source/Core/pointInsideTriangle.js"],"sourcesContent":["import barycentricCoordinates from \"./barycentricCoordinates.js\";\nimport Cartesian3 from \"./Cartesian3.js\";\nimport defined from \"./defined.js\";\n\nconst scratchBarycentricCoords = new Cartesian3();\n\n/**\n * Determines if a point is inside a triangle.\n *\n * @function pointInsideTriangle\n *\n * @param {Cartesian2|Cartesian3} point The point to test.\n * @param {Cartesian2|Cartesian3} p0 The first point of the triangle.\n * @param {Cartesian2|Cartesian3} p1 The second point of the triangle.\n * @param {Cartesian2|Cartesian3} p2 The third point of the triangle.\n * @returns {boolean} <code>true</code> if the point is inside the triangle; otherwise, <code>false</code>.\n *\n * @example\n * // Returns true\n * const p = new Cesium.Cartesian2(0.25, 0.25);\n * const b = Cesium.pointInsideTriangle(p,\n *   new Cesium.Cartesian2(0.0, 0.0),\n *   new Cesium.Cartesian2(1.0, 0.0),\n *   new Cesium.Cartesian2(0.0, 1.0));\n */\nfunction pointInsideTriangle(point, p0, p1, p2) {\n  const coords = barycentricCoordinates(\n    point,\n    p0,\n    p1,\n    p2,\n    scratchBarycentricCoords,\n  );\n  if (!defined(coords)) {\n    return false;\n  }\n  return coords.x > 0.0 && coords.y > 0.0 && coords.z > 0;\n}\nexport default pointInsideTriangle;\n"],"mappings":"AAAA,OAAOA,sBAAsB,MAAM,6BAA6B;AAChE,OAAOC,UAAU,MAAM,iBAAiB;AACxC,OAAOC,OAAO,MAAM,cAAc;AAElC,MAAMC,wBAAwB,GAAG,IAAIF,UAAU,CAAC,CAAC;;AAEjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASG,mBAAmBA,CAACC,KAAK,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAE;EAC9C,MAAMC,MAAM,GAAGT,sBAAsB,CACnCK,KAAK,EACLC,EAAE,EACFC,EAAE,EACFC,EAAE,EACFL,wBACF,CAAC;EACD,IAAI,CAACD,OAAO,CAACO,MAAM,CAAC,EAAE;IACpB,OAAO,KAAK;EACd;EACA,OAAOA,MAAM,CAACC,CAAC,GAAG,GAAG,IAAID,MAAM,CAACE,CAAC,GAAG,GAAG,IAAIF,MAAM,CAACG,CAAC,GAAG,CAAC;AACzD;AACA,eAAeR,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}