{"ast":null,"code":"import destroyObject from \"../Core/destroyObject.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\n\n/**\n * Represents empty content for tiles in a\n * {@link https://github.com/CesiumGS/3d-tiles/tree/main/specification|3D Tiles} tileset that\n * do not have content, e.g., because they are used to optimize hierarchical culling.\n * <p>\n * Implements the {@link Cesium3DTileContent} interface.\n * </p>\n *\n * @alias Empty3DTileContent\n * @constructor\n *\n * @private\n */\nfunction Empty3DTileContent(tileset, tile) {\n  this._tileset = tileset;\n  this._tile = tile;\n  this.featurePropertiesDirty = false;\n}\nObject.defineProperties(Empty3DTileContent.prototype, {\n  featuresLength: {\n    get: function () {\n      return 0;\n    }\n  },\n  pointsLength: {\n    get: function () {\n      return 0;\n    }\n  },\n  trianglesLength: {\n    get: function () {\n      return 0;\n    }\n  },\n  geometryByteLength: {\n    get: function () {\n      return 0;\n    }\n  },\n  texturesByteLength: {\n    get: function () {\n      return 0;\n    }\n  },\n  batchTableByteLength: {\n    get: function () {\n      return 0;\n    }\n  },\n  innerContents: {\n    get: function () {\n      return undefined;\n    }\n  },\n  /**\n   * Returns true when the tile's content is ready to render; otherwise false\n   *\n   * @memberof Empty3DTileContent.prototype\n   *\n   * @type {boolean}\n   * @readonly\n   * @private\n   */\n  ready: {\n    get: function () {\n      return true;\n    }\n  },\n  tileset: {\n    get: function () {\n      return this._tileset;\n    }\n  },\n  tile: {\n    get: function () {\n      return this._tile;\n    }\n  },\n  url: {\n    get: function () {\n      return undefined;\n    }\n  },\n  metadata: {\n    get: function () {\n      return undefined;\n    },\n    set: function (value) {\n      //>>includeStart('debug', pragmas.debug);\n      throw new DeveloperError(\"Empty3DTileContent cannot have content metadata\");\n      //>>includeEnd('debug');\n    }\n  },\n  batchTable: {\n    get: function () {\n      return undefined;\n    }\n  },\n  group: {\n    get: function () {\n      return undefined;\n    },\n    set: function (value) {\n      //>>includeStart('debug', pragmas.debug);\n      throw new DeveloperError(\"Empty3DTileContent cannot have group metadata\");\n      //>>includeEnd('debug');\n    }\n  }\n});\n\n/**\n * Part of the {@link Cesium3DTileContent} interface.  <code>Empty3DTileContent</code>\n * always returns <code>false</code> since a tile of this type does not have any features.\n */\nEmpty3DTileContent.prototype.hasProperty = function (batchId, name) {\n  return false;\n};\n\n/**\n * Part of the {@link Cesium3DTileContent} interface.  <code>Empty3DTileContent</code>\n * always returns <code>undefined</code> since a tile of this type does not have any features.\n */\nEmpty3DTileContent.prototype.getFeature = function (batchId) {\n  return undefined;\n};\nEmpty3DTileContent.prototype.applyDebugSettings = function (enabled, color) {};\nEmpty3DTileContent.prototype.applyStyle = function (style) {};\nEmpty3DTileContent.prototype.update = function (tileset, frameState) {};\nEmpty3DTileContent.prototype.pick = function (ray, frameState, result) {\n  return undefined;\n};\nEmpty3DTileContent.prototype.isDestroyed = function () {\n  return false;\n};\nEmpty3DTileContent.prototype.destroy = function () {\n  return destroyObject(this);\n};\nexport default Empty3DTileContent;","map":{"version":3,"names":["destroyObject","DeveloperError","Empty3DTileContent","tileset","tile","_tileset","_tile","featurePropertiesDirty","Object","defineProperties","prototype","featuresLength","get","pointsLength","trianglesLength","geometryByteLength","texturesByteLength","batchTableByteLength","innerContents","undefined","ready","url","metadata","set","value","batchTable","group","hasProperty","batchId","name","getFeature","applyDebugSettings","enabled","color","applyStyle","style","update","frameState","pick","ray","result","isDestroyed","destroy"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/engine/Source/Scene/Empty3DTileContent.js"],"sourcesContent":["import destroyObject from \"../Core/destroyObject.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\n\n/**\n * Represents empty content for tiles in a\n * {@link https://github.com/CesiumGS/3d-tiles/tree/main/specification|3D Tiles} tileset that\n * do not have content, e.g., because they are used to optimize hierarchical culling.\n * <p>\n * Implements the {@link Cesium3DTileContent} interface.\n * </p>\n *\n * @alias Empty3DTileContent\n * @constructor\n *\n * @private\n */\nfunction Empty3DTileContent(tileset, tile) {\n  this._tileset = tileset;\n  this._tile = tile;\n\n  this.featurePropertiesDirty = false;\n}\n\nObject.defineProperties(Empty3DTileContent.prototype, {\n  featuresLength: {\n    get: function () {\n      return 0;\n    },\n  },\n\n  pointsLength: {\n    get: function () {\n      return 0;\n    },\n  },\n\n  trianglesLength: {\n    get: function () {\n      return 0;\n    },\n  },\n\n  geometryByteLength: {\n    get: function () {\n      return 0;\n    },\n  },\n\n  texturesByteLength: {\n    get: function () {\n      return 0;\n    },\n  },\n\n  batchTableByteLength: {\n    get: function () {\n      return 0;\n    },\n  },\n\n  innerContents: {\n    get: function () {\n      return undefined;\n    },\n  },\n\n  /**\n   * Returns true when the tile's content is ready to render; otherwise false\n   *\n   * @memberof Empty3DTileContent.prototype\n   *\n   * @type {boolean}\n   * @readonly\n   * @private\n   */\n  ready: {\n    get: function () {\n      return true;\n    },\n  },\n\n  tileset: {\n    get: function () {\n      return this._tileset;\n    },\n  },\n\n  tile: {\n    get: function () {\n      return this._tile;\n    },\n  },\n\n  url: {\n    get: function () {\n      return undefined;\n    },\n  },\n\n  metadata: {\n    get: function () {\n      return undefined;\n    },\n    set: function (value) {\n      //>>includeStart('debug', pragmas.debug);\n      throw new DeveloperError(\n        \"Empty3DTileContent cannot have content metadata\",\n      );\n      //>>includeEnd('debug');\n    },\n  },\n\n  batchTable: {\n    get: function () {\n      return undefined;\n    },\n  },\n\n  group: {\n    get: function () {\n      return undefined;\n    },\n    set: function (value) {\n      //>>includeStart('debug', pragmas.debug);\n      throw new DeveloperError(\"Empty3DTileContent cannot have group metadata\");\n      //>>includeEnd('debug');\n    },\n  },\n});\n\n/**\n * Part of the {@link Cesium3DTileContent} interface.  <code>Empty3DTileContent</code>\n * always returns <code>false</code> since a tile of this type does not have any features.\n */\nEmpty3DTileContent.prototype.hasProperty = function (batchId, name) {\n  return false;\n};\n\n/**\n * Part of the {@link Cesium3DTileContent} interface.  <code>Empty3DTileContent</code>\n * always returns <code>undefined</code> since a tile of this type does not have any features.\n */\nEmpty3DTileContent.prototype.getFeature = function (batchId) {\n  return undefined;\n};\n\nEmpty3DTileContent.prototype.applyDebugSettings = function (enabled, color) {};\n\nEmpty3DTileContent.prototype.applyStyle = function (style) {};\n\nEmpty3DTileContent.prototype.update = function (tileset, frameState) {};\n\nEmpty3DTileContent.prototype.pick = function (ray, frameState, result) {\n  return undefined;\n};\n\nEmpty3DTileContent.prototype.isDestroyed = function () {\n  return false;\n};\n\nEmpty3DTileContent.prototype.destroy = function () {\n  return destroyObject(this);\n};\nexport default Empty3DTileContent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}