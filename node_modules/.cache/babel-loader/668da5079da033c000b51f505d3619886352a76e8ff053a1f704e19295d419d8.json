{"ast":null,"code":"import defined from \"../Core/defined.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport Event from \"../Core/Event.js\";\nimport JulianDate from \"../Core/JulianDate.js\";\nimport CompositeProperty from \"./CompositeProperty.js\";\nimport Property from \"./Property.js\";\n\n/**\n * A {@link CompositeProperty} which is also a {@link MaterialProperty}.\n *\n * @alias CompositeMaterialProperty\n * @constructor\n */\nfunction CompositeMaterialProperty() {\n  this._definitionChanged = new Event();\n  this._composite = new CompositeProperty();\n  this._composite.definitionChanged.addEventListener(CompositeMaterialProperty.prototype._raiseDefinitionChanged, this);\n}\nObject.defineProperties(CompositeMaterialProperty.prototype, {\n  /**\n   * Gets a value indicating if this property is constant.  A property is considered\n   * constant if getValue always returns the same result for the current definition.\n   * @memberof CompositeMaterialProperty.prototype\n   *\n   * @type {boolean}\n   * @readonly\n   */\n  isConstant: {\n    get: function () {\n      return this._composite.isConstant;\n    }\n  },\n  /**\n   * Gets the event that is raised whenever the definition of this property changes.\n   * The definition is changed whenever setValue is called with data different\n   * than the current value.\n   * @memberof CompositeMaterialProperty.prototype\n   *\n   * @type {Event}\n   * @readonly\n   */\n  definitionChanged: {\n    get: function () {\n      return this._definitionChanged;\n    }\n  },\n  /**\n   * Gets the interval collection.\n   * @memberof CompositeMaterialProperty.prototype\n   *\n   * @type {TimeIntervalCollection}\n   */\n  intervals: {\n    get: function () {\n      return this._composite._intervals;\n    }\n  }\n});\n\n/**\n * Gets the {@link Material} type at the provided time.\n *\n * @param {JulianDate} time The time for which to retrieve the type.\n * @returns {string} The type of material.\n */\nCompositeMaterialProperty.prototype.getType = function (time) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(time)) {\n    throw new DeveloperError(\"time is required\");\n  }\n  //>>includeEnd('debug');\n\n  const innerProperty = this._composite._intervals.findDataForIntervalContainingDate(time);\n  if (defined(innerProperty)) {\n    return innerProperty.getType(time);\n  }\n  return undefined;\n};\nconst timeScratch = new JulianDate();\n\n/**\n * Gets the value of the property at the provided time.\n *\n * @param {JulianDate} [time=JulianDate.now()] The time for which to retrieve the value. If omitted, the current system time is used.\n * @param {object} [result] The object to store the value into, if omitted, a new instance is created and returned.\n * @returns {object} The modified result parameter or a new instance if the result parameter was not supplied.\n */\nCompositeMaterialProperty.prototype.getValue = function (time, result) {\n  if (!defined(time)) {\n    time = JulianDate.now(timeScratch);\n  }\n  const innerProperty = this._composite._intervals.findDataForIntervalContainingDate(time);\n  if (defined(innerProperty)) {\n    return innerProperty.getValue(time, result);\n  }\n  return undefined;\n};\n\n/**\n * Compares this property to the provided property and returns\n * <code>true</code> if they are equal, <code>false</code> otherwise.\n *\n * @param {Property} [other] The other property.\n * @returns {boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\n */\nCompositeMaterialProperty.prototype.equals = function (other) {\n  return this === other ||\n  //\n  other instanceof CompositeMaterialProperty &&\n  //\n  this._composite.equals(other._composite, Property.equals);\n};\n\n/**\n * @private\n */\nCompositeMaterialProperty.prototype._raiseDefinitionChanged = function () {\n  this._definitionChanged.raiseEvent(this);\n};\nexport default CompositeMaterialProperty;","map":{"version":3,"names":["defined","DeveloperError","Event","JulianDate","CompositeProperty","Property","CompositeMaterialProperty","_definitionChanged","_composite","definitionChanged","addEventListener","prototype","_raiseDefinitionChanged","Object","defineProperties","isConstant","get","intervals","_intervals","getType","time","innerProperty","findDataForIntervalContainingDate","undefined","timeScratch","getValue","result","now","equals","other","raiseEvent"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/engine/Source/DataSources/CompositeMaterialProperty.js"],"sourcesContent":["import defined from \"../Core/defined.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport Event from \"../Core/Event.js\";\nimport JulianDate from \"../Core/JulianDate.js\";\nimport CompositeProperty from \"./CompositeProperty.js\";\nimport Property from \"./Property.js\";\n\n/**\n * A {@link CompositeProperty} which is also a {@link MaterialProperty}.\n *\n * @alias CompositeMaterialProperty\n * @constructor\n */\nfunction CompositeMaterialProperty() {\n  this._definitionChanged = new Event();\n  this._composite = new CompositeProperty();\n  this._composite.definitionChanged.addEventListener(\n    CompositeMaterialProperty.prototype._raiseDefinitionChanged,\n    this,\n  );\n}\n\nObject.defineProperties(CompositeMaterialProperty.prototype, {\n  /**\n   * Gets a value indicating if this property is constant.  A property is considered\n   * constant if getValue always returns the same result for the current definition.\n   * @memberof CompositeMaterialProperty.prototype\n   *\n   * @type {boolean}\n   * @readonly\n   */\n  isConstant: {\n    get: function () {\n      return this._composite.isConstant;\n    },\n  },\n  /**\n   * Gets the event that is raised whenever the definition of this property changes.\n   * The definition is changed whenever setValue is called with data different\n   * than the current value.\n   * @memberof CompositeMaterialProperty.prototype\n   *\n   * @type {Event}\n   * @readonly\n   */\n  definitionChanged: {\n    get: function () {\n      return this._definitionChanged;\n    },\n  },\n  /**\n   * Gets the interval collection.\n   * @memberof CompositeMaterialProperty.prototype\n   *\n   * @type {TimeIntervalCollection}\n   */\n  intervals: {\n    get: function () {\n      return this._composite._intervals;\n    },\n  },\n});\n\n/**\n * Gets the {@link Material} type at the provided time.\n *\n * @param {JulianDate} time The time for which to retrieve the type.\n * @returns {string} The type of material.\n */\nCompositeMaterialProperty.prototype.getType = function (time) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(time)) {\n    throw new DeveloperError(\"time is required\");\n  }\n  //>>includeEnd('debug');\n\n  const innerProperty =\n    this._composite._intervals.findDataForIntervalContainingDate(time);\n  if (defined(innerProperty)) {\n    return innerProperty.getType(time);\n  }\n  return undefined;\n};\n\nconst timeScratch = new JulianDate();\n\n/**\n * Gets the value of the property at the provided time.\n *\n * @param {JulianDate} [time=JulianDate.now()] The time for which to retrieve the value. If omitted, the current system time is used.\n * @param {object} [result] The object to store the value into, if omitted, a new instance is created and returned.\n * @returns {object} The modified result parameter or a new instance if the result parameter was not supplied.\n */\nCompositeMaterialProperty.prototype.getValue = function (time, result) {\n  if (!defined(time)) {\n    time = JulianDate.now(timeScratch);\n  }\n\n  const innerProperty =\n    this._composite._intervals.findDataForIntervalContainingDate(time);\n  if (defined(innerProperty)) {\n    return innerProperty.getValue(time, result);\n  }\n  return undefined;\n};\n\n/**\n * Compares this property to the provided property and returns\n * <code>true</code> if they are equal, <code>false</code> otherwise.\n *\n * @param {Property} [other] The other property.\n * @returns {boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\n */\nCompositeMaterialProperty.prototype.equals = function (other) {\n  return (\n    this === other || //\n    (other instanceof CompositeMaterialProperty && //\n      this._composite.equals(other._composite, Property.equals))\n  );\n};\n\n/**\n * @private\n */\nCompositeMaterialProperty.prototype._raiseDefinitionChanged = function () {\n  this._definitionChanged.raiseEvent(this);\n};\nexport default CompositeMaterialProperty;\n"],"mappings":"AAAA,OAAOA,OAAO,MAAM,oBAAoB;AACxC,OAAOC,cAAc,MAAM,2BAA2B;AACtD,OAAOC,KAAK,MAAM,kBAAkB;AACpC,OAAOC,UAAU,MAAM,uBAAuB;AAC9C,OAAOC,iBAAiB,MAAM,wBAAwB;AACtD,OAAOC,QAAQ,MAAM,eAAe;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,yBAAyBA,CAAA,EAAG;EACnC,IAAI,CAACC,kBAAkB,GAAG,IAAIL,KAAK,CAAC,CAAC;EACrC,IAAI,CAACM,UAAU,GAAG,IAAIJ,iBAAiB,CAAC,CAAC;EACzC,IAAI,CAACI,UAAU,CAACC,iBAAiB,CAACC,gBAAgB,CAChDJ,yBAAyB,CAACK,SAAS,CAACC,uBAAuB,EAC3D,IACF,CAAC;AACH;AAEAC,MAAM,CAACC,gBAAgB,CAACR,yBAAyB,CAACK,SAAS,EAAE;EAC3D;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACEI,UAAU,EAAE;IACVC,GAAG,EAAE,SAAAA,CAAA,EAAY;MACf,OAAO,IAAI,CAACR,UAAU,CAACO,UAAU;IACnC;EACF,CAAC;EACD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEN,iBAAiB,EAAE;IACjBO,GAAG,EAAE,SAAAA,CAAA,EAAY;MACf,OAAO,IAAI,CAACT,kBAAkB;IAChC;EACF,CAAC;EACD;AACF;AACA;AACA;AACA;AACA;EACEU,SAAS,EAAE;IACTD,GAAG,EAAE,SAAAA,CAAA,EAAY;MACf,OAAO,IAAI,CAACR,UAAU,CAACU,UAAU;IACnC;EACF;AACF,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACAZ,yBAAyB,CAACK,SAAS,CAACQ,OAAO,GAAG,UAAUC,IAAI,EAAE;EAC5D;EACA,IAAI,CAACpB,OAAO,CAACoB,IAAI,CAAC,EAAE;IAClB,MAAM,IAAInB,cAAc,CAAC,kBAAkB,CAAC;EAC9C;EACA;;EAEA,MAAMoB,aAAa,GACjB,IAAI,CAACb,UAAU,CAACU,UAAU,CAACI,iCAAiC,CAACF,IAAI,CAAC;EACpE,IAAIpB,OAAO,CAACqB,aAAa,CAAC,EAAE;IAC1B,OAAOA,aAAa,CAACF,OAAO,CAACC,IAAI,CAAC;EACpC;EACA,OAAOG,SAAS;AAClB,CAAC;AAED,MAAMC,WAAW,GAAG,IAAIrB,UAAU,CAAC,CAAC;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACAG,yBAAyB,CAACK,SAAS,CAACc,QAAQ,GAAG,UAAUL,IAAI,EAAEM,MAAM,EAAE;EACrE,IAAI,CAAC1B,OAAO,CAACoB,IAAI,CAAC,EAAE;IAClBA,IAAI,GAAGjB,UAAU,CAACwB,GAAG,CAACH,WAAW,CAAC;EACpC;EAEA,MAAMH,aAAa,GACjB,IAAI,CAACb,UAAU,CAACU,UAAU,CAACI,iCAAiC,CAACF,IAAI,CAAC;EACpE,IAAIpB,OAAO,CAACqB,aAAa,CAAC,EAAE;IAC1B,OAAOA,aAAa,CAACI,QAAQ,CAACL,IAAI,EAAEM,MAAM,CAAC;EAC7C;EACA,OAAOH,SAAS;AAClB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACAjB,yBAAyB,CAACK,SAAS,CAACiB,MAAM,GAAG,UAAUC,KAAK,EAAE;EAC5D,OACE,IAAI,KAAKA,KAAK;EAAI;EACjBA,KAAK,YAAYvB,yBAAyB;EAAI;EAC7C,IAAI,CAACE,UAAU,CAACoB,MAAM,CAACC,KAAK,CAACrB,UAAU,EAAEH,QAAQ,CAACuB,MAAM,CAAE;AAEhE,CAAC;;AAED;AACA;AACA;AACAtB,yBAAyB,CAACK,SAAS,CAACC,uBAAuB,GAAG,YAAY;EACxE,IAAI,CAACL,kBAAkB,CAACuB,UAAU,CAAC,IAAI,CAAC;AAC1C,CAAC;AACD,eAAexB,yBAAyB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}