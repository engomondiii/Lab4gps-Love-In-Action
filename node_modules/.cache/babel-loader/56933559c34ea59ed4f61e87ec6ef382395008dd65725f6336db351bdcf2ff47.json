{"ast":null,"code":"const svgNS = \"http://www.w3.org/2000/svg\";\nconst svgClassName = \"cesium-svgPath-svg\";\n\n/**\n * A Knockout binding handler that creates a DOM element for a single SVG path.\n * This binding handler will be registered as cesiumSvgPath.\n *\n * <p>\n * The parameter to this binding is an object with the following properties:\n * </p>\n *\n * <ul>\n * <li>path: The SVG path as a string.</li>\n * <li>width: The width of the SVG path with no transformations applied.</li>\n * <li>height: The height of the SVG path with no transformations applied.</li>\n * <li>css: Optional. A string containing additional CSS classes to apply to the SVG. 'cesium-svgPath-svg' is always applied.</li>\n * </ul>\n *\n * @namespace SvgPathBindingHandler\n *\n * @example\n * // Create an SVG as a child of a div\n * <div data-bind=\"cesiumSvgPath: { path: 'M 100 100 L 300 100 L 200 300 z', width: 28, height: 28 }\"></div>\n *\n * // parameters can be observable from the view model\n * <div data-bind=\"cesiumSvgPath: { path: currentPath, width: currentWidth, height: currentHeight }\"></div>\n *\n * // or the whole object can be observable from the view model\n * <div data-bind=\"cesiumSvgPath: svgPathOptions\"></div>\n */\nconst SvgPathBindingHandler = {\n  /**\n   * @function\n   */\n  register: function (knockout) {\n    knockout.bindingHandlers.cesiumSvgPath = {\n      init: function (element, valueAccessor) {\n        const svg = document.createElementNS(svgNS, \"svg:svg\");\n        svg.setAttribute(\"class\", svgClassName);\n        const pathElement = document.createElementNS(svgNS, \"path\");\n        svg.appendChild(pathElement);\n        knockout.virtualElements.setDomNodeChildren(element, [svg]);\n        knockout.computed({\n          read: function () {\n            const value = knockout.unwrap(valueAccessor());\n            pathElement.setAttribute(\"d\", knockout.unwrap(value.path));\n            const pathWidth = knockout.unwrap(value.width);\n            const pathHeight = knockout.unwrap(value.height);\n            svg.setAttribute(\"width\", pathWidth);\n            svg.setAttribute(\"height\", pathHeight);\n            svg.setAttribute(\"viewBox\", `0 0 ${pathWidth} ${pathHeight}`);\n            if (value.css) {\n              svg.setAttribute(\"class\", `${svgClassName} ${knockout.unwrap(value.css)}`);\n            }\n          },\n          disposeWhenNodeIsRemoved: element\n        });\n        return {\n          controlsDescendantBindings: true\n        };\n      }\n    };\n    knockout.virtualElements.allowedBindings.cesiumSvgPath = true;\n  }\n};\nexport default SvgPathBindingHandler;","map":{"version":3,"names":["svgNS","svgClassName","SvgPathBindingHandler","register","knockout","bindingHandlers","cesiumSvgPath","init","element","valueAccessor","svg","document","createElementNS","setAttribute","pathElement","appendChild","virtualElements","setDomNodeChildren","computed","read","value","unwrap","path","pathWidth","width","pathHeight","height","css","disposeWhenNodeIsRemoved","controlsDescendantBindings","allowedBindings"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/widgets/Source/SvgPathBindingHandler.js"],"sourcesContent":["const svgNS = \"http://www.w3.org/2000/svg\";\nconst svgClassName = \"cesium-svgPath-svg\";\n\n/**\n * A Knockout binding handler that creates a DOM element for a single SVG path.\n * This binding handler will be registered as cesiumSvgPath.\n *\n * <p>\n * The parameter to this binding is an object with the following properties:\n * </p>\n *\n * <ul>\n * <li>path: The SVG path as a string.</li>\n * <li>width: The width of the SVG path with no transformations applied.</li>\n * <li>height: The height of the SVG path with no transformations applied.</li>\n * <li>css: Optional. A string containing additional CSS classes to apply to the SVG. 'cesium-svgPath-svg' is always applied.</li>\n * </ul>\n *\n * @namespace SvgPathBindingHandler\n *\n * @example\n * // Create an SVG as a child of a div\n * <div data-bind=\"cesiumSvgPath: { path: 'M 100 100 L 300 100 L 200 300 z', width: 28, height: 28 }\"></div>\n *\n * // parameters can be observable from the view model\n * <div data-bind=\"cesiumSvgPath: { path: currentPath, width: currentWidth, height: currentHeight }\"></div>\n *\n * // or the whole object can be observable from the view model\n * <div data-bind=\"cesiumSvgPath: svgPathOptions\"></div>\n */\nconst SvgPathBindingHandler = {\n  /**\n   * @function\n   */\n  register: function (knockout) {\n    knockout.bindingHandlers.cesiumSvgPath = {\n      init: function (element, valueAccessor) {\n        const svg = document.createElementNS(svgNS, \"svg:svg\");\n        svg.setAttribute(\"class\", svgClassName);\n\n        const pathElement = document.createElementNS(svgNS, \"path\");\n        svg.appendChild(pathElement);\n\n        knockout.virtualElements.setDomNodeChildren(element, [svg]);\n\n        knockout.computed({\n          read: function () {\n            const value = knockout.unwrap(valueAccessor());\n\n            pathElement.setAttribute(\"d\", knockout.unwrap(value.path));\n\n            const pathWidth = knockout.unwrap(value.width);\n            const pathHeight = knockout.unwrap(value.height);\n\n            svg.setAttribute(\"width\", pathWidth);\n            svg.setAttribute(\"height\", pathHeight);\n            svg.setAttribute(\"viewBox\", `0 0 ${pathWidth} ${pathHeight}`);\n\n            if (value.css) {\n              svg.setAttribute(\n                \"class\",\n                `${svgClassName} ${knockout.unwrap(value.css)}`,\n              );\n            }\n          },\n          disposeWhenNodeIsRemoved: element,\n        });\n\n        return {\n          controlsDescendantBindings: true,\n        };\n      },\n    };\n\n    knockout.virtualElements.allowedBindings.cesiumSvgPath = true;\n  },\n};\nexport default SvgPathBindingHandler;\n"],"mappings":"AAAA,MAAMA,KAAK,GAAG,4BAA4B;AAC1C,MAAMC,YAAY,GAAG,oBAAoB;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,qBAAqB,GAAG;EAC5B;AACF;AACA;EACEC,QAAQ,EAAE,SAAAA,CAAUC,QAAQ,EAAE;IAC5BA,QAAQ,CAACC,eAAe,CAACC,aAAa,GAAG;MACvCC,IAAI,EAAE,SAAAA,CAAUC,OAAO,EAAEC,aAAa,EAAE;QACtC,MAAMC,GAAG,GAAGC,QAAQ,CAACC,eAAe,CAACZ,KAAK,EAAE,SAAS,CAAC;QACtDU,GAAG,CAACG,YAAY,CAAC,OAAO,EAAEZ,YAAY,CAAC;QAEvC,MAAMa,WAAW,GAAGH,QAAQ,CAACC,eAAe,CAACZ,KAAK,EAAE,MAAM,CAAC;QAC3DU,GAAG,CAACK,WAAW,CAACD,WAAW,CAAC;QAE5BV,QAAQ,CAACY,eAAe,CAACC,kBAAkB,CAACT,OAAO,EAAE,CAACE,GAAG,CAAC,CAAC;QAE3DN,QAAQ,CAACc,QAAQ,CAAC;UAChBC,IAAI,EAAE,SAAAA,CAAA,EAAY;YAChB,MAAMC,KAAK,GAAGhB,QAAQ,CAACiB,MAAM,CAACZ,aAAa,CAAC,CAAC,CAAC;YAE9CK,WAAW,CAACD,YAAY,CAAC,GAAG,EAAET,QAAQ,CAACiB,MAAM,CAACD,KAAK,CAACE,IAAI,CAAC,CAAC;YAE1D,MAAMC,SAAS,GAAGnB,QAAQ,CAACiB,MAAM,CAACD,KAAK,CAACI,KAAK,CAAC;YAC9C,MAAMC,UAAU,GAAGrB,QAAQ,CAACiB,MAAM,CAACD,KAAK,CAACM,MAAM,CAAC;YAEhDhB,GAAG,CAACG,YAAY,CAAC,OAAO,EAAEU,SAAS,CAAC;YACpCb,GAAG,CAACG,YAAY,CAAC,QAAQ,EAAEY,UAAU,CAAC;YACtCf,GAAG,CAACG,YAAY,CAAC,SAAS,EAAE,OAAOU,SAAS,IAAIE,UAAU,EAAE,CAAC;YAE7D,IAAIL,KAAK,CAACO,GAAG,EAAE;cACbjB,GAAG,CAACG,YAAY,CACd,OAAO,EACP,GAAGZ,YAAY,IAAIG,QAAQ,CAACiB,MAAM,CAACD,KAAK,CAACO,GAAG,CAAC,EAC/C,CAAC;YACH;UACF,CAAC;UACDC,wBAAwB,EAAEpB;QAC5B,CAAC,CAAC;QAEF,OAAO;UACLqB,0BAA0B,EAAE;QAC9B,CAAC;MACH;IACF,CAAC;IAEDzB,QAAQ,CAACY,eAAe,CAACc,eAAe,CAACxB,aAAa,GAAG,IAAI;EAC/D;AACF,CAAC;AACD,eAAeJ,qBAAqB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}