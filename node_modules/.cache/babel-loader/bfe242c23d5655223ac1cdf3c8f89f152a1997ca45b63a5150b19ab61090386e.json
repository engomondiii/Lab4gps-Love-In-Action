{"ast":null,"code":"import Check from \"../Core/Check.js\";\n\n/**\n * An enum describing the built-in instance attribute semantics.\n *\n * @enum {string}\n *\n * @private\n */\nconst InstanceAttributeSemantic = {\n  /**\n   * Per-instance translation.\n   *\n   * @type {string}\n   * @constant\n   */\n  TRANSLATION: \"TRANSLATION\",\n  /**\n   * Per-instance rotation.\n   *\n   * @type {string}\n   * @constant\n   */\n  ROTATION: \"ROTATION\",\n  /**\n   * Per-instance scale.\n   *\n   * @type {string}\n   * @constant\n   */\n  SCALE: \"SCALE\",\n  /**\n   * Per-instance feature ID.\n   *\n   * @type {string}\n   * @constant\n   */\n  FEATURE_ID: \"_FEATURE_ID\"\n};\n\n/**\n * Gets the instance attribute semantic matching the glTF attribute semantic.\n *\n * @returns {InstanceAttributeSemantic} The instance attribute semantic, or undefined if there is no match.\n *\n * @private\n */\nInstanceAttributeSemantic.fromGltfSemantic = function (gltfSemantic) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.typeOf.string(\"gltfSemantic\", gltfSemantic);\n  //>>includeEnd('debug')\n\n  let semantic = gltfSemantic;\n\n  // Strip the set index from the semantic\n  const setIndexRegex = /^(\\w+)_\\d+$/;\n  const setIndexMatch = setIndexRegex.exec(gltfSemantic);\n  if (setIndexMatch !== null) {\n    semantic = setIndexMatch[1];\n  }\n  switch (semantic) {\n    case \"TRANSLATION\":\n      return InstanceAttributeSemantic.TRANSLATION;\n    case \"ROTATION\":\n      return InstanceAttributeSemantic.ROTATION;\n    case \"SCALE\":\n      return InstanceAttributeSemantic.SCALE;\n    case \"_FEATURE_ID\":\n      return InstanceAttributeSemantic.FEATURE_ID;\n  }\n  return undefined;\n};\nexport default Object.freeze(InstanceAttributeSemantic);","map":{"version":3,"names":["Check","InstanceAttributeSemantic","TRANSLATION","ROTATION","SCALE","FEATURE_ID","fromGltfSemantic","gltfSemantic","typeOf","string","semantic","setIndexRegex","setIndexMatch","exec","undefined","Object","freeze"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/engine/Source/Scene/InstanceAttributeSemantic.js"],"sourcesContent":["import Check from \"../Core/Check.js\";\n\n/**\n * An enum describing the built-in instance attribute semantics.\n *\n * @enum {string}\n *\n * @private\n */\nconst InstanceAttributeSemantic = {\n  /**\n   * Per-instance translation.\n   *\n   * @type {string}\n   * @constant\n   */\n  TRANSLATION: \"TRANSLATION\",\n\n  /**\n   * Per-instance rotation.\n   *\n   * @type {string}\n   * @constant\n   */\n  ROTATION: \"ROTATION\",\n\n  /**\n   * Per-instance scale.\n   *\n   * @type {string}\n   * @constant\n   */\n  SCALE: \"SCALE\",\n\n  /**\n   * Per-instance feature ID.\n   *\n   * @type {string}\n   * @constant\n   */\n  FEATURE_ID: \"_FEATURE_ID\",\n};\n\n/**\n * Gets the instance attribute semantic matching the glTF attribute semantic.\n *\n * @returns {InstanceAttributeSemantic} The instance attribute semantic, or undefined if there is no match.\n *\n * @private\n */\nInstanceAttributeSemantic.fromGltfSemantic = function (gltfSemantic) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.typeOf.string(\"gltfSemantic\", gltfSemantic);\n  //>>includeEnd('debug')\n\n  let semantic = gltfSemantic;\n\n  // Strip the set index from the semantic\n  const setIndexRegex = /^(\\w+)_\\d+$/;\n  const setIndexMatch = setIndexRegex.exec(gltfSemantic);\n  if (setIndexMatch !== null) {\n    semantic = setIndexMatch[1];\n  }\n\n  switch (semantic) {\n    case \"TRANSLATION\":\n      return InstanceAttributeSemantic.TRANSLATION;\n    case \"ROTATION\":\n      return InstanceAttributeSemantic.ROTATION;\n    case \"SCALE\":\n      return InstanceAttributeSemantic.SCALE;\n    case \"_FEATURE_ID\":\n      return InstanceAttributeSemantic.FEATURE_ID;\n  }\n\n  return undefined;\n};\n\nexport default Object.freeze(InstanceAttributeSemantic);\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,kBAAkB;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,yBAAyB,GAAG;EAChC;AACF;AACA;AACA;AACA;AACA;EACEC,WAAW,EAAE,aAAa;EAE1B;AACF;AACA;AACA;AACA;AACA;EACEC,QAAQ,EAAE,UAAU;EAEpB;AACF;AACA;AACA;AACA;AACA;EACEC,KAAK,EAAE,OAAO;EAEd;AACF;AACA;AACA;AACA;AACA;EACEC,UAAU,EAAE;AACd,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACAJ,yBAAyB,CAACK,gBAAgB,GAAG,UAAUC,YAAY,EAAE;EACnE;EACAP,KAAK,CAACQ,MAAM,CAACC,MAAM,CAAC,cAAc,EAAEF,YAAY,CAAC;EACjD;;EAEA,IAAIG,QAAQ,GAAGH,YAAY;;EAE3B;EACA,MAAMI,aAAa,GAAG,aAAa;EACnC,MAAMC,aAAa,GAAGD,aAAa,CAACE,IAAI,CAACN,YAAY,CAAC;EACtD,IAAIK,aAAa,KAAK,IAAI,EAAE;IAC1BF,QAAQ,GAAGE,aAAa,CAAC,CAAC,CAAC;EAC7B;EAEA,QAAQF,QAAQ;IACd,KAAK,aAAa;MAChB,OAAOT,yBAAyB,CAACC,WAAW;IAC9C,KAAK,UAAU;MACb,OAAOD,yBAAyB,CAACE,QAAQ;IAC3C,KAAK,OAAO;MACV,OAAOF,yBAAyB,CAACG,KAAK;IACxC,KAAK,aAAa;MAChB,OAAOH,yBAAyB,CAACI,UAAU;EAC/C;EAEA,OAAOS,SAAS;AAClB,CAAC;AAED,eAAeC,MAAM,CAACC,MAAM,CAACf,yBAAyB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}