{"ast":null,"code":"import Credit from \"../Core/Credit.js\";\nimport defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport Rectangle from \"../Core/Rectangle.js\";\nimport Resource from \"../Core/Resource.js\";\nimport WebMercatorTilingScheme from \"../Core/WebMercatorTilingScheme.js\";\nimport UrlTemplateImageryProvider from \"./UrlTemplateImageryProvider.js\";\nconst defaultCredit = new Credit(\"MapQuest, Open Street Map and contributors, CC-BY-SA\");\n\n/**\n * @typedef {object} OpenStreetMapImageryProvider.ConstructorOptions\n *\n * Initialization options for the OpenStreetMapImageryProvider constructor\n *\n * @property {string} [url='https://tile.openstreetmap.org'] The OpenStreetMap server url.\n * @property {string} [fileExtension='png'] The file extension for images on the server.\n * @property {boolean} [retinaTiles=false] When true, request tiles at the 2x resolution for retina displays.\n * @property {Rectangle} [rectangle=Rectangle.MAX_VALUE] The rectangle of the layer.\n * @property {number} [minimumLevel=0] The minimum level-of-detail supported by the imagery provider.\n * @property {number} [maximumLevel] The maximum level-of-detail supported by the imagery provider, or undefined if there is no limit.\n * @property {Ellipsoid} [ellipsoid] The ellipsoid.  If not specified, the WGS84 ellipsoid is used.\n * @property {Credit|string} [credit='MapQuest, Open Street Map and contributors, CC-BY-SA'] A credit for the data source, which is displayed on the canvas.\n */\n\n/**\n * An imagery provider that provides tiled imagery hosted by OpenStreetMap\n * or another provider of Slippy tiles.  The default url connects to OpenStreetMap's volunteer-run\n * servers, so you must conform to their\n * {@link http://wiki.openstreetmap.org/wiki/Tile_usage_policy|Tile Usage Policy}.\n *\n * @alias OpenStreetMapImageryProvider\n * @constructor\n * @extends UrlTemplateImageryProvider\n *\n * @param {OpenStreetMapImageryProvider.ConstructorOptions} options Object describing initialization options\n * @exception {DeveloperError} The rectangle and minimumLevel indicate that there are more than four tiles at the minimum level. Imagery providers with more than four tiles at the minimum level are not supported.\n *\n * @see ArcGisMapServerImageryProvider\n * @see BingMapsImageryProvider\n * @see GoogleEarthEnterpriseMapsProvider\n * @see SingleTileImageryProvider\n * @see TileMapServiceImageryProvider\n * @see WebMapServiceImageryProvider\n * @see WebMapTileServiceImageryProvider\n * @see UrlTemplateImageryProvider\n *\n * @example\n * const osm = new Cesium.OpenStreetMapImageryProvider({\n *     url : 'https://tile.openstreetmap.org/'\n * });\n *\n * @see {@link http://wiki.openstreetmap.org/wiki/Main_Page|OpenStreetMap Wiki}\n * @see {@link http://www.w3.org/TR/cors/|Cross-Origin Resource Sharing}\n */\nfunction OpenStreetMapImageryProvider(options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n  const resource = Resource.createIfNeeded(defaultValue(options.url, \"https://tile.openstreetmap.org/\"));\n  resource.appendForwardSlash();\n  resource.url += `{z}/{x}/{y}${options.retinaTiles ? \"@2x\" : \"\"}.${defaultValue(options.fileExtension, \"png\")}`;\n  const tilingScheme = new WebMercatorTilingScheme({\n    ellipsoid: options.ellipsoid\n  });\n  const tileWidth = 256;\n  const tileHeight = 256;\n  const minimumLevel = defaultValue(options.minimumLevel, 0);\n  const maximumLevel = options.maximumLevel;\n  const rectangle = defaultValue(options.rectangle, tilingScheme.rectangle);\n\n  // Check the number of tiles at the minimum level.  If it's more than four,\n  // throw an exception, because starting at the higher minimum\n  // level will cause too many tiles to be downloaded and rendered.\n  const swTile = tilingScheme.positionToTileXY(Rectangle.southwest(rectangle), minimumLevel);\n  const neTile = tilingScheme.positionToTileXY(Rectangle.northeast(rectangle), minimumLevel);\n  const tileCount = (Math.abs(neTile.x - swTile.x) + 1) * (Math.abs(neTile.y - swTile.y) + 1);\n  //>>includeStart('debug', pragmas.debug);\n  if (tileCount > 4) {\n    throw new DeveloperError(`The rectangle and minimumLevel indicate that there are ${tileCount} tiles at the minimum level. Imagery providers with more than four tiles at the minimum level are not supported.`);\n  }\n  //>>includeEnd('debug');\n\n  let credit = defaultValue(options.credit, defaultCredit);\n  if (typeof credit === \"string\") {\n    credit = new Credit(credit);\n  }\n  UrlTemplateImageryProvider.call(this, {\n    url: resource,\n    credit: credit,\n    tilingScheme: tilingScheme,\n    tileWidth: tileWidth,\n    tileHeight: tileHeight,\n    minimumLevel: minimumLevel,\n    maximumLevel: maximumLevel,\n    rectangle: rectangle\n  });\n}\nif (defined(Object.create)) {\n  OpenStreetMapImageryProvider.prototype = Object.create(UrlTemplateImageryProvider.prototype);\n  OpenStreetMapImageryProvider.prototype.constructor = OpenStreetMapImageryProvider;\n}\nexport default OpenStreetMapImageryProvider;","map":{"version":3,"names":["Credit","defaultValue","defined","DeveloperError","Rectangle","Resource","WebMercatorTilingScheme","UrlTemplateImageryProvider","defaultCredit","OpenStreetMapImageryProvider","options","EMPTY_OBJECT","resource","createIfNeeded","url","appendForwardSlash","retinaTiles","fileExtension","tilingScheme","ellipsoid","tileWidth","tileHeight","minimumLevel","maximumLevel","rectangle","swTile","positionToTileXY","southwest","neTile","northeast","tileCount","Math","abs","x","y","credit","call","Object","create","prototype","constructor"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/engine/Source/Scene/OpenStreetMapImageryProvider.js"],"sourcesContent":["import Credit from \"../Core/Credit.js\";\nimport defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport Rectangle from \"../Core/Rectangle.js\";\nimport Resource from \"../Core/Resource.js\";\nimport WebMercatorTilingScheme from \"../Core/WebMercatorTilingScheme.js\";\nimport UrlTemplateImageryProvider from \"./UrlTemplateImageryProvider.js\";\n\nconst defaultCredit = new Credit(\n  \"MapQuest, Open Street Map and contributors, CC-BY-SA\",\n);\n\n/**\n * @typedef {object} OpenStreetMapImageryProvider.ConstructorOptions\n *\n * Initialization options for the OpenStreetMapImageryProvider constructor\n *\n * @property {string} [url='https://tile.openstreetmap.org'] The OpenStreetMap server url.\n * @property {string} [fileExtension='png'] The file extension for images on the server.\n * @property {boolean} [retinaTiles=false] When true, request tiles at the 2x resolution for retina displays.\n * @property {Rectangle} [rectangle=Rectangle.MAX_VALUE] The rectangle of the layer.\n * @property {number} [minimumLevel=0] The minimum level-of-detail supported by the imagery provider.\n * @property {number} [maximumLevel] The maximum level-of-detail supported by the imagery provider, or undefined if there is no limit.\n * @property {Ellipsoid} [ellipsoid] The ellipsoid.  If not specified, the WGS84 ellipsoid is used.\n * @property {Credit|string} [credit='MapQuest, Open Street Map and contributors, CC-BY-SA'] A credit for the data source, which is displayed on the canvas.\n */\n\n/**\n * An imagery provider that provides tiled imagery hosted by OpenStreetMap\n * or another provider of Slippy tiles.  The default url connects to OpenStreetMap's volunteer-run\n * servers, so you must conform to their\n * {@link http://wiki.openstreetmap.org/wiki/Tile_usage_policy|Tile Usage Policy}.\n *\n * @alias OpenStreetMapImageryProvider\n * @constructor\n * @extends UrlTemplateImageryProvider\n *\n * @param {OpenStreetMapImageryProvider.ConstructorOptions} options Object describing initialization options\n * @exception {DeveloperError} The rectangle and minimumLevel indicate that there are more than four tiles at the minimum level. Imagery providers with more than four tiles at the minimum level are not supported.\n *\n * @see ArcGisMapServerImageryProvider\n * @see BingMapsImageryProvider\n * @see GoogleEarthEnterpriseMapsProvider\n * @see SingleTileImageryProvider\n * @see TileMapServiceImageryProvider\n * @see WebMapServiceImageryProvider\n * @see WebMapTileServiceImageryProvider\n * @see UrlTemplateImageryProvider\n *\n * @example\n * const osm = new Cesium.OpenStreetMapImageryProvider({\n *     url : 'https://tile.openstreetmap.org/'\n * });\n *\n * @see {@link http://wiki.openstreetmap.org/wiki/Main_Page|OpenStreetMap Wiki}\n * @see {@link http://www.w3.org/TR/cors/|Cross-Origin Resource Sharing}\n */\nfunction OpenStreetMapImageryProvider(options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n\n  const resource = Resource.createIfNeeded(\n    defaultValue(options.url, \"https://tile.openstreetmap.org/\"),\n  );\n  resource.appendForwardSlash();\n  resource.url += `{z}/{x}/{y}${\n    options.retinaTiles ? \"@2x\" : \"\"\n  }.${defaultValue(options.fileExtension, \"png\")}`;\n\n  const tilingScheme = new WebMercatorTilingScheme({\n    ellipsoid: options.ellipsoid,\n  });\n\n  const tileWidth = 256;\n  const tileHeight = 256;\n\n  const minimumLevel = defaultValue(options.minimumLevel, 0);\n  const maximumLevel = options.maximumLevel;\n\n  const rectangle = defaultValue(options.rectangle, tilingScheme.rectangle);\n\n  // Check the number of tiles at the minimum level.  If it's more than four,\n  // throw an exception, because starting at the higher minimum\n  // level will cause too many tiles to be downloaded and rendered.\n  const swTile = tilingScheme.positionToTileXY(\n    Rectangle.southwest(rectangle),\n    minimumLevel,\n  );\n  const neTile = tilingScheme.positionToTileXY(\n    Rectangle.northeast(rectangle),\n    minimumLevel,\n  );\n  const tileCount =\n    (Math.abs(neTile.x - swTile.x) + 1) * (Math.abs(neTile.y - swTile.y) + 1);\n  //>>includeStart('debug', pragmas.debug);\n  if (tileCount > 4) {\n    throw new DeveloperError(\n      `The rectangle and minimumLevel indicate that there are ${tileCount} tiles at the minimum level. Imagery providers with more than four tiles at the minimum level are not supported.`,\n    );\n  }\n  //>>includeEnd('debug');\n\n  let credit = defaultValue(options.credit, defaultCredit);\n  if (typeof credit === \"string\") {\n    credit = new Credit(credit);\n  }\n\n  UrlTemplateImageryProvider.call(this, {\n    url: resource,\n    credit: credit,\n    tilingScheme: tilingScheme,\n    tileWidth: tileWidth,\n    tileHeight: tileHeight,\n    minimumLevel: minimumLevel,\n    maximumLevel: maximumLevel,\n    rectangle: rectangle,\n  });\n}\n\nif (defined(Object.create)) {\n  OpenStreetMapImageryProvider.prototype = Object.create(\n    UrlTemplateImageryProvider.prototype,\n  );\n  OpenStreetMapImageryProvider.prototype.constructor =\n    OpenStreetMapImageryProvider;\n}\n\nexport default OpenStreetMapImageryProvider;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}