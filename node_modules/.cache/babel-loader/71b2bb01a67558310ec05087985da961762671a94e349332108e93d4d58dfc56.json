{"ast":null,"code":"import defined from \"../Core/defined.js\";\nimport destroyObject from \"../Core/destroyObject.js\";\nimport Event from \"../Core/Event.js\";\nimport loadKTX2 from \"../Core/loadKTX2.js\";\nimport PixelFormat from \"../Core/PixelFormat.js\";\nimport CubeMap from \"../Renderer/CubeMap.js\";\nimport PixelDatatype from \"../Renderer/PixelDatatype.js\";\nimport Sampler from \"../Renderer/Sampler.js\";\nimport TextureMinificationFilter from \"../Renderer/TextureMinificationFilter.js\";\n\n/**\n * Manages a cube map for use as a specular environment map.\n *\n * @alias SpecularEnvironmentCubeMap\n * @constructor\n *\n * @param {string} url The url to the KTX2 file containing the specular environment map and convoluted mipmaps.\n * @private\n */\nfunction SpecularEnvironmentCubeMap(url) {\n  this._url = url;\n  this._cubeMapBuffers = undefined;\n  this._texture = undefined;\n  this._maximumMipmapLevel = undefined;\n  this._loading = false;\n  this._ready = false;\n  this._errorEvent = new Event();\n}\nObject.defineProperties(SpecularEnvironmentCubeMap.prototype, {\n  /**\n   * The url to the KTX2 file containing the specular environment map and convoluted mipmaps.\n   * @memberof SpecularEnvironmentCubeMap.prototype\n   * @type {string}\n   * @readonly\n   */\n  url: {\n    get: function () {\n      return this._url;\n    }\n  },\n  /**\n   * Gets an event that is raised when encountering an asynchronous error.  By subscribing\n   * to the event, you will be notified of the error and can potentially recover from it.\n   * @memberof SpecularEnvironmentCubeMap.prototype\n   * @type {Event}\n   * @readonly\n   */\n  errorEvent: {\n    get: function () {\n      return this._errorEvent;\n    }\n  },\n  /**\n   * A texture containing all the packed convolutions.\n   * @memberof SpecularEnvironmentCubeMap.prototype\n   * @type {Texture}\n   * @readonly\n   */\n  texture: {\n    get: function () {\n      return this._texture;\n    }\n  },\n  /**\n   * The maximum number of mip levels with valid environment map data.\n   * This may differ from the number of mips in the WebGL cubemap.\n   * The data loaded at <code>maximumMipmapLevel</code> is suitable for\n   * PBR rendering of a material with maximum roughness (1.0).\n   * @memberOf SpecularEnvironmentCubeMap.prototype\n   * @type {number}\n   * @readonly\n   */\n  maximumMipmapLevel: {\n    get: function () {\n      return this._maximumMipmapLevel;\n    }\n  },\n  /**\n   * Determines if the cube map is complete and ready to use.\n   * @memberof SpecularEnvironmentCubeMap.prototype\n   * @type {boolean}\n   * @readonly\n   */\n  ready: {\n    get: function () {\n      return this._ready;\n    }\n  }\n});\nSpecularEnvironmentCubeMap.isSupported = function (context) {\n  const supportsFloatBuffersAndTextures = context.colorBufferHalfFloat && context.halfFloatingPointTexture || context.floatingPointTexture && context.colorBufferFloat;\n  return supportsFloatBuffersAndTextures && context.supportsTextureLod;\n};\nfunction cleanupResources(map) {\n  map._cubeMapBuffers = undefined;\n}\n\n/**\n * Loads the environment map image and constructs the cube map for specular radiance calculations.\n * <p>\n * Once the image is loaded, the next call cleans up unused resources. Every call after that is a no-op.\n * </p>\n * @param {FrameState} frameState The frame state.\n *\n * @private\n */\nSpecularEnvironmentCubeMap.prototype.update = function (frameState) {\n  const {\n    context\n  } = frameState;\n  if (!SpecularEnvironmentCubeMap.isSupported(context)) {\n    return;\n  }\n  if (defined(this._texture)) {\n    cleanupResources(this);\n    return;\n  }\n  if (!defined(this._texture) && !this._loading) {\n    const cachedTexture = context.textureCache.getTexture(this._url);\n    if (defined(cachedTexture)) {\n      cleanupResources(this);\n      this._texture = cachedTexture;\n      this._maximumMipmapLevel = this._texture.maximumMipmapLevel;\n      this._ready = true;\n    }\n  }\n  const cubeMapBuffers = this._cubeMapBuffers;\n  if (!defined(cubeMapBuffers) && !this._loading) {\n    const that = this;\n    loadKTX2(this._url).then(function (buffers) {\n      that._cubeMapBuffers = buffers;\n      that._loading = false;\n    }).catch(function (error) {\n      if (that.isDestroyed()) {\n        return;\n      }\n      that._errorEvent.raiseEvent(error);\n    });\n    this._loading = true;\n  }\n  if (!defined(this._cubeMapBuffers)) {\n    return;\n  }\n\n  // Datatype is defined if it is a normalized type (i.e. ..._UNORM, ..._SFLOAT)\n  let {\n    pixelDatatype\n  } = cubeMapBuffers[0].positiveX;\n  if (!defined(pixelDatatype)) {\n    pixelDatatype = context.halfFloatingPointTexture ? PixelDatatype.HALF_FLOAT : PixelDatatype.FLOAT;\n  }\n  const pixelFormat = PixelFormat.RGBA;\n  const mipLevels = cubeMapBuffers.length;\n  this._maximumMipmapLevel = mipLevels - 1;\n  const faceSize = cubeMapBuffers[0].positiveX.width;\n  const expectedMipLevels = Math.log2(faceSize) + 1;\n  if (mipLevels !== expectedMipLevels) {\n    // We assume the last supplied mip level was computed as the specular radiance\n    // for roughness 1.0.\n    // Fill the remaining levels with null values, to avoid WebGL errors.\n    const dummyMipLevel = {};\n    Object.values(CubeMap.FaceName).forEach(faceName => {\n      dummyMipLevel[faceName] = undefined;\n    });\n    for (let mipLevel = mipLevels; mipLevel < expectedMipLevels; mipLevel++) {\n      cubeMapBuffers.push(dummyMipLevel);\n    }\n  }\n  const sampler = new Sampler({\n    minificationFilter: TextureMinificationFilter.LINEAR_MIPMAP_LINEAR\n  });\n  const cubeMap = new CubeMap({\n    context: context,\n    source: cubeMapBuffers[0],\n    flipY: false,\n    pixelDatatype: pixelDatatype,\n    pixelFormat: pixelFormat,\n    sampler: sampler\n  });\n  cubeMap.loadMipmaps(cubeMapBuffers.slice(1));\n  this._texture = cubeMap;\n  this._texture.maximumMipmapLevel = this._maximumMipmapLevel;\n  context.textureCache.addTexture(this._url, this._texture);\n  this._ready = true;\n};\n\n/**\n * Returns true if this object was destroyed; otherwise, false.\n * <p>\n * If this object was destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.\n * </p>\n *\n * @returns {boolean} <code>true</code> if this object was destroyed; otherwise, <code>false</code>.\n *\n * @see SpecularEnvironmentCubeMap#destroy\n */\nSpecularEnvironmentCubeMap.prototype.isDestroyed = function () {\n  return false;\n};\n\n/**\n * Destroys the WebGL resources held by this object.  Destroying an object allows for deterministic\n * release of WebGL resources, instead of relying on the garbage collector to destroy this object.\n * <p>\n * Once an object is destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.  Therefore,\n * assign the return value (<code>undefined</code>) to the object as done in the example.\n * </p>\n *\n * @exception {DeveloperError} This object was destroyed, i.e., destroy() was called.\n *\n * @see SpecularEnvironmentCubeMap#isDestroyed\n */\nSpecularEnvironmentCubeMap.prototype.destroy = function () {\n  cleanupResources(this);\n  this._texture = this._texture && this._texture.destroy();\n  return destroyObject(this);\n};\nexport default SpecularEnvironmentCubeMap;","map":{"version":3,"names":["defined","destroyObject","Event","loadKTX2","PixelFormat","CubeMap","PixelDatatype","Sampler","TextureMinificationFilter","SpecularEnvironmentCubeMap","url","_url","_cubeMapBuffers","undefined","_texture","_maximumMipmapLevel","_loading","_ready","_errorEvent","Object","defineProperties","prototype","get","errorEvent","texture","maximumMipmapLevel","ready","isSupported","context","supportsFloatBuffersAndTextures","colorBufferHalfFloat","halfFloatingPointTexture","floatingPointTexture","colorBufferFloat","supportsTextureLod","cleanupResources","map","update","frameState","cachedTexture","textureCache","getTexture","cubeMapBuffers","that","then","buffers","catch","error","isDestroyed","raiseEvent","pixelDatatype","positiveX","HALF_FLOAT","FLOAT","pixelFormat","RGBA","mipLevels","length","faceSize","width","expectedMipLevels","Math","log2","dummyMipLevel","values","FaceName","forEach","faceName","mipLevel","push","sampler","minificationFilter","LINEAR_MIPMAP_LINEAR","cubeMap","source","flipY","loadMipmaps","slice","addTexture","destroy"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/engine/Source/Scene/SpecularEnvironmentCubeMap.js"],"sourcesContent":["import defined from \"../Core/defined.js\";\nimport destroyObject from \"../Core/destroyObject.js\";\nimport Event from \"../Core/Event.js\";\nimport loadKTX2 from \"../Core/loadKTX2.js\";\nimport PixelFormat from \"../Core/PixelFormat.js\";\nimport CubeMap from \"../Renderer/CubeMap.js\";\nimport PixelDatatype from \"../Renderer/PixelDatatype.js\";\nimport Sampler from \"../Renderer/Sampler.js\";\nimport TextureMinificationFilter from \"../Renderer/TextureMinificationFilter.js\";\n\n/**\n * Manages a cube map for use as a specular environment map.\n *\n * @alias SpecularEnvironmentCubeMap\n * @constructor\n *\n * @param {string} url The url to the KTX2 file containing the specular environment map and convoluted mipmaps.\n * @private\n */\nfunction SpecularEnvironmentCubeMap(url) {\n  this._url = url;\n\n  this._cubeMapBuffers = undefined;\n  this._texture = undefined;\n\n  this._maximumMipmapLevel = undefined;\n\n  this._loading = false;\n  this._ready = false;\n\n  this._errorEvent = new Event();\n}\n\nObject.defineProperties(SpecularEnvironmentCubeMap.prototype, {\n  /**\n   * The url to the KTX2 file containing the specular environment map and convoluted mipmaps.\n   * @memberof SpecularEnvironmentCubeMap.prototype\n   * @type {string}\n   * @readonly\n   */\n  url: {\n    get: function () {\n      return this._url;\n    },\n  },\n  /**\n   * Gets an event that is raised when encountering an asynchronous error.  By subscribing\n   * to the event, you will be notified of the error and can potentially recover from it.\n   * @memberof SpecularEnvironmentCubeMap.prototype\n   * @type {Event}\n   * @readonly\n   */\n  errorEvent: {\n    get: function () {\n      return this._errorEvent;\n    },\n  },\n  /**\n   * A texture containing all the packed convolutions.\n   * @memberof SpecularEnvironmentCubeMap.prototype\n   * @type {Texture}\n   * @readonly\n   */\n  texture: {\n    get: function () {\n      return this._texture;\n    },\n  },\n  /**\n   * The maximum number of mip levels with valid environment map data.\n   * This may differ from the number of mips in the WebGL cubemap.\n   * The data loaded at <code>maximumMipmapLevel</code> is suitable for\n   * PBR rendering of a material with maximum roughness (1.0).\n   * @memberOf SpecularEnvironmentCubeMap.prototype\n   * @type {number}\n   * @readonly\n   */\n  maximumMipmapLevel: {\n    get: function () {\n      return this._maximumMipmapLevel;\n    },\n  },\n  /**\n   * Determines if the cube map is complete and ready to use.\n   * @memberof SpecularEnvironmentCubeMap.prototype\n   * @type {boolean}\n   * @readonly\n   */\n  ready: {\n    get: function () {\n      return this._ready;\n    },\n  },\n});\n\nSpecularEnvironmentCubeMap.isSupported = function (context) {\n  const supportsFloatBuffersAndTextures =\n    (context.colorBufferHalfFloat && context.halfFloatingPointTexture) ||\n    (context.floatingPointTexture && context.colorBufferFloat);\n  return supportsFloatBuffersAndTextures && context.supportsTextureLod;\n};\n\nfunction cleanupResources(map) {\n  map._cubeMapBuffers = undefined;\n}\n\n/**\n * Loads the environment map image and constructs the cube map for specular radiance calculations.\n * <p>\n * Once the image is loaded, the next call cleans up unused resources. Every call after that is a no-op.\n * </p>\n * @param {FrameState} frameState The frame state.\n *\n * @private\n */\nSpecularEnvironmentCubeMap.prototype.update = function (frameState) {\n  const { context } = frameState;\n\n  if (!SpecularEnvironmentCubeMap.isSupported(context)) {\n    return;\n  }\n\n  if (defined(this._texture)) {\n    cleanupResources(this);\n    return;\n  }\n\n  if (!defined(this._texture) && !this._loading) {\n    const cachedTexture = context.textureCache.getTexture(this._url);\n    if (defined(cachedTexture)) {\n      cleanupResources(this);\n      this._texture = cachedTexture;\n      this._maximumMipmapLevel = this._texture.maximumMipmapLevel;\n      this._ready = true;\n    }\n  }\n\n  const cubeMapBuffers = this._cubeMapBuffers;\n  if (!defined(cubeMapBuffers) && !this._loading) {\n    const that = this;\n    loadKTX2(this._url)\n      .then(function (buffers) {\n        that._cubeMapBuffers = buffers;\n        that._loading = false;\n      })\n      .catch(function (error) {\n        if (that.isDestroyed()) {\n          return;\n        }\n        that._errorEvent.raiseEvent(error);\n      });\n    this._loading = true;\n  }\n\n  if (!defined(this._cubeMapBuffers)) {\n    return;\n  }\n\n  // Datatype is defined if it is a normalized type (i.e. ..._UNORM, ..._SFLOAT)\n  let { pixelDatatype } = cubeMapBuffers[0].positiveX;\n  if (!defined(pixelDatatype)) {\n    pixelDatatype = context.halfFloatingPointTexture\n      ? PixelDatatype.HALF_FLOAT\n      : PixelDatatype.FLOAT;\n  }\n  const pixelFormat = PixelFormat.RGBA;\n\n  const mipLevels = cubeMapBuffers.length;\n  this._maximumMipmapLevel = mipLevels - 1;\n\n  const faceSize = cubeMapBuffers[0].positiveX.width;\n  const expectedMipLevels = Math.log2(faceSize) + 1;\n  if (mipLevels !== expectedMipLevels) {\n    // We assume the last supplied mip level was computed as the specular radiance\n    // for roughness 1.0.\n    // Fill the remaining levels with null values, to avoid WebGL errors.\n    const dummyMipLevel = {};\n    Object.values(CubeMap.FaceName).forEach((faceName) => {\n      dummyMipLevel[faceName] = undefined;\n    });\n    for (let mipLevel = mipLevels; mipLevel < expectedMipLevels; mipLevel++) {\n      cubeMapBuffers.push(dummyMipLevel);\n    }\n  }\n\n  const sampler = new Sampler({\n    minificationFilter: TextureMinificationFilter.LINEAR_MIPMAP_LINEAR,\n  });\n\n  const cubeMap = new CubeMap({\n    context: context,\n    source: cubeMapBuffers[0],\n    flipY: false,\n    pixelDatatype: pixelDatatype,\n    pixelFormat: pixelFormat,\n    sampler: sampler,\n  });\n  cubeMap.loadMipmaps(cubeMapBuffers.slice(1));\n  this._texture = cubeMap;\n\n  this._texture.maximumMipmapLevel = this._maximumMipmapLevel;\n  context.textureCache.addTexture(this._url, this._texture);\n\n  this._ready = true;\n};\n\n/**\n * Returns true if this object was destroyed; otherwise, false.\n * <p>\n * If this object was destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.\n * </p>\n *\n * @returns {boolean} <code>true</code> if this object was destroyed; otherwise, <code>false</code>.\n *\n * @see SpecularEnvironmentCubeMap#destroy\n */\nSpecularEnvironmentCubeMap.prototype.isDestroyed = function () {\n  return false;\n};\n\n/**\n * Destroys the WebGL resources held by this object.  Destroying an object allows for deterministic\n * release of WebGL resources, instead of relying on the garbage collector to destroy this object.\n * <p>\n * Once an object is destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.  Therefore,\n * assign the return value (<code>undefined</code>) to the object as done in the example.\n * </p>\n *\n * @exception {DeveloperError} This object was destroyed, i.e., destroy() was called.\n *\n * @see SpecularEnvironmentCubeMap#isDestroyed\n */\nSpecularEnvironmentCubeMap.prototype.destroy = function () {\n  cleanupResources(this);\n  this._texture = this._texture && this._texture.destroy();\n  return destroyObject(this);\n};\nexport default SpecularEnvironmentCubeMap;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}