{"ast":null,"code":"import DeveloperError from \"./DeveloperError.js\";\nimport CesiumMath from \"./Math.js\";\n\n/**\n * Defines functions for 2nd order polynomial functions of one variable with only real coefficients.\n *\n * @namespace QuadraticRealPolynomial\n */\nconst QuadraticRealPolynomial = {};\n\n/**\n * Provides the discriminant of the quadratic equation from the supplied coefficients.\n *\n * @param {number} a The coefficient of the 2nd order monomial.\n * @param {number} b The coefficient of the 1st order monomial.\n * @param {number} c The coefficient of the 0th order monomial.\n * @returns {number} The value of the discriminant.\n */\nQuadraticRealPolynomial.computeDiscriminant = function (a, b, c) {\n  //>>includeStart('debug', pragmas.debug);\n  if (typeof a !== \"number\") {\n    throw new DeveloperError(\"a is a required number.\");\n  }\n  if (typeof b !== \"number\") {\n    throw new DeveloperError(\"b is a required number.\");\n  }\n  if (typeof c !== \"number\") {\n    throw new DeveloperError(\"c is a required number.\");\n  }\n  //>>includeEnd('debug');\n\n  const discriminant = b * b - 4.0 * a * c;\n  return discriminant;\n};\nfunction addWithCancellationCheck(left, right, tolerance) {\n  const difference = left + right;\n  if (CesiumMath.sign(left) !== CesiumMath.sign(right) && Math.abs(difference / Math.max(Math.abs(left), Math.abs(right))) < tolerance) {\n    return 0.0;\n  }\n  return difference;\n}\n\n/**\n * Provides the real valued roots of the quadratic polynomial with the provided coefficients.\n *\n * @param {number} a The coefficient of the 2nd order monomial.\n * @param {number} b The coefficient of the 1st order monomial.\n * @param {number} c The coefficient of the 0th order monomial.\n * @returns {number[]} The real valued roots.\n */\nQuadraticRealPolynomial.computeRealRoots = function (a, b, c) {\n  //>>includeStart('debug', pragmas.debug);\n  if (typeof a !== \"number\") {\n    throw new DeveloperError(\"a is a required number.\");\n  }\n  if (typeof b !== \"number\") {\n    throw new DeveloperError(\"b is a required number.\");\n  }\n  if (typeof c !== \"number\") {\n    throw new DeveloperError(\"c is a required number.\");\n  }\n  //>>includeEnd('debug');\n\n  let ratio;\n  if (a === 0.0) {\n    if (b === 0.0) {\n      // Constant function: c = 0.\n      return [];\n    }\n\n    // Linear function: b * x + c = 0.\n    return [-c / b];\n  } else if (b === 0.0) {\n    if (c === 0.0) {\n      // 2nd order monomial: a * x^2 = 0.\n      return [0.0, 0.0];\n    }\n    const cMagnitude = Math.abs(c);\n    const aMagnitude = Math.abs(a);\n    if (cMagnitude < aMagnitude && cMagnitude / aMagnitude < CesiumMath.EPSILON14) {\n      // c ~= 0.0.\n      // 2nd order monomial: a * x^2 = 0.\n      return [0.0, 0.0];\n    } else if (cMagnitude > aMagnitude && aMagnitude / cMagnitude < CesiumMath.EPSILON14) {\n      // a ~= 0.0.\n      // Constant function: c = 0.\n      return [];\n    }\n\n    // a * x^2 + c = 0\n    ratio = -c / a;\n    if (ratio < 0.0) {\n      // Both roots are complex.\n      return [];\n    }\n\n    // Both roots are real.\n    const root = Math.sqrt(ratio);\n    return [-root, root];\n  } else if (c === 0.0) {\n    // a * x^2 + b * x = 0\n    ratio = -b / a;\n    if (ratio < 0.0) {\n      return [ratio, 0.0];\n    }\n    return [0.0, ratio];\n  }\n\n  // a * x^2 + b * x + c = 0\n  const b2 = b * b;\n  const four_ac = 4.0 * a * c;\n  const radicand = addWithCancellationCheck(b2, -four_ac, CesiumMath.EPSILON14);\n  if (radicand < 0.0) {\n    // Both roots are complex.\n    return [];\n  }\n  const q = -0.5 * addWithCancellationCheck(b, CesiumMath.sign(b) * Math.sqrt(radicand), CesiumMath.EPSILON14);\n  if (b > 0.0) {\n    return [q / a, c / q];\n  }\n  return [c / q, q / a];\n};\nexport default QuadraticRealPolynomial;","map":{"version":3,"names":["DeveloperError","CesiumMath","QuadraticRealPolynomial","computeDiscriminant","a","b","c","discriminant","addWithCancellationCheck","left","right","tolerance","difference","sign","Math","abs","max","computeRealRoots","ratio","cMagnitude","aMagnitude","EPSILON14","root","sqrt","b2","four_ac","radicand","q"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/engine/Source/Core/QuadraticRealPolynomial.js"],"sourcesContent":["import DeveloperError from \"./DeveloperError.js\";\nimport CesiumMath from \"./Math.js\";\n\n/**\n * Defines functions for 2nd order polynomial functions of one variable with only real coefficients.\n *\n * @namespace QuadraticRealPolynomial\n */\nconst QuadraticRealPolynomial = {};\n\n/**\n * Provides the discriminant of the quadratic equation from the supplied coefficients.\n *\n * @param {number} a The coefficient of the 2nd order monomial.\n * @param {number} b The coefficient of the 1st order monomial.\n * @param {number} c The coefficient of the 0th order monomial.\n * @returns {number} The value of the discriminant.\n */\nQuadraticRealPolynomial.computeDiscriminant = function (a, b, c) {\n  //>>includeStart('debug', pragmas.debug);\n  if (typeof a !== \"number\") {\n    throw new DeveloperError(\"a is a required number.\");\n  }\n  if (typeof b !== \"number\") {\n    throw new DeveloperError(\"b is a required number.\");\n  }\n  if (typeof c !== \"number\") {\n    throw new DeveloperError(\"c is a required number.\");\n  }\n  //>>includeEnd('debug');\n\n  const discriminant = b * b - 4.0 * a * c;\n  return discriminant;\n};\n\nfunction addWithCancellationCheck(left, right, tolerance) {\n  const difference = left + right;\n  if (\n    CesiumMath.sign(left) !== CesiumMath.sign(right) &&\n    Math.abs(difference / Math.max(Math.abs(left), Math.abs(right))) < tolerance\n  ) {\n    return 0.0;\n  }\n\n  return difference;\n}\n\n/**\n * Provides the real valued roots of the quadratic polynomial with the provided coefficients.\n *\n * @param {number} a The coefficient of the 2nd order monomial.\n * @param {number} b The coefficient of the 1st order monomial.\n * @param {number} c The coefficient of the 0th order monomial.\n * @returns {number[]} The real valued roots.\n */\nQuadraticRealPolynomial.computeRealRoots = function (a, b, c) {\n  //>>includeStart('debug', pragmas.debug);\n  if (typeof a !== \"number\") {\n    throw new DeveloperError(\"a is a required number.\");\n  }\n  if (typeof b !== \"number\") {\n    throw new DeveloperError(\"b is a required number.\");\n  }\n  if (typeof c !== \"number\") {\n    throw new DeveloperError(\"c is a required number.\");\n  }\n  //>>includeEnd('debug');\n\n  let ratio;\n  if (a === 0.0) {\n    if (b === 0.0) {\n      // Constant function: c = 0.\n      return [];\n    }\n\n    // Linear function: b * x + c = 0.\n    return [-c / b];\n  } else if (b === 0.0) {\n    if (c === 0.0) {\n      // 2nd order monomial: a * x^2 = 0.\n      return [0.0, 0.0];\n    }\n\n    const cMagnitude = Math.abs(c);\n    const aMagnitude = Math.abs(a);\n\n    if (\n      cMagnitude < aMagnitude &&\n      cMagnitude / aMagnitude < CesiumMath.EPSILON14\n    ) {\n      // c ~= 0.0.\n      // 2nd order monomial: a * x^2 = 0.\n      return [0.0, 0.0];\n    } else if (\n      cMagnitude > aMagnitude &&\n      aMagnitude / cMagnitude < CesiumMath.EPSILON14\n    ) {\n      // a ~= 0.0.\n      // Constant function: c = 0.\n      return [];\n    }\n\n    // a * x^2 + c = 0\n    ratio = -c / a;\n\n    if (ratio < 0.0) {\n      // Both roots are complex.\n      return [];\n    }\n\n    // Both roots are real.\n    const root = Math.sqrt(ratio);\n    return [-root, root];\n  } else if (c === 0.0) {\n    // a * x^2 + b * x = 0\n    ratio = -b / a;\n    if (ratio < 0.0) {\n      return [ratio, 0.0];\n    }\n\n    return [0.0, ratio];\n  }\n\n  // a * x^2 + b * x + c = 0\n  const b2 = b * b;\n  const four_ac = 4.0 * a * c;\n  const radicand = addWithCancellationCheck(b2, -four_ac, CesiumMath.EPSILON14);\n\n  if (radicand < 0.0) {\n    // Both roots are complex.\n    return [];\n  }\n\n  const q =\n    -0.5 *\n    addWithCancellationCheck(\n      b,\n      CesiumMath.sign(b) * Math.sqrt(radicand),\n      CesiumMath.EPSILON14,\n    );\n  if (b > 0.0) {\n    return [q / a, c / q];\n  }\n\n  return [c / q, q / a];\n};\nexport default QuadraticRealPolynomial;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}