{"ast":null,"code":"import defined from \"../Core/defined.js\";\nimport destroyObject from \"../Core/destroyObject.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport CesiumMath from \"../Core/Math.js\";\nimport Matrix3 from \"../Core/Matrix3.js\";\nimport Quaternion from \"../Core/Quaternion.js\";\n\n/**\n * @private\n */\nfunction DeviceOrientationCameraController(scene) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(scene)) {\n    throw new DeveloperError(\"scene is required.\");\n  }\n  //>>includeEnd('debug');\n\n  this._scene = scene;\n  this._lastAlpha = undefined;\n  this._lastBeta = undefined;\n  this._lastGamma = undefined;\n  this._alpha = undefined;\n  this._beta = undefined;\n  this._gamma = undefined;\n  const that = this;\n  function callback(e) {\n    const alpha = e.alpha;\n    if (!defined(alpha)) {\n      that._alpha = undefined;\n      that._beta = undefined;\n      that._gamma = undefined;\n      return;\n    }\n    that._alpha = CesiumMath.toRadians(alpha);\n    that._beta = CesiumMath.toRadians(e.beta);\n    that._gamma = CesiumMath.toRadians(e.gamma);\n  }\n  window.addEventListener(\"deviceorientation\", callback, false);\n  this._removeListener = function () {\n    window.removeEventListener(\"deviceorientation\", callback, false);\n  };\n}\nconst scratchQuaternion1 = new Quaternion();\nconst scratchQuaternion2 = new Quaternion();\nconst scratchMatrix3 = new Matrix3();\nfunction rotate(camera, alpha, beta, gamma) {\n  const direction = camera.direction;\n  const right = camera.right;\n  const up = camera.up;\n  const bQuat = Quaternion.fromAxisAngle(direction, beta, scratchQuaternion2);\n  const gQuat = Quaternion.fromAxisAngle(right, gamma, scratchQuaternion1);\n  const rotQuat = Quaternion.multiply(gQuat, bQuat, gQuat);\n  const aQuat = Quaternion.fromAxisAngle(up, alpha, scratchQuaternion2);\n  Quaternion.multiply(aQuat, rotQuat, rotQuat);\n  const matrix = Matrix3.fromQuaternion(rotQuat, scratchMatrix3);\n  Matrix3.multiplyByVector(matrix, right, right);\n  Matrix3.multiplyByVector(matrix, up, up);\n  Matrix3.multiplyByVector(matrix, direction, direction);\n}\nDeviceOrientationCameraController.prototype.update = function () {\n  if (!defined(this._alpha)) {\n    return;\n  }\n  if (!defined(this._lastAlpha)) {\n    this._lastAlpha = this._alpha;\n    this._lastBeta = this._beta;\n    this._lastGamma = this._gamma;\n  }\n  const a = this._lastAlpha - this._alpha;\n  const b = this._lastBeta - this._beta;\n  const g = this._lastGamma - this._gamma;\n  rotate(this._scene.camera, -a, b, g);\n  this._lastAlpha = this._alpha;\n  this._lastBeta = this._beta;\n  this._lastGamma = this._gamma;\n};\n\n/**\n * Returns true if this object was destroyed; otherwise, false.\n * <br /><br />\n *\n * @returns {boolean} <code>true</code> if this object was destroyed; otherwise, <code>false</code>.\n */\nDeviceOrientationCameraController.prototype.isDestroyed = function () {\n  return false;\n};\n\n/**\n * Destroys the resources held by this object.  Destroying an object allows for deterministic\n * release of resources, instead of relying on the garbage collector to destroy this object.\n * <br /><br />\n * Once an object is destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.  Therefore,\n * assign the return value (<code>undefined</code>) to the object as done in the example.\n *\n * @exception {DeveloperError} This object was destroyed, i.e., destroy() was called.\n */\nDeviceOrientationCameraController.prototype.destroy = function () {\n  this._removeListener();\n  return destroyObject(this);\n};\nexport default DeviceOrientationCameraController;","map":{"version":3,"names":["defined","destroyObject","DeveloperError","CesiumMath","Matrix3","Quaternion","DeviceOrientationCameraController","scene","_scene","_lastAlpha","undefined","_lastBeta","_lastGamma","_alpha","_beta","_gamma","that","callback","e","alpha","toRadians","beta","gamma","window","addEventListener","_removeListener","removeEventListener","scratchQuaternion1","scratchQuaternion2","scratchMatrix3","rotate","camera","direction","right","up","bQuat","fromAxisAngle","gQuat","rotQuat","multiply","aQuat","matrix","fromQuaternion","multiplyByVector","prototype","update","a","b","g","isDestroyed","destroy"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/engine/Source/Scene/DeviceOrientationCameraController.js"],"sourcesContent":["import defined from \"../Core/defined.js\";\nimport destroyObject from \"../Core/destroyObject.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport CesiumMath from \"../Core/Math.js\";\nimport Matrix3 from \"../Core/Matrix3.js\";\nimport Quaternion from \"../Core/Quaternion.js\";\n\n/**\n * @private\n */\nfunction DeviceOrientationCameraController(scene) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(scene)) {\n    throw new DeveloperError(\"scene is required.\");\n  }\n  //>>includeEnd('debug');\n\n  this._scene = scene;\n\n  this._lastAlpha = undefined;\n  this._lastBeta = undefined;\n  this._lastGamma = undefined;\n\n  this._alpha = undefined;\n  this._beta = undefined;\n  this._gamma = undefined;\n\n  const that = this;\n\n  function callback(e) {\n    const alpha = e.alpha;\n    if (!defined(alpha)) {\n      that._alpha = undefined;\n      that._beta = undefined;\n      that._gamma = undefined;\n      return;\n    }\n\n    that._alpha = CesiumMath.toRadians(alpha);\n    that._beta = CesiumMath.toRadians(e.beta);\n    that._gamma = CesiumMath.toRadians(e.gamma);\n  }\n\n  window.addEventListener(\"deviceorientation\", callback, false);\n\n  this._removeListener = function () {\n    window.removeEventListener(\"deviceorientation\", callback, false);\n  };\n}\n\nconst scratchQuaternion1 = new Quaternion();\nconst scratchQuaternion2 = new Quaternion();\nconst scratchMatrix3 = new Matrix3();\n\nfunction rotate(camera, alpha, beta, gamma) {\n  const direction = camera.direction;\n  const right = camera.right;\n  const up = camera.up;\n\n  const bQuat = Quaternion.fromAxisAngle(direction, beta, scratchQuaternion2);\n  const gQuat = Quaternion.fromAxisAngle(right, gamma, scratchQuaternion1);\n\n  const rotQuat = Quaternion.multiply(gQuat, bQuat, gQuat);\n\n  const aQuat = Quaternion.fromAxisAngle(up, alpha, scratchQuaternion2);\n  Quaternion.multiply(aQuat, rotQuat, rotQuat);\n\n  const matrix = Matrix3.fromQuaternion(rotQuat, scratchMatrix3);\n  Matrix3.multiplyByVector(matrix, right, right);\n  Matrix3.multiplyByVector(matrix, up, up);\n  Matrix3.multiplyByVector(matrix, direction, direction);\n}\n\nDeviceOrientationCameraController.prototype.update = function () {\n  if (!defined(this._alpha)) {\n    return;\n  }\n\n  if (!defined(this._lastAlpha)) {\n    this._lastAlpha = this._alpha;\n    this._lastBeta = this._beta;\n    this._lastGamma = this._gamma;\n  }\n\n  const a = this._lastAlpha - this._alpha;\n  const b = this._lastBeta - this._beta;\n  const g = this._lastGamma - this._gamma;\n\n  rotate(this._scene.camera, -a, b, g);\n\n  this._lastAlpha = this._alpha;\n  this._lastBeta = this._beta;\n  this._lastGamma = this._gamma;\n};\n\n/**\n * Returns true if this object was destroyed; otherwise, false.\n * <br /><br />\n *\n * @returns {boolean} <code>true</code> if this object was destroyed; otherwise, <code>false</code>.\n */\nDeviceOrientationCameraController.prototype.isDestroyed = function () {\n  return false;\n};\n\n/**\n * Destroys the resources held by this object.  Destroying an object allows for deterministic\n * release of resources, instead of relying on the garbage collector to destroy this object.\n * <br /><br />\n * Once an object is destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.  Therefore,\n * assign the return value (<code>undefined</code>) to the object as done in the example.\n *\n * @exception {DeveloperError} This object was destroyed, i.e., destroy() was called.\n */\nDeviceOrientationCameraController.prototype.destroy = function () {\n  this._removeListener();\n  return destroyObject(this);\n};\nexport default DeviceOrientationCameraController;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}