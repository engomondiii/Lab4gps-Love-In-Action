{"ast":null,"code":"import Check from \"./Check.js\";\nimport defined from \"./defined.js\";\n\n/**\n * A generic utility class for managing subscribers for a particular event.\n * This class is usually instantiated inside of a container class and\n * exposed as a property for others to subscribe to.\n *\n * @alias Event\n * @template Listener extends (...args: any[]) => void = (...args: any[]) => void\n * @constructor\n * @example\n * MyObject.prototype.myListener = function(arg1, arg2) {\n *     this.myArg1Copy = arg1;\n *     this.myArg2Copy = arg2;\n * }\n *\n * const myObjectInstance = new MyObject();\n * const evt = new Cesium.Event();\n * evt.addEventListener(MyObject.prototype.myListener, myObjectInstance);\n * evt.raiseEvent('1', '2');\n * evt.removeEventListener(MyObject.prototype.myListener);\n */\nfunction Event() {\n  this._listeners = [];\n  this._scopes = [];\n  this._toRemove = [];\n  this._insideRaiseEvent = false;\n}\nObject.defineProperties(Event.prototype, {\n  /**\n   * The number of listeners currently subscribed to the event.\n   * @memberof Event.prototype\n   * @type {number}\n   * @readonly\n   */\n  numberOfListeners: {\n    get: function () {\n      return this._listeners.length - this._toRemove.length;\n    }\n  }\n});\n\n/**\n * Registers a callback function to be executed whenever the event is raised.\n * An optional scope can be provided to serve as the <code>this</code> pointer\n * in which the function will execute.\n *\n * @param {Listener} listener The function to be executed when the event is raised.\n * @param {object} [scope] An optional object scope to serve as the <code>this</code>\n *        pointer in which the listener function will execute.\n * @returns {Event.RemoveCallback} A function that will remove this event listener when invoked.\n *\n * @see Event#raiseEvent\n * @see Event#removeEventListener\n */\nEvent.prototype.addEventListener = function (listener, scope) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.typeOf.func(\"listener\", listener);\n  //>>includeEnd('debug');\n\n  this._listeners.push(listener);\n  this._scopes.push(scope);\n  const event = this;\n  return function () {\n    event.removeEventListener(listener, scope);\n  };\n};\n\n/**\n * Unregisters a previously registered callback.\n *\n * @param {Listener} listener The function to be unregistered.\n * @param {object} [scope] The scope that was originally passed to addEventListener.\n * @returns {boolean} <code>true</code> if the listener was removed; <code>false</code> if the listener and scope are not registered with the event.\n *\n * @see Event#addEventListener\n * @see Event#raiseEvent\n */\nEvent.prototype.removeEventListener = function (listener, scope) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.typeOf.func(\"listener\", listener);\n  //>>includeEnd('debug');\n\n  const listeners = this._listeners;\n  const scopes = this._scopes;\n  let index = -1;\n  for (let i = 0; i < listeners.length; i++) {\n    if (listeners[i] === listener && scopes[i] === scope) {\n      index = i;\n      break;\n    }\n  }\n  if (index !== -1) {\n    if (this._insideRaiseEvent) {\n      //In order to allow removing an event subscription from within\n      //a callback, we don't actually remove the items here.  Instead\n      //remember the index they are at and undefined their value.\n      this._toRemove.push(index);\n      listeners[index] = undefined;\n      scopes[index] = undefined;\n    } else {\n      listeners.splice(index, 1);\n      scopes.splice(index, 1);\n    }\n    return true;\n  }\n  return false;\n};\nfunction compareNumber(a, b) {\n  return b - a;\n}\n\n/**\n * Raises the event by calling each registered listener with all supplied arguments.\n *\n * @param {...Parameters<Listener>} arguments This method takes any number of parameters and passes them through to the listener functions.\n *\n * @see Event#addEventListener\n * @see Event#removeEventListener\n */\nEvent.prototype.raiseEvent = function () {\n  this._insideRaiseEvent = true;\n  let i;\n  const listeners = this._listeners;\n  const scopes = this._scopes;\n  let length = listeners.length;\n  for (i = 0; i < length; i++) {\n    const listener = listeners[i];\n    if (defined(listener)) {\n      listeners[i].apply(scopes[i], arguments);\n    }\n  }\n\n  //Actually remove items removed in removeEventListener.\n  const toRemove = this._toRemove;\n  length = toRemove.length;\n  if (length > 0) {\n    toRemove.sort(compareNumber);\n    for (i = 0; i < length; i++) {\n      const index = toRemove[i];\n      listeners.splice(index, 1);\n      scopes.splice(index, 1);\n    }\n    toRemove.length = 0;\n  }\n  this._insideRaiseEvent = false;\n};\n\n/**\n * A function that removes a listener.\n * @callback Event.RemoveCallback\n */\n\nexport default Event;","map":{"version":3,"names":["Check","defined","Event","_listeners","_scopes","_toRemove","_insideRaiseEvent","Object","defineProperties","prototype","numberOfListeners","get","length","addEventListener","listener","scope","typeOf","func","push","event","removeEventListener","listeners","scopes","index","i","undefined","splice","compareNumber","a","b","raiseEvent","apply","arguments","toRemove","sort"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/engine/Source/Core/Event.js"],"sourcesContent":["import Check from \"./Check.js\";\nimport defined from \"./defined.js\";\n\n/**\n * A generic utility class for managing subscribers for a particular event.\n * This class is usually instantiated inside of a container class and\n * exposed as a property for others to subscribe to.\n *\n * @alias Event\n * @template Listener extends (...args: any[]) => void = (...args: any[]) => void\n * @constructor\n * @example\n * MyObject.prototype.myListener = function(arg1, arg2) {\n *     this.myArg1Copy = arg1;\n *     this.myArg2Copy = arg2;\n * }\n *\n * const myObjectInstance = new MyObject();\n * const evt = new Cesium.Event();\n * evt.addEventListener(MyObject.prototype.myListener, myObjectInstance);\n * evt.raiseEvent('1', '2');\n * evt.removeEventListener(MyObject.prototype.myListener);\n */\nfunction Event() {\n  this._listeners = [];\n  this._scopes = [];\n  this._toRemove = [];\n  this._insideRaiseEvent = false;\n}\n\nObject.defineProperties(Event.prototype, {\n  /**\n   * The number of listeners currently subscribed to the event.\n   * @memberof Event.prototype\n   * @type {number}\n   * @readonly\n   */\n  numberOfListeners: {\n    get: function () {\n      return this._listeners.length - this._toRemove.length;\n    },\n  },\n});\n\n/**\n * Registers a callback function to be executed whenever the event is raised.\n * An optional scope can be provided to serve as the <code>this</code> pointer\n * in which the function will execute.\n *\n * @param {Listener} listener The function to be executed when the event is raised.\n * @param {object} [scope] An optional object scope to serve as the <code>this</code>\n *        pointer in which the listener function will execute.\n * @returns {Event.RemoveCallback} A function that will remove this event listener when invoked.\n *\n * @see Event#raiseEvent\n * @see Event#removeEventListener\n */\nEvent.prototype.addEventListener = function (listener, scope) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.typeOf.func(\"listener\", listener);\n  //>>includeEnd('debug');\n\n  this._listeners.push(listener);\n  this._scopes.push(scope);\n\n  const event = this;\n  return function () {\n    event.removeEventListener(listener, scope);\n  };\n};\n\n/**\n * Unregisters a previously registered callback.\n *\n * @param {Listener} listener The function to be unregistered.\n * @param {object} [scope] The scope that was originally passed to addEventListener.\n * @returns {boolean} <code>true</code> if the listener was removed; <code>false</code> if the listener and scope are not registered with the event.\n *\n * @see Event#addEventListener\n * @see Event#raiseEvent\n */\nEvent.prototype.removeEventListener = function (listener, scope) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.typeOf.func(\"listener\", listener);\n  //>>includeEnd('debug');\n\n  const listeners = this._listeners;\n  const scopes = this._scopes;\n\n  let index = -1;\n  for (let i = 0; i < listeners.length; i++) {\n    if (listeners[i] === listener && scopes[i] === scope) {\n      index = i;\n      break;\n    }\n  }\n\n  if (index !== -1) {\n    if (this._insideRaiseEvent) {\n      //In order to allow removing an event subscription from within\n      //a callback, we don't actually remove the items here.  Instead\n      //remember the index they are at and undefined their value.\n      this._toRemove.push(index);\n      listeners[index] = undefined;\n      scopes[index] = undefined;\n    } else {\n      listeners.splice(index, 1);\n      scopes.splice(index, 1);\n    }\n    return true;\n  }\n\n  return false;\n};\n\nfunction compareNumber(a, b) {\n  return b - a;\n}\n\n/**\n * Raises the event by calling each registered listener with all supplied arguments.\n *\n * @param {...Parameters<Listener>} arguments This method takes any number of parameters and passes them through to the listener functions.\n *\n * @see Event#addEventListener\n * @see Event#removeEventListener\n */\nEvent.prototype.raiseEvent = function () {\n  this._insideRaiseEvent = true;\n\n  let i;\n  const listeners = this._listeners;\n  const scopes = this._scopes;\n  let length = listeners.length;\n\n  for (i = 0; i < length; i++) {\n    const listener = listeners[i];\n    if (defined(listener)) {\n      listeners[i].apply(scopes[i], arguments);\n    }\n  }\n\n  //Actually remove items removed in removeEventListener.\n  const toRemove = this._toRemove;\n  length = toRemove.length;\n  if (length > 0) {\n    toRemove.sort(compareNumber);\n    for (i = 0; i < length; i++) {\n      const index = toRemove[i];\n      listeners.splice(index, 1);\n      scopes.splice(index, 1);\n    }\n    toRemove.length = 0;\n  }\n\n  this._insideRaiseEvent = false;\n};\n\n/**\n * A function that removes a listener.\n * @callback Event.RemoveCallback\n */\n\nexport default Event;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}