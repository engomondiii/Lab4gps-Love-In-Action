{"ast":null,"code":"import Check from \"../Core/Check.js\";\n\n/**\n * The state for a 3D Tiles update pass.\n *\n * @private\n * @constructor\n */\nfunction Cesium3DTilePassState(options) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.typeOf.object(\"options\", options);\n  Check.typeOf.number(\"options.pass\", options.pass);\n  //>>includeEnd('debug');\n\n  /**\n   * The pass.\n   *\n   * @type {Cesium3DTilePass}\n   */\n  this.pass = options.pass;\n\n  /**\n   * An array of rendering commands to use instead of {@link FrameState.commandList} for the current pass.\n   *\n   * @type {DrawCommand[]}\n   */\n  this.commandList = options.commandList;\n\n  /**\n   * A camera to use instead of {@link FrameState.camera} for the current pass.\n   *\n   * @type {Camera}\n   */\n  this.camera = options.camera;\n\n  /**\n   * A culling volume to use instead of {@link FrameState.cullingVolume} for the current pass.\n   *\n   * @type {CullingVolume}\n   */\n  this.cullingVolume = options.cullingVolume;\n\n  /**\n   * A read-only property that indicates whether the pass is ready, i.e. all tiles needed by the pass are loaded.\n   *\n   * @type {boolean}\n   * @readonly\n   * @default false\n   */\n  this.ready = false;\n}\nexport default Cesium3DTilePassState;","map":{"version":3,"names":["Check","Cesium3DTilePassState","options","typeOf","object","number","pass","commandList","camera","cullingVolume","ready"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/engine/Source/Scene/Cesium3DTilePassState.js"],"sourcesContent":["import Check from \"../Core/Check.js\";\n\n/**\n * The state for a 3D Tiles update pass.\n *\n * @private\n * @constructor\n */\nfunction Cesium3DTilePassState(options) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.typeOf.object(\"options\", options);\n  Check.typeOf.number(\"options.pass\", options.pass);\n  //>>includeEnd('debug');\n\n  /**\n   * The pass.\n   *\n   * @type {Cesium3DTilePass}\n   */\n  this.pass = options.pass;\n\n  /**\n   * An array of rendering commands to use instead of {@link FrameState.commandList} for the current pass.\n   *\n   * @type {DrawCommand[]}\n   */\n  this.commandList = options.commandList;\n\n  /**\n   * A camera to use instead of {@link FrameState.camera} for the current pass.\n   *\n   * @type {Camera}\n   */\n  this.camera = options.camera;\n\n  /**\n   * A culling volume to use instead of {@link FrameState.cullingVolume} for the current pass.\n   *\n   * @type {CullingVolume}\n   */\n  this.cullingVolume = options.cullingVolume;\n\n  /**\n   * A read-only property that indicates whether the pass is ready, i.e. all tiles needed by the pass are loaded.\n   *\n   * @type {boolean}\n   * @readonly\n   * @default false\n   */\n  this.ready = false;\n}\nexport default Cesium3DTilePassState;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,kBAAkB;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,qBAAqBA,CAACC,OAAO,EAAE;EACtC;EACAF,KAAK,CAACG,MAAM,CAACC,MAAM,CAAC,SAAS,EAAEF,OAAO,CAAC;EACvCF,KAAK,CAACG,MAAM,CAACE,MAAM,CAAC,cAAc,EAAEH,OAAO,CAACI,IAAI,CAAC;EACjD;;EAEA;AACF;AACA;AACA;AACA;EACE,IAAI,CAACA,IAAI,GAAGJ,OAAO,CAACI,IAAI;;EAExB;AACF;AACA;AACA;AACA;EACE,IAAI,CAACC,WAAW,GAAGL,OAAO,CAACK,WAAW;;EAEtC;AACF;AACA;AACA;AACA;EACE,IAAI,CAACC,MAAM,GAAGN,OAAO,CAACM,MAAM;;EAE5B;AACF;AACA;AACA;AACA;EACE,IAAI,CAACC,aAAa,GAAGP,OAAO,CAACO,aAAa;;EAE1C;AACF;AACA;AACA;AACA;AACA;AACA;EACE,IAAI,CAACC,KAAK,GAAG,KAAK;AACpB;AACA,eAAeT,qBAAqB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}