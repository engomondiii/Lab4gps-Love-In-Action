{"ast":null,"code":"import { defaultValue, defined, destroyObject, DeveloperError, FrameRateMonitor } from \"@cesium/engine\";\nimport knockout from \"../ThirdParty/knockout.js\";\nimport createCommand from \"../createCommand.js\";\n\n/**\n * The view model for {@link PerformanceWatchdog}.\n *\n * @alias PerformanceWatchdogViewModel\n * @constructor\n *\n * @param {object} [options] Object with the following properties:\n * @param {Scene} options.scene The Scene instance for which to monitor performance.\n * @param {string} [options.lowFrameRateMessage='This application appears to be performing poorly on your system.  Please try using a different web browser or updating your video drivers.'] The\n *        message to display when a low frame rate is detected.  The message is interpeted as HTML, so make sure\n *        it comes from a trusted source so that your application is not vulnerable to cross-site scripting attacks.\n */\nfunction PerformanceWatchdogViewModel(options) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(options) || !defined(options.scene)) {\n    throw new DeveloperError(\"options.scene is required.\");\n  }\n  //>>includeEnd('debug');\n\n  this._scene = options.scene;\n\n  /**\n   * Gets or sets the message to display when a low frame rate is detected.  This string will be interpreted as HTML.\n   * @type {string}\n   */\n  this.lowFrameRateMessage = defaultValue(options.lowFrameRateMessage, \"This application appears to be performing poorly on your system.  Please try using a different web browser or updating your video drivers.\");\n\n  /**\n   * Gets or sets a value indicating whether the low frame rate message has previously been dismissed by the user.  If it has\n   * been dismissed, the message will not be redisplayed, no matter the frame rate.\n   * @type {boolean}\n   */\n  this.lowFrameRateMessageDismissed = false;\n\n  /**\n   * Gets or sets a value indicating whether the low frame rate message is currently being displayed.\n   * @type {boolean}\n   */\n  this.showingLowFrameRateMessage = false;\n  knockout.track(this, [\"lowFrameRateMessage\", \"lowFrameRateMessageDismissed\", \"showingLowFrameRateMessage\"]);\n  const that = this;\n  this._dismissMessage = createCommand(function () {\n    that.showingLowFrameRateMessage = false;\n    that.lowFrameRateMessageDismissed = true;\n  });\n  const monitor = FrameRateMonitor.fromScene(options.scene);\n  this._unsubscribeLowFrameRate = monitor.lowFrameRate.addEventListener(function () {\n    if (!that.lowFrameRateMessageDismissed) {\n      that.showingLowFrameRateMessage = true;\n    }\n  });\n  this._unsubscribeNominalFrameRate = monitor.nominalFrameRate.addEventListener(function () {\n    that.showingLowFrameRateMessage = false;\n  });\n}\nObject.defineProperties(PerformanceWatchdogViewModel.prototype, {\n  /**\n   * Gets the {@link Scene} instance for which to monitor performance.\n   * @memberof PerformanceWatchdogViewModel.prototype\n   * @type {Scene}\n   */\n  scene: {\n    get: function () {\n      return this._scene;\n    }\n  },\n  /**\n   * Gets a command that dismisses the low frame rate message.  Once it is dismissed, the message\n   * will not be redisplayed.\n   * @memberof PerformanceWatchdogViewModel.prototype\n   * @type {Command}\n   */\n  dismissMessage: {\n    get: function () {\n      return this._dismissMessage;\n    }\n  }\n});\nPerformanceWatchdogViewModel.prototype.destroy = function () {\n  this._unsubscribeLowFrameRate();\n  this._unsubscribeNominalFrameRate();\n  return destroyObject(this);\n};\nexport default PerformanceWatchdogViewModel;","map":{"version":3,"names":["defaultValue","defined","destroyObject","DeveloperError","FrameRateMonitor","knockout","createCommand","PerformanceWatchdogViewModel","options","scene","_scene","lowFrameRateMessage","lowFrameRateMessageDismissed","showingLowFrameRateMessage","track","that","_dismissMessage","monitor","fromScene","_unsubscribeLowFrameRate","lowFrameRate","addEventListener","_unsubscribeNominalFrameRate","nominalFrameRate","Object","defineProperties","prototype","get","dismissMessage","destroy"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/widgets/Source/PerformanceWatchdog/PerformanceWatchdogViewModel.js"],"sourcesContent":["import {\n  defaultValue,\n  defined,\n  destroyObject,\n  DeveloperError,\n  FrameRateMonitor,\n} from \"@cesium/engine\";\nimport knockout from \"../ThirdParty/knockout.js\";\nimport createCommand from \"../createCommand.js\";\n\n/**\n * The view model for {@link PerformanceWatchdog}.\n *\n * @alias PerformanceWatchdogViewModel\n * @constructor\n *\n * @param {object} [options] Object with the following properties:\n * @param {Scene} options.scene The Scene instance for which to monitor performance.\n * @param {string} [options.lowFrameRateMessage='This application appears to be performing poorly on your system.  Please try using a different web browser or updating your video drivers.'] The\n *        message to display when a low frame rate is detected.  The message is interpeted as HTML, so make sure\n *        it comes from a trusted source so that your application is not vulnerable to cross-site scripting attacks.\n */\nfunction PerformanceWatchdogViewModel(options) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(options) || !defined(options.scene)) {\n    throw new DeveloperError(\"options.scene is required.\");\n  }\n  //>>includeEnd('debug');\n\n  this._scene = options.scene;\n\n  /**\n   * Gets or sets the message to display when a low frame rate is detected.  This string will be interpreted as HTML.\n   * @type {string}\n   */\n  this.lowFrameRateMessage = defaultValue(\n    options.lowFrameRateMessage,\n    \"This application appears to be performing poorly on your system.  Please try using a different web browser or updating your video drivers.\",\n  );\n\n  /**\n   * Gets or sets a value indicating whether the low frame rate message has previously been dismissed by the user.  If it has\n   * been dismissed, the message will not be redisplayed, no matter the frame rate.\n   * @type {boolean}\n   */\n  this.lowFrameRateMessageDismissed = false;\n\n  /**\n   * Gets or sets a value indicating whether the low frame rate message is currently being displayed.\n   * @type {boolean}\n   */\n  this.showingLowFrameRateMessage = false;\n\n  knockout.track(this, [\n    \"lowFrameRateMessage\",\n    \"lowFrameRateMessageDismissed\",\n    \"showingLowFrameRateMessage\",\n  ]);\n\n  const that = this;\n  this._dismissMessage = createCommand(function () {\n    that.showingLowFrameRateMessage = false;\n    that.lowFrameRateMessageDismissed = true;\n  });\n\n  const monitor = FrameRateMonitor.fromScene(options.scene);\n\n  this._unsubscribeLowFrameRate = monitor.lowFrameRate.addEventListener(\n    function () {\n      if (!that.lowFrameRateMessageDismissed) {\n        that.showingLowFrameRateMessage = true;\n      }\n    },\n  );\n\n  this._unsubscribeNominalFrameRate = monitor.nominalFrameRate.addEventListener(\n    function () {\n      that.showingLowFrameRateMessage = false;\n    },\n  );\n}\n\nObject.defineProperties(PerformanceWatchdogViewModel.prototype, {\n  /**\n   * Gets the {@link Scene} instance for which to monitor performance.\n   * @memberof PerformanceWatchdogViewModel.prototype\n   * @type {Scene}\n   */\n  scene: {\n    get: function () {\n      return this._scene;\n    },\n  },\n\n  /**\n   * Gets a command that dismisses the low frame rate message.  Once it is dismissed, the message\n   * will not be redisplayed.\n   * @memberof PerformanceWatchdogViewModel.prototype\n   * @type {Command}\n   */\n  dismissMessage: {\n    get: function () {\n      return this._dismissMessage;\n    },\n  },\n});\n\nPerformanceWatchdogViewModel.prototype.destroy = function () {\n  this._unsubscribeLowFrameRate();\n  this._unsubscribeNominalFrameRate();\n\n  return destroyObject(this);\n};\nexport default PerformanceWatchdogViewModel;\n"],"mappings":"AAAA,SACEA,YAAY,EACZC,OAAO,EACPC,aAAa,EACbC,cAAc,EACdC,gBAAgB,QACX,gBAAgB;AACvB,OAAOC,QAAQ,MAAM,2BAA2B;AAChD,OAAOC,aAAa,MAAM,qBAAqB;;AAE/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,4BAA4BA,CAACC,OAAO,EAAE;EAC7C;EACA,IAAI,CAACP,OAAO,CAACO,OAAO,CAAC,IAAI,CAACP,OAAO,CAACO,OAAO,CAACC,KAAK,CAAC,EAAE;IAChD,MAAM,IAAIN,cAAc,CAAC,4BAA4B,CAAC;EACxD;EACA;;EAEA,IAAI,CAACO,MAAM,GAAGF,OAAO,CAACC,KAAK;;EAE3B;AACF;AACA;AACA;EACE,IAAI,CAACE,mBAAmB,GAAGX,YAAY,CACrCQ,OAAO,CAACG,mBAAmB,EAC3B,4IACF,CAAC;;EAED;AACF;AACA;AACA;AACA;EACE,IAAI,CAACC,4BAA4B,GAAG,KAAK;;EAEzC;AACF;AACA;AACA;EACE,IAAI,CAACC,0BAA0B,GAAG,KAAK;EAEvCR,QAAQ,CAACS,KAAK,CAAC,IAAI,EAAE,CACnB,qBAAqB,EACrB,8BAA8B,EAC9B,4BAA4B,CAC7B,CAAC;EAEF,MAAMC,IAAI,GAAG,IAAI;EACjB,IAAI,CAACC,eAAe,GAAGV,aAAa,CAAC,YAAY;IAC/CS,IAAI,CAACF,0BAA0B,GAAG,KAAK;IACvCE,IAAI,CAACH,4BAA4B,GAAG,IAAI;EAC1C,CAAC,CAAC;EAEF,MAAMK,OAAO,GAAGb,gBAAgB,CAACc,SAAS,CAACV,OAAO,CAACC,KAAK,CAAC;EAEzD,IAAI,CAACU,wBAAwB,GAAGF,OAAO,CAACG,YAAY,CAACC,gBAAgB,CACnE,YAAY;IACV,IAAI,CAACN,IAAI,CAACH,4BAA4B,EAAE;MACtCG,IAAI,CAACF,0BAA0B,GAAG,IAAI;IACxC;EACF,CACF,CAAC;EAED,IAAI,CAACS,4BAA4B,GAAGL,OAAO,CAACM,gBAAgB,CAACF,gBAAgB,CAC3E,YAAY;IACVN,IAAI,CAACF,0BAA0B,GAAG,KAAK;EACzC,CACF,CAAC;AACH;AAEAW,MAAM,CAACC,gBAAgB,CAAClB,4BAA4B,CAACmB,SAAS,EAAE;EAC9D;AACF;AACA;AACA;AACA;EACEjB,KAAK,EAAE;IACLkB,GAAG,EAAE,SAAAA,CAAA,EAAY;MACf,OAAO,IAAI,CAACjB,MAAM;IACpB;EACF,CAAC;EAED;AACF;AACA;AACA;AACA;AACA;EACEkB,cAAc,EAAE;IACdD,GAAG,EAAE,SAAAA,CAAA,EAAY;MACf,OAAO,IAAI,CAACX,eAAe;IAC7B;EACF;AACF,CAAC,CAAC;AAEFT,4BAA4B,CAACmB,SAAS,CAACG,OAAO,GAAG,YAAY;EAC3D,IAAI,CAACV,wBAAwB,CAAC,CAAC;EAC/B,IAAI,CAACG,4BAA4B,CAAC,CAAC;EAEnC,OAAOpB,aAAa,CAAC,IAAI,CAAC;AAC5B,CAAC;AACD,eAAeK,4BAA4B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}