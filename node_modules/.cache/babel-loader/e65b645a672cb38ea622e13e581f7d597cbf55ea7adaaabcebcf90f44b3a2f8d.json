{"ast":null,"code":"import CesiumTerrainProvider from \"./CesiumTerrainProvider.js\";\nimport defaultValue from \"./defaultValue.js\";\n\n/**\n * Creates a {@link CesiumTerrainProvider} instance for the {@link https://cesium.com/content/#cesium-world-bathymetry|Cesium World Bathymetry}.\n *\n * @function\n *\n * @param {Object} [options] Object with the following properties:\n * @param {Boolean} [options.requestVertexNormals=false] Flag that indicates if the client should request additional lighting information from the server if available.\n * @returns {Promise<CesiumTerrainProvider>} A promise that resolves to the created CesiumTerrainProvider\n *\n * @see Ion\n *\n * @example\n * // Create Cesium World Bathymetry with default settings\n * try {\n *   const viewer = new Cesium.Viewer(\"cesiumContainer\", {\n *     terrainProvider: await Cesium.createWorldBathymetryAsync();\n *   });\n * } catch (error) {\n *   console.log(error);\n * }\n *\n * @example\n * // Create Cesium World Bathymetry with normals.\n * try {\n *   const viewer1 = new Cesium.Viewer(\"cesiumContainer\", {\n *     terrainProvider: await Cesium.createWorldBathymetryAsync({\n *       requestVertexNormals: true\n *     });\n *   });\n * } catch (error) {\n *   console.log(error);\n * }\n *\n */\nfunction createWorldBathymetryAsync(options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n  return CesiumTerrainProvider.fromIonAssetId(2426648, {\n    requestVertexNormals: defaultValue(options.requestVertexNormals, false)\n  });\n}\nexport default createWorldBathymetryAsync;","map":{"version":3,"names":["CesiumTerrainProvider","defaultValue","createWorldBathymetryAsync","options","EMPTY_OBJECT","fromIonAssetId","requestVertexNormals"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/engine/Source/Core/createWorldBathymetryAsync.js"],"sourcesContent":["import CesiumTerrainProvider from \"./CesiumTerrainProvider.js\";\nimport defaultValue from \"./defaultValue.js\";\n\n/**\n * Creates a {@link CesiumTerrainProvider} instance for the {@link https://cesium.com/content/#cesium-world-bathymetry|Cesium World Bathymetry}.\n *\n * @function\n *\n * @param {Object} [options] Object with the following properties:\n * @param {Boolean} [options.requestVertexNormals=false] Flag that indicates if the client should request additional lighting information from the server if available.\n * @returns {Promise<CesiumTerrainProvider>} A promise that resolves to the created CesiumTerrainProvider\n *\n * @see Ion\n *\n * @example\n * // Create Cesium World Bathymetry with default settings\n * try {\n *   const viewer = new Cesium.Viewer(\"cesiumContainer\", {\n *     terrainProvider: await Cesium.createWorldBathymetryAsync();\n *   });\n * } catch (error) {\n *   console.log(error);\n * }\n *\n * @example\n * // Create Cesium World Bathymetry with normals.\n * try {\n *   const viewer1 = new Cesium.Viewer(\"cesiumContainer\", {\n *     terrainProvider: await Cesium.createWorldBathymetryAsync({\n *       requestVertexNormals: true\n *     });\n *   });\n * } catch (error) {\n *   console.log(error);\n * }\n *\n */\nfunction createWorldBathymetryAsync(options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n\n  return CesiumTerrainProvider.fromIonAssetId(2426648, {\n    requestVertexNormals: defaultValue(options.requestVertexNormals, false),\n  });\n}\nexport default createWorldBathymetryAsync;\n"],"mappings":"AAAA,OAAOA,qBAAqB,MAAM,4BAA4B;AAC9D,OAAOC,YAAY,MAAM,mBAAmB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,0BAA0BA,CAACC,OAAO,EAAE;EAC3CA,OAAO,GAAGF,YAAY,CAACE,OAAO,EAAEF,YAAY,CAACG,YAAY,CAAC;EAE1D,OAAOJ,qBAAqB,CAACK,cAAc,CAAC,OAAO,EAAE;IACnDC,oBAAoB,EAAEL,YAAY,CAACE,OAAO,CAACG,oBAAoB,EAAE,KAAK;EACxE,CAAC,CAAC;AACJ;AACA,eAAeJ,0BAA0B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}