{"ast":null,"code":"import { Cartesian3, Math as CesiumMath, Check, destroyObject, Ellipsoid, getElement, VoxelShapeType } from \"@cesium/engine\";\nimport knockout from \"../ThirdParty/knockout.js\";\nimport InspectorShared from \"../InspectorShared.js\";\nimport VoxelInspectorViewModel from \"./VoxelInspectorViewModel.js\";\n\n/**\n * Inspector widget to aid in debugging voxels\n *\n * @alias VoxelInspector\n * @constructor\n *\n * @param {Element|string} container The DOM element or ID that will contain the widget.\n * @param {Scene} scene the Scene instance to use.\n */\nfunction VoxelInspector(container, scene) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.defined(\"container\", container);\n  Check.typeOf.object(\"scene\", scene);\n  //>>includeEnd('debug');\n\n  container = getElement(container);\n  const element = document.createElement(\"div\");\n  const viewModel = new VoxelInspectorViewModel(scene);\n  this._viewModel = viewModel;\n  this._container = container;\n  this._element = element;\n  const text = document.createElement(\"div\");\n  text.textContent = \"Voxel Inspector\";\n  text.className = \"cesium-cesiumInspector-button\";\n  text.setAttribute(\"data-bind\", \"click: toggleInspector\");\n  element.appendChild(text);\n  element.className = \"cesium-cesiumInspector cesium-VoxelInspector\";\n  element.setAttribute(\"data-bind\", 'css: { \"cesium-cesiumInspector-visible\" : inspectorVisible, \"cesium-cesiumInspector-hidden\" : !inspectorVisible}');\n  container.appendChild(element);\n  const panel = document.createElement(\"div\");\n  panel.className = \"cesium-cesiumInspector-dropDown\";\n  element.appendChild(panel);\n  const createSection = InspectorShared.createSection;\n  const createCheckbox = InspectorShared.createCheckbox;\n  const createRangeInput = InspectorShared.createRangeInput;\n  const createButton = InspectorShared.createButton;\n  const displayPanelContents = createSection(panel, \"Display\", \"displayVisible\", \"toggleDisplay\");\n  const transformPanelContents = createSection(panel, \"Transform\", \"transformVisible\", \"toggleTransform\");\n  const boundsPanelContents = createSection(panel, \"Bounds\", \"boundsVisible\", \"toggleBounds\");\n  const clippingPanelContents = createSection(panel, \"Clipping\", \"clippingVisible\", \"toggleClipping\");\n  const shaderPanelContents = createSection(panel, \"Shader\", \"shaderVisible\", \"toggleShader\");\n\n  // Display\n  displayPanelContents.appendChild(createCheckbox(\"Depth Test\", \"depthTest\"));\n  displayPanelContents.appendChild(createCheckbox(\"Show\", \"show\"));\n  displayPanelContents.appendChild(createCheckbox(\"Disable Update\", \"disableUpdate\"));\n  displayPanelContents.appendChild(createCheckbox(\"Debug Draw\", \"debugDraw\"));\n  displayPanelContents.appendChild(createCheckbox(\"Jitter\", \"jitter\"));\n  displayPanelContents.appendChild(createCheckbox(\"Nearest Sampling\", \"nearestSampling\"));\n  displayPanelContents.appendChild(createRangeInput(\"Screen Space Error\", \"screenSpaceError\", 0, 128));\n  displayPanelContents.appendChild(createRangeInput(\"Step Size\", \"stepSize\", 0.0, 2.0));\n\n  // Transform\n  const maxTrans = 10.0;\n  const maxScale = 10.0;\n  const maxAngle = CesiumMath.PI;\n  transformPanelContents.appendChild(createRangeInput(\"Translation X\", \"translationX\", -maxTrans, +maxTrans));\n  transformPanelContents.appendChild(createRangeInput(\"Translation Y\", \"translationY\", -maxTrans, +maxTrans));\n  transformPanelContents.appendChild(createRangeInput(\"Translation Z\", \"translationZ\", -maxTrans, +maxTrans));\n  transformPanelContents.appendChild(createRangeInput(\"Scale X\", \"scaleX\", 0, +maxScale));\n  transformPanelContents.appendChild(createRangeInput(\"Scale Y\", \"scaleY\", 0, +maxScale));\n  transformPanelContents.appendChild(createRangeInput(\"Scale Z\", \"scaleZ\", 0, +maxScale));\n  transformPanelContents.appendChild(createRangeInput(\"Heading\", \"angleX\", -maxAngle, +maxAngle));\n  transformPanelContents.appendChild(createRangeInput(\"Pitch\", \"angleY\", -maxAngle, +maxAngle));\n  transformPanelContents.appendChild(createRangeInput(\"Roll\", \"angleZ\", -maxAngle, +maxAngle));\n\n  // Bounds\n  const boxMinBounds = VoxelShapeType.getMinBounds(VoxelShapeType.BOX);\n  const boxMaxBounds = VoxelShapeType.getMaxBounds(VoxelShapeType.BOX);\n  const ellipsoidMinBounds = Cartesian3.fromElements(VoxelShapeType.getMinBounds(VoxelShapeType.ELLIPSOID).x, VoxelShapeType.getMinBounds(VoxelShapeType.ELLIPSOID).y, -Ellipsoid.WGS84.maximumRadius, new Cartesian3());\n  const ellipsoidMaxBounds = Cartesian3.fromElements(VoxelShapeType.getMaxBounds(VoxelShapeType.ELLIPSOID).x, VoxelShapeType.getMaxBounds(VoxelShapeType.ELLIPSOID).y, +10000000.0, new Cartesian3());\n  const cylinderMinBounds = VoxelShapeType.getMinBounds(VoxelShapeType.CYLINDER);\n  const cylinderMaxBounds = VoxelShapeType.getMaxBounds(VoxelShapeType.CYLINDER);\n  makeCoordinateRange(\"Max X\", \"Min X\", \"Max Y\", \"Min Y\", \"Max Z\", \"Min Z\", \"boundsBoxMaxX\", \"boundsBoxMinX\", \"boundsBoxMaxY\", \"boundsBoxMinY\", \"boundsBoxMaxZ\", \"boundsBoxMinZ\", boxMinBounds, boxMaxBounds, \"shapeIsBox\", boundsPanelContents);\n  makeCoordinateRange(\"Max Longitude\", \"Min Longitude\", \"Max Latitude\", \"Min Latitude\", \"Max Height\", \"Min Height\", \"boundsEllipsoidMaxLongitude\", \"boundsEllipsoidMinLongitude\", \"boundsEllipsoidMaxLatitude\", \"boundsEllipsoidMinLatitude\", \"boundsEllipsoidMaxHeight\", \"boundsEllipsoidMinHeight\", ellipsoidMinBounds, ellipsoidMaxBounds, \"shapeIsEllipsoid\", boundsPanelContents);\n  makeCoordinateRange(\"Max Radius\", \"Min Radius\", \"Max Height\", \"Min Height\", \"Max Angle\", \"Min Angle\", \"boundsCylinderMaxRadius\", \"boundsCylinderMinRadius\", \"boundsCylinderMaxHeight\", \"boundsCylinderMinHeight\", \"boundsCylinderMaxAngle\", \"boundsCylinderMinAngle\", cylinderMinBounds, cylinderMaxBounds, \"shapeIsCylinder\", boundsPanelContents);\n\n  // Clipping\n  makeCoordinateRange(\"Max X\", \"Min X\", \"Max Y\", \"Min Y\", \"Max Z\", \"Min Z\", \"clippingBoxMaxX\", \"clippingBoxMinX\", \"clippingBoxMaxY\", \"clippingBoxMinY\", \"clippingBoxMaxZ\", \"clippingBoxMinZ\", boxMinBounds, boxMaxBounds, \"shapeIsBox\", clippingPanelContents);\n  makeCoordinateRange(\"Max Longitude\", \"Min Longitude\", \"Max Latitude\", \"Min Latitude\", \"Max Height\", \"Min Height\", \"clippingEllipsoidMaxLongitude\", \"clippingEllipsoidMinLongitude\", \"clippingEllipsoidMaxLatitude\", \"clippingEllipsoidMinLatitude\", \"clippingEllipsoidMaxHeight\", \"clippingEllipsoidMinHeight\", ellipsoidMinBounds, ellipsoidMaxBounds, \"shapeIsEllipsoid\", clippingPanelContents);\n  makeCoordinateRange(\"Max Radius\", \"Min Radius\", \"Max Height\", \"Min Height\", \"Max Angle\", \"Min Angle\", \"clippingCylinderMaxRadius\", \"clippingCylinderMinRadius\", \"clippingCylinderMaxHeight\", \"clippingCylinderMinHeight\", \"clippingCylinderMaxAngle\", \"clippingCylinderMinAngle\", cylinderMinBounds, cylinderMaxBounds, \"shapeIsCylinder\", clippingPanelContents);\n\n  // Shader\n  const shaderPanelEditor = document.createElement(\"div\");\n  shaderPanelContents.appendChild(shaderPanelEditor);\n  const shaderEditor = document.createElement(\"textarea\");\n  shaderEditor.setAttribute(\"data-bind\", \"textInput: shaderString, event: { keydown: shaderEditorKeyPress }\");\n  shaderPanelEditor.className = \"cesium-cesiumInspector-styleEditor\";\n  shaderPanelEditor.appendChild(shaderEditor);\n  const compileShaderButton = createButton(\"Compile (Ctrl+Enter)\", \"compileShader\");\n  shaderPanelEditor.appendChild(compileShaderButton);\n  const compilationText = document.createElement(\"label\");\n  compilationText.style.display = \"block\";\n  compilationText.setAttribute(\"data-bind\", \"text: shaderCompilationMessage, style: {color: shaderCompilationSuccess ? 'green' : 'red'}\");\n  shaderPanelEditor.appendChild(compilationText);\n  knockout.applyBindings(viewModel, element);\n}\nObject.defineProperties(VoxelInspector.prototype, {\n  /**\n   * Gets the parent container.\n   * @memberof VoxelInspector.prototype\n   *\n   * @type {Element}\n   */\n  container: {\n    get: function () {\n      return this._container;\n    }\n  },\n  /**\n   * Gets the view model.\n   * @memberof VoxelInspector.prototype\n   *\n   * @type {VoxelInspectorViewModel}\n   */\n  viewModel: {\n    get: function () {\n      return this._viewModel;\n    }\n  }\n});\n\n/**\n * @returns {boolean} true if the object has been destroyed, false otherwise.\n */\nVoxelInspector.prototype.isDestroyed = function () {\n  return false;\n};\n\n/**\n * Destroys the widget.  Should be called if permanently\n * removing the widget from layout.\n */\nVoxelInspector.prototype.destroy = function () {\n  knockout.cleanNode(this._element);\n  this._container.removeChild(this._element);\n  this.viewModel.destroy();\n  return destroyObject(this);\n};\nfunction makeCoordinateRange(maxXTitle, minXTitle, maxYTitle, minYTitle, maxZTitle, minZTitle, maxXVar, minXVar, maxYVar, minYVar, maxZVar, minZVar, defaultMinBounds, defaultMaxBounds, allowedShape, parentContainer) {\n  const createRangeInput = InspectorShared.createRangeInput;\n  const min = defaultMinBounds;\n  const max = defaultMaxBounds;\n  const boundsElement = parentContainer.appendChild(document.createElement(\"div\"));\n  boundsElement.setAttribute(\"data-bind\", `if: ${allowedShape}`);\n  boundsElement.appendChild(createRangeInput(maxXTitle, maxXVar, min.x, max.x));\n  boundsElement.appendChild(createRangeInput(minXTitle, minXVar, min.x, max.x));\n  boundsElement.appendChild(createRangeInput(maxYTitle, maxYVar, min.y, max.y));\n  boundsElement.appendChild(createRangeInput(minYTitle, minYVar, min.y, max.y));\n  boundsElement.appendChild(createRangeInput(maxZTitle, maxZVar, min.z, max.z));\n  boundsElement.appendChild(createRangeInput(minZTitle, minZVar, min.z, max.z));\n}\nexport default VoxelInspector;","map":{"version":3,"names":["Cartesian3","Math","CesiumMath","Check","destroyObject","Ellipsoid","getElement","VoxelShapeType","knockout","InspectorShared","VoxelInspectorViewModel","VoxelInspector","container","scene","defined","typeOf","object","element","document","createElement","viewModel","_viewModel","_container","_element","text","textContent","className","setAttribute","appendChild","panel","createSection","createCheckbox","createRangeInput","createButton","displayPanelContents","transformPanelContents","boundsPanelContents","clippingPanelContents","shaderPanelContents","maxTrans","maxScale","maxAngle","PI","boxMinBounds","getMinBounds","BOX","boxMaxBounds","getMaxBounds","ellipsoidMinBounds","fromElements","ELLIPSOID","x","y","WGS84","maximumRadius","ellipsoidMaxBounds","cylinderMinBounds","CYLINDER","cylinderMaxBounds","makeCoordinateRange","shaderPanelEditor","shaderEditor","compileShaderButton","compilationText","style","display","applyBindings","Object","defineProperties","prototype","get","isDestroyed","destroy","cleanNode","removeChild","maxXTitle","minXTitle","maxYTitle","minYTitle","maxZTitle","minZTitle","maxXVar","minXVar","maxYVar","minYVar","maxZVar","minZVar","defaultMinBounds","defaultMaxBounds","allowedShape","parentContainer","min","max","boundsElement","z"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/widgets/Source/VoxelInspector/VoxelInspector.js"],"sourcesContent":["import {\n  Cartesian3,\n  Math as CesiumMath,\n  Check,\n  destroyObject,\n  Ellipsoid,\n  getElement,\n  VoxelShapeType,\n} from \"@cesium/engine\";\nimport knockout from \"../ThirdParty/knockout.js\";\nimport InspectorShared from \"../InspectorShared.js\";\nimport VoxelInspectorViewModel from \"./VoxelInspectorViewModel.js\";\n\n/**\n * Inspector widget to aid in debugging voxels\n *\n * @alias VoxelInspector\n * @constructor\n *\n * @param {Element|string} container The DOM element or ID that will contain the widget.\n * @param {Scene} scene the Scene instance to use.\n */\nfunction VoxelInspector(container, scene) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.defined(\"container\", container);\n  Check.typeOf.object(\"scene\", scene);\n  //>>includeEnd('debug');\n\n  container = getElement(container);\n  const element = document.createElement(\"div\");\n  const viewModel = new VoxelInspectorViewModel(scene);\n\n  this._viewModel = viewModel;\n  this._container = container;\n  this._element = element;\n\n  const text = document.createElement(\"div\");\n  text.textContent = \"Voxel Inspector\";\n  text.className = \"cesium-cesiumInspector-button\";\n  text.setAttribute(\"data-bind\", \"click: toggleInspector\");\n  element.appendChild(text);\n  element.className = \"cesium-cesiumInspector cesium-VoxelInspector\";\n  element.setAttribute(\n    \"data-bind\",\n    'css: { \"cesium-cesiumInspector-visible\" : inspectorVisible, \"cesium-cesiumInspector-hidden\" : !inspectorVisible}',\n  );\n  container.appendChild(element);\n\n  const panel = document.createElement(\"div\");\n  panel.className = \"cesium-cesiumInspector-dropDown\";\n  element.appendChild(panel);\n\n  const createSection = InspectorShared.createSection;\n  const createCheckbox = InspectorShared.createCheckbox;\n  const createRangeInput = InspectorShared.createRangeInput;\n  const createButton = InspectorShared.createButton;\n\n  const displayPanelContents = createSection(\n    panel,\n    \"Display\",\n    \"displayVisible\",\n    \"toggleDisplay\",\n  );\n\n  const transformPanelContents = createSection(\n    panel,\n    \"Transform\",\n    \"transformVisible\",\n    \"toggleTransform\",\n  );\n\n  const boundsPanelContents = createSection(\n    panel,\n    \"Bounds\",\n    \"boundsVisible\",\n    \"toggleBounds\",\n  );\n\n  const clippingPanelContents = createSection(\n    panel,\n    \"Clipping\",\n    \"clippingVisible\",\n    \"toggleClipping\",\n  );\n\n  const shaderPanelContents = createSection(\n    panel,\n    \"Shader\",\n    \"shaderVisible\",\n    \"toggleShader\",\n  );\n\n  // Display\n  displayPanelContents.appendChild(createCheckbox(\"Depth Test\", \"depthTest\"));\n  displayPanelContents.appendChild(createCheckbox(\"Show\", \"show\"));\n  displayPanelContents.appendChild(\n    createCheckbox(\"Disable Update\", \"disableUpdate\"),\n  );\n  displayPanelContents.appendChild(createCheckbox(\"Debug Draw\", \"debugDraw\"));\n  displayPanelContents.appendChild(createCheckbox(\"Jitter\", \"jitter\"));\n  displayPanelContents.appendChild(\n    createCheckbox(\"Nearest Sampling\", \"nearestSampling\"),\n  );\n\n  displayPanelContents.appendChild(\n    createRangeInput(\"Screen Space Error\", \"screenSpaceError\", 0, 128),\n  );\n\n  displayPanelContents.appendChild(\n    createRangeInput(\"Step Size\", \"stepSize\", 0.0, 2.0),\n  );\n\n  // Transform\n  const maxTrans = 10.0;\n  const maxScale = 10.0;\n  const maxAngle = CesiumMath.PI;\n\n  transformPanelContents.appendChild(\n    createRangeInput(\"Translation X\", \"translationX\", -maxTrans, +maxTrans),\n  );\n  transformPanelContents.appendChild(\n    createRangeInput(\"Translation Y\", \"translationY\", -maxTrans, +maxTrans),\n  );\n  transformPanelContents.appendChild(\n    createRangeInput(\"Translation Z\", \"translationZ\", -maxTrans, +maxTrans),\n  );\n  transformPanelContents.appendChild(\n    createRangeInput(\"Scale X\", \"scaleX\", 0, +maxScale),\n  );\n  transformPanelContents.appendChild(\n    createRangeInput(\"Scale Y\", \"scaleY\", 0, +maxScale),\n  );\n  transformPanelContents.appendChild(\n    createRangeInput(\"Scale Z\", \"scaleZ\", 0, +maxScale),\n  );\n  transformPanelContents.appendChild(\n    createRangeInput(\"Heading\", \"angleX\", -maxAngle, +maxAngle),\n  );\n  transformPanelContents.appendChild(\n    createRangeInput(\"Pitch\", \"angleY\", -maxAngle, +maxAngle),\n  );\n  transformPanelContents.appendChild(\n    createRangeInput(\"Roll\", \"angleZ\", -maxAngle, +maxAngle),\n  );\n\n  // Bounds\n  const boxMinBounds = VoxelShapeType.getMinBounds(VoxelShapeType.BOX);\n  const boxMaxBounds = VoxelShapeType.getMaxBounds(VoxelShapeType.BOX);\n\n  const ellipsoidMinBounds = Cartesian3.fromElements(\n    VoxelShapeType.getMinBounds(VoxelShapeType.ELLIPSOID).x,\n    VoxelShapeType.getMinBounds(VoxelShapeType.ELLIPSOID).y,\n    -Ellipsoid.WGS84.maximumRadius,\n    new Cartesian3(),\n  );\n  const ellipsoidMaxBounds = Cartesian3.fromElements(\n    VoxelShapeType.getMaxBounds(VoxelShapeType.ELLIPSOID).x,\n    VoxelShapeType.getMaxBounds(VoxelShapeType.ELLIPSOID).y,\n    +10000000.0,\n    new Cartesian3(),\n  );\n\n  const cylinderMinBounds = VoxelShapeType.getMinBounds(\n    VoxelShapeType.CYLINDER,\n  );\n  const cylinderMaxBounds = VoxelShapeType.getMaxBounds(\n    VoxelShapeType.CYLINDER,\n  );\n\n  makeCoordinateRange(\n    \"Max X\",\n    \"Min X\",\n    \"Max Y\",\n    \"Min Y\",\n    \"Max Z\",\n    \"Min Z\",\n    \"boundsBoxMaxX\",\n    \"boundsBoxMinX\",\n    \"boundsBoxMaxY\",\n    \"boundsBoxMinY\",\n    \"boundsBoxMaxZ\",\n    \"boundsBoxMinZ\",\n    boxMinBounds,\n    boxMaxBounds,\n    \"shapeIsBox\",\n    boundsPanelContents,\n  );\n\n  makeCoordinateRange(\n    \"Max Longitude\",\n    \"Min Longitude\",\n    \"Max Latitude\",\n    \"Min Latitude\",\n    \"Max Height\",\n    \"Min Height\",\n    \"boundsEllipsoidMaxLongitude\",\n    \"boundsEllipsoidMinLongitude\",\n    \"boundsEllipsoidMaxLatitude\",\n    \"boundsEllipsoidMinLatitude\",\n    \"boundsEllipsoidMaxHeight\",\n    \"boundsEllipsoidMinHeight\",\n    ellipsoidMinBounds,\n    ellipsoidMaxBounds,\n    \"shapeIsEllipsoid\",\n    boundsPanelContents,\n  );\n\n  makeCoordinateRange(\n    \"Max Radius\",\n    \"Min Radius\",\n    \"Max Height\",\n    \"Min Height\",\n    \"Max Angle\",\n    \"Min Angle\",\n    \"boundsCylinderMaxRadius\",\n    \"boundsCylinderMinRadius\",\n    \"boundsCylinderMaxHeight\",\n    \"boundsCylinderMinHeight\",\n    \"boundsCylinderMaxAngle\",\n    \"boundsCylinderMinAngle\",\n    cylinderMinBounds,\n    cylinderMaxBounds,\n    \"shapeIsCylinder\",\n    boundsPanelContents,\n  );\n\n  // Clipping\n  makeCoordinateRange(\n    \"Max X\",\n    \"Min X\",\n    \"Max Y\",\n    \"Min Y\",\n    \"Max Z\",\n    \"Min Z\",\n    \"clippingBoxMaxX\",\n    \"clippingBoxMinX\",\n    \"clippingBoxMaxY\",\n    \"clippingBoxMinY\",\n    \"clippingBoxMaxZ\",\n    \"clippingBoxMinZ\",\n    boxMinBounds,\n    boxMaxBounds,\n    \"shapeIsBox\",\n    clippingPanelContents,\n  );\n\n  makeCoordinateRange(\n    \"Max Longitude\",\n    \"Min Longitude\",\n    \"Max Latitude\",\n    \"Min Latitude\",\n    \"Max Height\",\n    \"Min Height\",\n    \"clippingEllipsoidMaxLongitude\",\n    \"clippingEllipsoidMinLongitude\",\n    \"clippingEllipsoidMaxLatitude\",\n    \"clippingEllipsoidMinLatitude\",\n    \"clippingEllipsoidMaxHeight\",\n    \"clippingEllipsoidMinHeight\",\n    ellipsoidMinBounds,\n    ellipsoidMaxBounds,\n    \"shapeIsEllipsoid\",\n    clippingPanelContents,\n  );\n\n  makeCoordinateRange(\n    \"Max Radius\",\n    \"Min Radius\",\n    \"Max Height\",\n    \"Min Height\",\n    \"Max Angle\",\n    \"Min Angle\",\n    \"clippingCylinderMaxRadius\",\n    \"clippingCylinderMinRadius\",\n    \"clippingCylinderMaxHeight\",\n    \"clippingCylinderMinHeight\",\n    \"clippingCylinderMaxAngle\",\n    \"clippingCylinderMinAngle\",\n    cylinderMinBounds,\n    cylinderMaxBounds,\n    \"shapeIsCylinder\",\n    clippingPanelContents,\n  );\n\n  // Shader\n  const shaderPanelEditor = document.createElement(\"div\");\n  shaderPanelContents.appendChild(shaderPanelEditor);\n\n  const shaderEditor = document.createElement(\"textarea\");\n  shaderEditor.setAttribute(\n    \"data-bind\",\n    \"textInput: shaderString, event: { keydown: shaderEditorKeyPress }\",\n  );\n  shaderPanelEditor.className = \"cesium-cesiumInspector-styleEditor\";\n  shaderPanelEditor.appendChild(shaderEditor);\n  const compileShaderButton = createButton(\n    \"Compile (Ctrl+Enter)\",\n    \"compileShader\",\n  );\n  shaderPanelEditor.appendChild(compileShaderButton);\n\n  const compilationText = document.createElement(\"label\");\n  compilationText.style.display = \"block\";\n  compilationText.setAttribute(\n    \"data-bind\",\n    \"text: shaderCompilationMessage, style: {color: shaderCompilationSuccess ? 'green' : 'red'}\",\n  );\n  shaderPanelEditor.appendChild(compilationText);\n\n  knockout.applyBindings(viewModel, element);\n}\n\nObject.defineProperties(VoxelInspector.prototype, {\n  /**\n   * Gets the parent container.\n   * @memberof VoxelInspector.prototype\n   *\n   * @type {Element}\n   */\n  container: {\n    get: function () {\n      return this._container;\n    },\n  },\n\n  /**\n   * Gets the view model.\n   * @memberof VoxelInspector.prototype\n   *\n   * @type {VoxelInspectorViewModel}\n   */\n  viewModel: {\n    get: function () {\n      return this._viewModel;\n    },\n  },\n});\n\n/**\n * @returns {boolean} true if the object has been destroyed, false otherwise.\n */\nVoxelInspector.prototype.isDestroyed = function () {\n  return false;\n};\n\n/**\n * Destroys the widget.  Should be called if permanently\n * removing the widget from layout.\n */\nVoxelInspector.prototype.destroy = function () {\n  knockout.cleanNode(this._element);\n  this._container.removeChild(this._element);\n  this.viewModel.destroy();\n\n  return destroyObject(this);\n};\n\nfunction makeCoordinateRange(\n  maxXTitle,\n  minXTitle,\n  maxYTitle,\n  minYTitle,\n  maxZTitle,\n  minZTitle,\n  maxXVar,\n  minXVar,\n  maxYVar,\n  minYVar,\n  maxZVar,\n  minZVar,\n  defaultMinBounds,\n  defaultMaxBounds,\n  allowedShape,\n  parentContainer,\n) {\n  const createRangeInput = InspectorShared.createRangeInput;\n\n  const min = defaultMinBounds;\n  const max = defaultMaxBounds;\n  const boundsElement = parentContainer.appendChild(\n    document.createElement(\"div\"),\n  );\n  boundsElement.setAttribute(\"data-bind\", `if: ${allowedShape}`);\n  boundsElement.appendChild(createRangeInput(maxXTitle, maxXVar, min.x, max.x));\n  boundsElement.appendChild(createRangeInput(minXTitle, minXVar, min.x, max.x));\n  boundsElement.appendChild(createRangeInput(maxYTitle, maxYVar, min.y, max.y));\n  boundsElement.appendChild(createRangeInput(minYTitle, minYVar, min.y, max.y));\n  boundsElement.appendChild(createRangeInput(maxZTitle, maxZVar, min.z, max.z));\n  boundsElement.appendChild(createRangeInput(minZTitle, minZVar, min.z, max.z));\n}\n\nexport default VoxelInspector;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}