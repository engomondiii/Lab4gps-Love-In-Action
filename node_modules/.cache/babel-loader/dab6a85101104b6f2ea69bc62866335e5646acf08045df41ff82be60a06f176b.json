{"ast":null,"code":"import Check from \"../Core/Check.js\";\nimport defined from \"../Core/defined.js\";\nimport destroyObject from \"../Core/destroyObject.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport RuntimeError from \"../Core/RuntimeError.js\";\n\n/**\n * A cache resource.\n * <p>\n * This type describes an interface and is not intended to be instantiated directly.\n * </p>\n *\n * @alias ResourceLoader\n * @constructor\n *\n * @see ResourceCache\n *\n * @private\n */\nfunction ResourceLoader() {}\nObject.defineProperties(ResourceLoader.prototype, {\n  /**\n   * The cache key of the resource.\n   *\n   * @memberof ResourceLoader.prototype\n   *\n   * @type {string}\n   * @readonly\n   * @private\n   */\n  cacheKey: {\n    // eslint-disable-next-line getter-return\n    get: function () {\n      DeveloperError.throwInstantiationError();\n    }\n  }\n});\n\n/**\n * Loads the resource.\n * @returns {Promise<ResourceLoader>} A promise which resolves to the loader when the resource loading is completed.\n * @private\n */\nResourceLoader.prototype.load = function () {\n  DeveloperError.throwInstantiationError();\n};\n\n/**\n * Unloads the resource.\n * @private\n */\nResourceLoader.prototype.unload = function () {};\n\n/**\n * Processes the resource until it becomes ready.\n *\n * @param {FrameState} frameState The frame state.\n * @returns {boolean} true once all resourced are ready.\n * @private\n */\nResourceLoader.prototype.process = function (frameState) {\n  return false;\n};\n\n/**\n * Constructs a {@link RuntimeError} from an errorMessage and an error.\n *\n * @param {string} errorMessage The error message.\n * @param {Error} [error] The error.\n *\n * @returns {RuntimeError} The runtime error.\n * @private\n */\nResourceLoader.prototype.getError = function (errorMessage, error) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.typeOf.string(\"errorMessage\", errorMessage);\n  //>>includeEnd('debug');\n\n  if (defined(error) && defined(error.message)) {\n    errorMessage += `\\n${error.message}`;\n  }\n  const runtimeError = new RuntimeError(errorMessage);\n  if (defined(error)) {\n    runtimeError.stack = `Original stack:\\n${error.stack}\\nHandler stack:\\n${runtimeError.stack}`;\n  }\n  return runtimeError;\n};\n\n/**\n * Returns true if this object was destroyed; otherwise, false.\n * <br /><br />\n * If this object was destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.\n *\n * @returns {boolean} <code>true</code> if this object was destroyed; otherwise, <code>false</code>.\n *\n * @see ResourceLoader#destroy\n * @private\n */\nResourceLoader.prototype.isDestroyed = function () {\n  return false;\n};\n\n/**\n * Destroys the loaded resource.\n * <br /><br />\n * Once an object is destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.  Therefore,\n * assign the return value (<code>undefined</code>) to the object as done in the example.\n *\n * @exception {DeveloperError} This object was destroyed, i.e., destroy() was called.\n *\n * @example\n * resourceLoader = resourceLoader && resourceLoader.destroy();\n *\n * @see ResourceLoader#isDestroyed\n * @private\n */\nResourceLoader.prototype.destroy = function () {\n  this.unload();\n  return destroyObject(this);\n};\nexport default ResourceLoader;","map":{"version":3,"names":["Check","defined","destroyObject","DeveloperError","RuntimeError","ResourceLoader","Object","defineProperties","prototype","cacheKey","get","throwInstantiationError","load","unload","process","frameState","getError","errorMessage","error","typeOf","string","message","runtimeError","stack","isDestroyed","destroy"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/engine/Source/Scene/ResourceLoader.js"],"sourcesContent":["import Check from \"../Core/Check.js\";\nimport defined from \"../Core/defined.js\";\nimport destroyObject from \"../Core/destroyObject.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport RuntimeError from \"../Core/RuntimeError.js\";\n\n/**\n * A cache resource.\n * <p>\n * This type describes an interface and is not intended to be instantiated directly.\n * </p>\n *\n * @alias ResourceLoader\n * @constructor\n *\n * @see ResourceCache\n *\n * @private\n */\nfunction ResourceLoader() {}\n\nObject.defineProperties(ResourceLoader.prototype, {\n  /**\n   * The cache key of the resource.\n   *\n   * @memberof ResourceLoader.prototype\n   *\n   * @type {string}\n   * @readonly\n   * @private\n   */\n  cacheKey: {\n    // eslint-disable-next-line getter-return\n    get: function () {\n      DeveloperError.throwInstantiationError();\n    },\n  },\n});\n\n/**\n * Loads the resource.\n * @returns {Promise<ResourceLoader>} A promise which resolves to the loader when the resource loading is completed.\n * @private\n */\nResourceLoader.prototype.load = function () {\n  DeveloperError.throwInstantiationError();\n};\n\n/**\n * Unloads the resource.\n * @private\n */\nResourceLoader.prototype.unload = function () {};\n\n/**\n * Processes the resource until it becomes ready.\n *\n * @param {FrameState} frameState The frame state.\n * @returns {boolean} true once all resourced are ready.\n * @private\n */\nResourceLoader.prototype.process = function (frameState) {\n  return false;\n};\n\n/**\n * Constructs a {@link RuntimeError} from an errorMessage and an error.\n *\n * @param {string} errorMessage The error message.\n * @param {Error} [error] The error.\n *\n * @returns {RuntimeError} The runtime error.\n * @private\n */\nResourceLoader.prototype.getError = function (errorMessage, error) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.typeOf.string(\"errorMessage\", errorMessage);\n  //>>includeEnd('debug');\n\n  if (defined(error) && defined(error.message)) {\n    errorMessage += `\\n${error.message}`;\n  }\n\n  const runtimeError = new RuntimeError(errorMessage);\n  if (defined(error)) {\n    runtimeError.stack = `Original stack:\\n${error.stack}\\nHandler stack:\\n${runtimeError.stack}`;\n  }\n\n  return runtimeError;\n};\n\n/**\n * Returns true if this object was destroyed; otherwise, false.\n * <br /><br />\n * If this object was destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.\n *\n * @returns {boolean} <code>true</code> if this object was destroyed; otherwise, <code>false</code>.\n *\n * @see ResourceLoader#destroy\n * @private\n */\nResourceLoader.prototype.isDestroyed = function () {\n  return false;\n};\n\n/**\n * Destroys the loaded resource.\n * <br /><br />\n * Once an object is destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.  Therefore,\n * assign the return value (<code>undefined</code>) to the object as done in the example.\n *\n * @exception {DeveloperError} This object was destroyed, i.e., destroy() was called.\n *\n * @example\n * resourceLoader = resourceLoader && resourceLoader.destroy();\n *\n * @see ResourceLoader#isDestroyed\n * @private\n */\nResourceLoader.prototype.destroy = function () {\n  this.unload();\n  return destroyObject(this);\n};\n\nexport default ResourceLoader;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,kBAAkB;AACpC,OAAOC,OAAO,MAAM,oBAAoB;AACxC,OAAOC,aAAa,MAAM,0BAA0B;AACpD,OAAOC,cAAc,MAAM,2BAA2B;AACtD,OAAOC,YAAY,MAAM,yBAAyB;;AAElD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,cAAcA,CAAA,EAAG,CAAC;AAE3BC,MAAM,CAACC,gBAAgB,CAACF,cAAc,CAACG,SAAS,EAAE;EAChD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEC,QAAQ,EAAE;IACR;IACAC,GAAG,EAAE,SAAAA,CAAA,EAAY;MACfP,cAAc,CAACQ,uBAAuB,CAAC,CAAC;IAC1C;EACF;AACF,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACAN,cAAc,CAACG,SAAS,CAACI,IAAI,GAAG,YAAY;EAC1CT,cAAc,CAACQ,uBAAuB,CAAC,CAAC;AAC1C,CAAC;;AAED;AACA;AACA;AACA;AACAN,cAAc,CAACG,SAAS,CAACK,MAAM,GAAG,YAAY,CAAC,CAAC;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA;AACAR,cAAc,CAACG,SAAS,CAACM,OAAO,GAAG,UAAUC,UAAU,EAAE;EACvD,OAAO,KAAK;AACd,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAV,cAAc,CAACG,SAAS,CAACQ,QAAQ,GAAG,UAAUC,YAAY,EAAEC,KAAK,EAAE;EACjE;EACAlB,KAAK,CAACmB,MAAM,CAACC,MAAM,CAAC,cAAc,EAAEH,YAAY,CAAC;EACjD;;EAEA,IAAIhB,OAAO,CAACiB,KAAK,CAAC,IAAIjB,OAAO,CAACiB,KAAK,CAACG,OAAO,CAAC,EAAE;IAC5CJ,YAAY,IAAI,KAAKC,KAAK,CAACG,OAAO,EAAE;EACtC;EAEA,MAAMC,YAAY,GAAG,IAAIlB,YAAY,CAACa,YAAY,CAAC;EACnD,IAAIhB,OAAO,CAACiB,KAAK,CAAC,EAAE;IAClBI,YAAY,CAACC,KAAK,GAAG,oBAAoBL,KAAK,CAACK,KAAK,qBAAqBD,YAAY,CAACC,KAAK,EAAE;EAC/F;EAEA,OAAOD,YAAY;AACrB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAjB,cAAc,CAACG,SAAS,CAACgB,WAAW,GAAG,YAAY;EACjD,OAAO,KAAK;AACd,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAnB,cAAc,CAACG,SAAS,CAACiB,OAAO,GAAG,YAAY;EAC7C,IAAI,CAACZ,MAAM,CAAC,CAAC;EACb,OAAOX,aAAa,CAAC,IAAI,CAAC;AAC5B,CAAC;AAED,eAAeG,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}