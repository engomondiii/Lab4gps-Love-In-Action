{"ast":null,"code":"import Color from \"../Core/Color.js\";\nimport defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport Event from \"../Core/Event.js\";\nimport JulianDate from \"../Core/JulianDate.js\";\nimport createPropertyDescriptor from \"./createPropertyDescriptor.js\";\nimport Property from \"./Property.js\";\nconst defaultColor = Color.WHITE;\nconst defaultGlowPower = 0.25;\nconst defaultTaperPower = 1.0;\n\n/**\n * A {@link MaterialProperty} that maps to polyline glow {@link Material} uniforms.\n * @alias PolylineGlowMaterialProperty\n * @constructor\n *\n * @param {object} [options] Object with the following properties:\n * @param {Property|Color} [options.color=Color.WHITE] A Property specifying the {@link Color} of the line.\n * @param {Property|number} [options.glowPower=0.25] A numeric Property specifying the strength of the glow, as a percentage of the total line width.\n * @param {Property|number} [options.taperPower=1.0] A numeric Property specifying the strength of the tapering effect, as a percentage of the total line length.  If 1.0 or higher, no taper effect is used.\n */\nfunction PolylineGlowMaterialProperty(options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n  this._definitionChanged = new Event();\n  this._color = undefined;\n  this._colorSubscription = undefined;\n  this._glowPower = undefined;\n  this._glowPowerSubscription = undefined;\n  this._taperPower = undefined;\n  this._taperPowerSubscription = undefined;\n  this.color = options.color;\n  this.glowPower = options.glowPower;\n  this.taperPower = options.taperPower;\n}\nObject.defineProperties(PolylineGlowMaterialProperty.prototype, {\n  /**\n   * Gets a value indicating if this property is constant.  A property is considered\n   * constant if getValue always returns the same result for the current definition.\n   * @memberof PolylineGlowMaterialProperty.prototype\n   * @type {boolean}\n   * @readonly\n   */\n  isConstant: {\n    get: function () {\n      return Property.isConstant(this._color) && Property.isConstant(this._glow);\n    }\n  },\n  /**\n   * Gets the event that is raised whenever the definition of this property changes.\n   * The definition is considered to have changed if a call to getValue would return\n   * a different result for the same time.\n   * @memberof PolylineGlowMaterialProperty.prototype\n   * @type {Event}\n   * @readonly\n   */\n  definitionChanged: {\n    get: function () {\n      return this._definitionChanged;\n    }\n  },\n  /**\n   * Gets or sets the Property specifying the {@link Color} of the line.\n   * @memberof PolylineGlowMaterialProperty.prototype\n   * @type {Property|undefined}\n   */\n  color: createPropertyDescriptor(\"color\"),\n  /**\n   * Gets or sets the numeric Property specifying the strength of the glow, as a percentage of the total line width (less than 1.0).\n   * @memberof PolylineGlowMaterialProperty.prototype\n   * @type {Property|undefined}\n   */\n  glowPower: createPropertyDescriptor(\"glowPower\"),\n  /**\n   * Gets or sets the numeric Property specifying the strength of the tapering effect, as a percentage of the total line length.  If 1.0 or higher, no taper effect is used.\n   * @memberof PolylineGlowMaterialProperty.prototype\n   * @type {Property|undefined}\n   */\n  taperPower: createPropertyDescriptor(\"taperPower\")\n});\n\n/**\n * Gets the {@link Material} type at the provided time.\n *\n * @param {JulianDate} time The time for which to retrieve the type.\n * @returns {string} The type of material.\n */\nPolylineGlowMaterialProperty.prototype.getType = function (time) {\n  return \"PolylineGlow\";\n};\nconst timeScratch = new JulianDate();\n\n/**\n * Gets the value of the property at the provided time.\n *\n * @param {JulianDate} [time=JulianDate.now()] The time for which to retrieve the value. If omitted, the current system time is used.\n * @param {object} [result] The object to store the value into, if omitted, a new instance is created and returned.\n * @returns {object} The modified result parameter or a new instance if the result parameter was not supplied.\n */\nPolylineGlowMaterialProperty.prototype.getValue = function (time, result) {\n  if (!defined(time)) {\n    time = JulianDate.now(timeScratch);\n  }\n  if (!defined(result)) {\n    result = {};\n  }\n  result.color = Property.getValueOrClonedDefault(this._color, time, defaultColor, result.color);\n  result.glowPower = Property.getValueOrDefault(this._glowPower, time, defaultGlowPower, result.glowPower);\n  result.taperPower = Property.getValueOrDefault(this._taperPower, time, defaultTaperPower, result.taperPower);\n  return result;\n};\n\n/**\n * Compares this property to the provided property and returns\n * <code>true</code> if they are equal, <code>false</code> otherwise.\n *\n * @param {Property} [other] The other property.\n * @returns {boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\n */\nPolylineGlowMaterialProperty.prototype.equals = function (other) {\n  return this === other || other instanceof PolylineGlowMaterialProperty && Property.equals(this._color, other._color) && Property.equals(this._glowPower, other._glowPower) && Property.equals(this._taperPower, other._taperPower);\n};\nexport default PolylineGlowMaterialProperty;","map":{"version":3,"names":["Color","defaultValue","defined","Event","JulianDate","createPropertyDescriptor","Property","defaultColor","WHITE","defaultGlowPower","defaultTaperPower","PolylineGlowMaterialProperty","options","EMPTY_OBJECT","_definitionChanged","_color","undefined","_colorSubscription","_glowPower","_glowPowerSubscription","_taperPower","_taperPowerSubscription","color","glowPower","taperPower","Object","defineProperties","prototype","isConstant","get","_glow","definitionChanged","getType","time","timeScratch","getValue","result","now","getValueOrClonedDefault","getValueOrDefault","equals","other"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/engine/Source/DataSources/PolylineGlowMaterialProperty.js"],"sourcesContent":["import Color from \"../Core/Color.js\";\nimport defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport Event from \"../Core/Event.js\";\nimport JulianDate from \"../Core/JulianDate.js\";\nimport createPropertyDescriptor from \"./createPropertyDescriptor.js\";\nimport Property from \"./Property.js\";\n\nconst defaultColor = Color.WHITE;\nconst defaultGlowPower = 0.25;\nconst defaultTaperPower = 1.0;\n\n/**\n * A {@link MaterialProperty} that maps to polyline glow {@link Material} uniforms.\n * @alias PolylineGlowMaterialProperty\n * @constructor\n *\n * @param {object} [options] Object with the following properties:\n * @param {Property|Color} [options.color=Color.WHITE] A Property specifying the {@link Color} of the line.\n * @param {Property|number} [options.glowPower=0.25] A numeric Property specifying the strength of the glow, as a percentage of the total line width.\n * @param {Property|number} [options.taperPower=1.0] A numeric Property specifying the strength of the tapering effect, as a percentage of the total line length.  If 1.0 or higher, no taper effect is used.\n */\nfunction PolylineGlowMaterialProperty(options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n\n  this._definitionChanged = new Event();\n  this._color = undefined;\n  this._colorSubscription = undefined;\n  this._glowPower = undefined;\n  this._glowPowerSubscription = undefined;\n  this._taperPower = undefined;\n  this._taperPowerSubscription = undefined;\n\n  this.color = options.color;\n  this.glowPower = options.glowPower;\n  this.taperPower = options.taperPower;\n}\n\nObject.defineProperties(PolylineGlowMaterialProperty.prototype, {\n  /**\n   * Gets a value indicating if this property is constant.  A property is considered\n   * constant if getValue always returns the same result for the current definition.\n   * @memberof PolylineGlowMaterialProperty.prototype\n   * @type {boolean}\n   * @readonly\n   */\n  isConstant: {\n    get: function () {\n      return (\n        Property.isConstant(this._color) && Property.isConstant(this._glow)\n      );\n    },\n  },\n  /**\n   * Gets the event that is raised whenever the definition of this property changes.\n   * The definition is considered to have changed if a call to getValue would return\n   * a different result for the same time.\n   * @memberof PolylineGlowMaterialProperty.prototype\n   * @type {Event}\n   * @readonly\n   */\n  definitionChanged: {\n    get: function () {\n      return this._definitionChanged;\n    },\n  },\n  /**\n   * Gets or sets the Property specifying the {@link Color} of the line.\n   * @memberof PolylineGlowMaterialProperty.prototype\n   * @type {Property|undefined}\n   */\n  color: createPropertyDescriptor(\"color\"),\n\n  /**\n   * Gets or sets the numeric Property specifying the strength of the glow, as a percentage of the total line width (less than 1.0).\n   * @memberof PolylineGlowMaterialProperty.prototype\n   * @type {Property|undefined}\n   */\n  glowPower: createPropertyDescriptor(\"glowPower\"),\n\n  /**\n   * Gets or sets the numeric Property specifying the strength of the tapering effect, as a percentage of the total line length.  If 1.0 or higher, no taper effect is used.\n   * @memberof PolylineGlowMaterialProperty.prototype\n   * @type {Property|undefined}\n   */\n  taperPower: createPropertyDescriptor(\"taperPower\"),\n});\n\n/**\n * Gets the {@link Material} type at the provided time.\n *\n * @param {JulianDate} time The time for which to retrieve the type.\n * @returns {string} The type of material.\n */\nPolylineGlowMaterialProperty.prototype.getType = function (time) {\n  return \"PolylineGlow\";\n};\n\nconst timeScratch = new JulianDate();\n\n/**\n * Gets the value of the property at the provided time.\n *\n * @param {JulianDate} [time=JulianDate.now()] The time for which to retrieve the value. If omitted, the current system time is used.\n * @param {object} [result] The object to store the value into, if omitted, a new instance is created and returned.\n * @returns {object} The modified result parameter or a new instance if the result parameter was not supplied.\n */\nPolylineGlowMaterialProperty.prototype.getValue = function (time, result) {\n  if (!defined(time)) {\n    time = JulianDate.now(timeScratch);\n  }\n  if (!defined(result)) {\n    result = {};\n  }\n  result.color = Property.getValueOrClonedDefault(\n    this._color,\n    time,\n    defaultColor,\n    result.color,\n  );\n  result.glowPower = Property.getValueOrDefault(\n    this._glowPower,\n    time,\n    defaultGlowPower,\n    result.glowPower,\n  );\n  result.taperPower = Property.getValueOrDefault(\n    this._taperPower,\n    time,\n    defaultTaperPower,\n    result.taperPower,\n  );\n  return result;\n};\n\n/**\n * Compares this property to the provided property and returns\n * <code>true</code> if they are equal, <code>false</code> otherwise.\n *\n * @param {Property} [other] The other property.\n * @returns {boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\n */\nPolylineGlowMaterialProperty.prototype.equals = function (other) {\n  return (\n    this === other ||\n    (other instanceof PolylineGlowMaterialProperty &&\n      Property.equals(this._color, other._color) &&\n      Property.equals(this._glowPower, other._glowPower) &&\n      Property.equals(this._taperPower, other._taperPower))\n  );\n};\nexport default PolylineGlowMaterialProperty;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}