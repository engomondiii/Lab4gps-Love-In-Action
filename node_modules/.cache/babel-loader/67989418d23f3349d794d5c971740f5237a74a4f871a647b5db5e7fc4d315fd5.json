{"ast":null,"code":"import destroyObject from \"../Core/destroyObject.js\";\nimport Event from \"../Core/Event.js\";\nimport EventHelper from \"../Core/EventHelper.js\";\nimport BoxGeometryUpdater from \"./BoxGeometryUpdater.js\";\nimport CorridorGeometryUpdater from \"./CorridorGeometryUpdater.js\";\nimport CylinderGeometryUpdater from \"./CylinderGeometryUpdater.js\";\nimport EllipseGeometryUpdater from \"./EllipseGeometryUpdater.js\";\nimport EllipsoidGeometryUpdater from \"./EllipsoidGeometryUpdater.js\";\nimport PlaneGeometryUpdater from \"./PlaneGeometryUpdater.js\";\nimport PolygonGeometryUpdater from \"./PolygonGeometryUpdater.js\";\nimport PolylineVolumeGeometryUpdater from \"./PolylineVolumeGeometryUpdater.js\";\nimport RectangleGeometryUpdater from \"./RectangleGeometryUpdater.js\";\nimport WallGeometryUpdater from \"./WallGeometryUpdater.js\";\n\n/** @type {GeometryUpdater[]} */\nconst geometryUpdaters = [BoxGeometryUpdater, CylinderGeometryUpdater, CorridorGeometryUpdater, EllipseGeometryUpdater, EllipsoidGeometryUpdater, PlaneGeometryUpdater, PolygonGeometryUpdater, PolylineVolumeGeometryUpdater, RectangleGeometryUpdater, WallGeometryUpdater];\n\n/**\n * Manages a set of \"updater\" classes for the {@link GeometryVisualizer} for each entity\n *\n * @private\n * @param {Entity} entity\n * @param {Scene} scene\n */\nfunction GeometryUpdaterSet(entity, scene) {\n  this.entity = entity;\n  this.scene = scene;\n  const updaters = new Array(geometryUpdaters.length);\n  const geometryChanged = new Event();\n  const eventHelper = new EventHelper();\n  for (let i = 0; i < updaters.length; i++) {\n    const updater = new geometryUpdaters[i](entity, scene);\n    eventHelper.add(updater.geometryChanged, geometry => {\n      geometryChanged.raiseEvent(geometry);\n    });\n    updaters[i] = updater;\n  }\n  this.updaters = updaters;\n  this.geometryChanged = geometryChanged;\n  this.eventHelper = eventHelper;\n  this._removeEntitySubscription = entity.definitionChanged.addEventListener(GeometryUpdaterSet.prototype._onEntityPropertyChanged, this);\n}\nGeometryUpdaterSet.prototype._onEntityPropertyChanged = function (entity, propertyName, newValue, oldValue) {\n  const updaters = this.updaters;\n  for (let i = 0; i < updaters.length; i++) {\n    updaters[i]._onEntityPropertyChanged(entity, propertyName, newValue, oldValue);\n  }\n};\nGeometryUpdaterSet.prototype.forEach = function (callback) {\n  const updaters = this.updaters;\n  for (let i = 0; i < updaters.length; i++) {\n    callback(updaters[i]);\n  }\n};\nGeometryUpdaterSet.prototype.destroy = function () {\n  this.eventHelper.removeAll();\n  const updaters = this.updaters;\n  for (let i = 0; i < updaters.length; i++) {\n    updaters[i].destroy();\n  }\n  this._removeEntitySubscription();\n  destroyObject(this);\n};\n\n/**\n * Add the provided updater to the default list of updaters if not already included\n * @param {GeometryUpdater} updater\n */\nGeometryUpdaterSet.registerUpdater = function (updater) {\n  if (!geometryUpdaters.includes(updater)) {\n    geometryUpdaters.push(updater);\n  }\n};\n\n/**\n * Remove the provided updater from the default list of updaters if included\n * @param {GeometryUpdater} updater\n */\nGeometryUpdaterSet.unregisterUpdater = function (updater) {\n  if (geometryUpdaters.includes(updater)) {\n    const index = geometryUpdaters.indexOf(updater);\n    geometryUpdaters.splice(index, 1);\n  }\n};\nexport default GeometryUpdaterSet;","map":{"version":3,"names":["destroyObject","Event","EventHelper","BoxGeometryUpdater","CorridorGeometryUpdater","CylinderGeometryUpdater","EllipseGeometryUpdater","EllipsoidGeometryUpdater","PlaneGeometryUpdater","PolygonGeometryUpdater","PolylineVolumeGeometryUpdater","RectangleGeometryUpdater","WallGeometryUpdater","geometryUpdaters","GeometryUpdaterSet","entity","scene","updaters","Array","length","geometryChanged","eventHelper","i","updater","add","geometry","raiseEvent","_removeEntitySubscription","definitionChanged","addEventListener","prototype","_onEntityPropertyChanged","propertyName","newValue","oldValue","forEach","callback","destroy","removeAll","registerUpdater","includes","push","unregisterUpdater","index","indexOf","splice"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/engine/Source/DataSources/GeometryUpdaterSet.js"],"sourcesContent":["import destroyObject from \"../Core/destroyObject.js\";\nimport Event from \"../Core/Event.js\";\nimport EventHelper from \"../Core/EventHelper.js\";\nimport BoxGeometryUpdater from \"./BoxGeometryUpdater.js\";\nimport CorridorGeometryUpdater from \"./CorridorGeometryUpdater.js\";\nimport CylinderGeometryUpdater from \"./CylinderGeometryUpdater.js\";\nimport EllipseGeometryUpdater from \"./EllipseGeometryUpdater.js\";\nimport EllipsoidGeometryUpdater from \"./EllipsoidGeometryUpdater.js\";\nimport PlaneGeometryUpdater from \"./PlaneGeometryUpdater.js\";\nimport PolygonGeometryUpdater from \"./PolygonGeometryUpdater.js\";\nimport PolylineVolumeGeometryUpdater from \"./PolylineVolumeGeometryUpdater.js\";\nimport RectangleGeometryUpdater from \"./RectangleGeometryUpdater.js\";\nimport WallGeometryUpdater from \"./WallGeometryUpdater.js\";\n\n/** @type {GeometryUpdater[]} */\nconst geometryUpdaters = [\n  BoxGeometryUpdater,\n  CylinderGeometryUpdater,\n  CorridorGeometryUpdater,\n  EllipseGeometryUpdater,\n  EllipsoidGeometryUpdater,\n  PlaneGeometryUpdater,\n  PolygonGeometryUpdater,\n  PolylineVolumeGeometryUpdater,\n  RectangleGeometryUpdater,\n  WallGeometryUpdater,\n];\n\n/**\n * Manages a set of \"updater\" classes for the {@link GeometryVisualizer} for each entity\n *\n * @private\n * @param {Entity} entity\n * @param {Scene} scene\n */\nfunction GeometryUpdaterSet(entity, scene) {\n  this.entity = entity;\n  this.scene = scene;\n  const updaters = new Array(geometryUpdaters.length);\n  const geometryChanged = new Event();\n  const eventHelper = new EventHelper();\n  for (let i = 0; i < updaters.length; i++) {\n    const updater = new geometryUpdaters[i](entity, scene);\n    eventHelper.add(updater.geometryChanged, (geometry) => {\n      geometryChanged.raiseEvent(geometry);\n    });\n    updaters[i] = updater;\n  }\n  this.updaters = updaters;\n  this.geometryChanged = geometryChanged;\n  this.eventHelper = eventHelper;\n\n  this._removeEntitySubscription = entity.definitionChanged.addEventListener(\n    GeometryUpdaterSet.prototype._onEntityPropertyChanged,\n    this,\n  );\n}\n\nGeometryUpdaterSet.prototype._onEntityPropertyChanged = function (\n  entity,\n  propertyName,\n  newValue,\n  oldValue,\n) {\n  const updaters = this.updaters;\n  for (let i = 0; i < updaters.length; i++) {\n    updaters[i]._onEntityPropertyChanged(\n      entity,\n      propertyName,\n      newValue,\n      oldValue,\n    );\n  }\n};\n\nGeometryUpdaterSet.prototype.forEach = function (callback) {\n  const updaters = this.updaters;\n  for (let i = 0; i < updaters.length; i++) {\n    callback(updaters[i]);\n  }\n};\n\nGeometryUpdaterSet.prototype.destroy = function () {\n  this.eventHelper.removeAll();\n  const updaters = this.updaters;\n  for (let i = 0; i < updaters.length; i++) {\n    updaters[i].destroy();\n  }\n  this._removeEntitySubscription();\n  destroyObject(this);\n};\n\n/**\n * Add the provided updater to the default list of updaters if not already included\n * @param {GeometryUpdater} updater\n */\nGeometryUpdaterSet.registerUpdater = function (updater) {\n  if (!geometryUpdaters.includes(updater)) {\n    geometryUpdaters.push(updater);\n  }\n};\n\n/**\n * Remove the provided updater from the default list of updaters if included\n * @param {GeometryUpdater} updater\n */\nGeometryUpdaterSet.unregisterUpdater = function (updater) {\n  if (geometryUpdaters.includes(updater)) {\n    const index = geometryUpdaters.indexOf(updater);\n    geometryUpdaters.splice(index, 1);\n  }\n};\n\nexport default GeometryUpdaterSet;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}