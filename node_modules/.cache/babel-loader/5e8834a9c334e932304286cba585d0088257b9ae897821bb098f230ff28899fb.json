{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/src/components/Globe/Globe.js\",\n  _s = $RefreshSig$();\n/* global Cesium */\nimport React, { useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Globe = () => {\n  _s();\n  const globeRef = useRef(null);\n  const viewerRef = useRef(null);\n  useEffect(() => {\n    Cesium.Ion.defaultAccessToken = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJkMWY1MGUyNC0wNjFkLTQ1YWMtYTBhNi1mYTRkMTAzNWYzOGEiLCJpZCI6MjYzODA1LCJpYXQiOjE3MzQ2Nzk0ODd9.OvjRSddy3Mt1P1rOGIFKOQQcxIqTX2i7sM1Ha4s7_qs';\n    if (globeRef.current && !viewerRef.current) {\n      try {\n        viewerRef.current = new Cesium.Viewer(globeRef.current, {\n          imageryProvider: new Cesium.IonImageryProvider({\n            assetId: 2\n          }),\n          baseLayerPicker: false,\n          geocoder: false,\n          homeButton: false,\n          infoBox: false,\n          navigationHelpButton: false,\n          sceneModePicker: false,\n          timeline: false,\n          animation: false,\n          requestRenderMode: true,\n          maximumRenderTimeChange: Infinity\n        });\n        viewerRef.current.scene.globe.maximumScreenSpaceError = 2; // Adjust for performance\n\n        viewerRef.current.scene.camera.setView({\n          destination: Cesium.Cartesian3.fromDegrees(-74.0707383, 40.7117244, 10000000),\n          orientation: {\n            heading: Cesium.Math.toRadians(0),\n            pitch: Cesium.Math.toRadians(-90),\n            roll: 0.0\n          }\n        });\n\n        // Continuous rotation\n        const rotateEarth = () => {\n          let previousTime = Date.now();\n          const spinRate = 0.001;\n          function update() {\n            if (!viewerRef.current) {\n              return; // Exit if viewer has been destroyed\n            }\n            const currentTime = Date.now();\n            const delta = (currentTime - previousTime) / 1000;\n            previousTime = currentTime;\n            viewerRef.current.scene.camera.rotate(Cesium.Cartesian3.UNIT_Z, -spinRate * delta);\n            requestAnimationFrame(update);\n          }\n          update();\n        };\n        rotateEarth();\n      } catch (error) {\n        console.error('Failed to initialize Cesium viewer:', error);\n      }\n    }\n    return () => {\n      if (viewerRef.current) {\n        viewerRef.current.destroy();\n        viewerRef.current = null;\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: globeRef,\n    id: \"cesiumContainer\",\n    style: {\n      height: \"100vh\",\n      width: \"100vw\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 12\n  }, this);\n};\n_s(Globe, \"TVtPu2f6GPzk8mQ9KTZiicRa+5E=\");\n_c = Globe;\nexport default Globe;\nvar _c;\n$RefreshReg$(_c, \"Globe\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","Globe","_s","globeRef","viewerRef","Cesium","Ion","defaultAccessToken","current","Viewer","imageryProvider","IonImageryProvider","assetId","baseLayerPicker","geocoder","homeButton","infoBox","navigationHelpButton","sceneModePicker","timeline","animation","requestRenderMode","maximumRenderTimeChange","Infinity","scene","globe","maximumScreenSpaceError","camera","setView","destination","Cartesian3","fromDegrees","orientation","heading","Math","toRadians","pitch","roll","rotateEarth","previousTime","Date","now","spinRate","update","currentTime","delta","rotate","UNIT_Z","requestAnimationFrame","error","console","destroy","ref","id","style","height","width","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/src/components/Globe/Globe.js"],"sourcesContent":["/* global Cesium */\nimport React, { useEffect, useRef } from 'react';\n\nconst Globe = () => {\n    const globeRef = useRef(null);\n    const viewerRef = useRef(null);\n\n    useEffect(() => {\n        Cesium.Ion.defaultAccessToken = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJkMWY1MGUyNC0wNjFkLTQ1YWMtYTBhNi1mYTRkMTAzNWYzOGEiLCJpZCI6MjYzODA1LCJpYXQiOjE3MzQ2Nzk0ODd9.OvjRSddy3Mt1P1rOGIFKOQQcxIqTX2i7sM1Ha4s7_qs';\n\n        if (globeRef.current && !viewerRef.current) {\n            try {\n                viewerRef.current = new Cesium.Viewer(globeRef.current, {\n                    imageryProvider: new Cesium.IonImageryProvider({ assetId: 2 }),\n                    baseLayerPicker: false,\n                    geocoder: false,\n                    homeButton: false,\n                    infoBox: false,\n                    navigationHelpButton: false,\n                    sceneModePicker: false,\n                    timeline: false,\n                    animation: false,\n                    requestRenderMode: true,\n                    maximumRenderTimeChange: Infinity,\n                });\n\n                viewerRef.current.scene.globe.maximumScreenSpaceError = 2; // Adjust for performance\n\n                viewerRef.current.scene.camera.setView({\n                    destination: Cesium.Cartesian3.fromDegrees(-74.0707383, 40.7117244, 10000000),\n                    orientation: {\n                        heading: Cesium.Math.toRadians(0),\n                        pitch: Cesium.Math.toRadians(-90),\n                        roll: 0.0\n                    }\n                });\n\n                // Continuous rotation\n                const rotateEarth = () => {\n                    let previousTime = Date.now();\n                    const spinRate = 0.001;\n\n                    function update() {\n                        if (!viewerRef.current) {\n                            return; // Exit if viewer has been destroyed\n                        }\n                        const currentTime = Date.now();\n                        const delta = (currentTime - previousTime) / 1000;\n                        previousTime = currentTime;\n                        viewerRef.current.scene.camera.rotate(Cesium.Cartesian3.UNIT_Z, -spinRate * delta);\n                        requestAnimationFrame(update);\n                    }\n\n                    update();\n                };\n\n                rotateEarth();\n            } catch (error) {\n                console.error('Failed to initialize Cesium viewer:', error);\n            }\n        }\n\n        return () => {\n            if (viewerRef.current) {\n                viewerRef.current.destroy();\n                viewerRef.current = null;\n            }\n        };\n    }, []);\n\n    return <div ref={globeRef} id=\"cesiumContainer\" style={{ height: \"100vh\", width: \"100vw\" }} />;\n};\n\nexport default Globe;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}