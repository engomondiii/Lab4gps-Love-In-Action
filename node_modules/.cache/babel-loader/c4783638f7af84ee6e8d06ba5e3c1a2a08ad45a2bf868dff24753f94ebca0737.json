{"ast":null,"code":"import defined from \"../Core/defined.js\";\n\n/**\n * Return the `PropertyTextureProperty` from the given `StructuralMetadata`\n * that matches the given description.\n *\n * If the given structural metadata is `undefined`, then `undefined` is returned.\n *\n * Otherwise, this method will check all the property textures in the given\n * structural metadata.\n *\n * If it finds a property texture that has a class with an `_id` that matches\n * the given name, and that contains a property for the given property name, then\n * this property is returned.\n *\n * Otherwise, `undefined` is returned\n *\n * @param {StructuralMetadata} structuralMetadata The structural metadata\n * @param {string} className The name of the metadata class\n * @param {string} propertyName The name of the metadata property\n * @returns {PropertyTextureProperty|undefined}\n * @private\n */\nfunction getMetadataProperty(structuralMetadata, className, propertyName) {\n  if (!defined(structuralMetadata)) {\n    return undefined;\n  }\n  const propertyTextures = structuralMetadata.propertyTextures;\n  for (const propertyTexture of propertyTextures) {\n    const metadataClass = propertyTexture.class;\n    if (metadataClass.id === className) {\n      const properties = propertyTexture.properties;\n      const property = properties[propertyName];\n      if (defined(property)) {\n        return property;\n      }\n    }\n  }\n  // Note: This could check for property attributes in a similar\n  // way. But since picking arbitrary property attributes via the\n  // frame buffer is not supported yet, returning \"undefined\" here\n  // causes the picking to bail out early and safely when no\n  // property texture was found.\n  // See https://github.com/CesiumGS/cesium/issues/12225\n  return undefined;\n}\nexport default getMetadataProperty;","map":{"version":3,"names":["defined","getMetadataProperty","structuralMetadata","className","propertyName","undefined","propertyTextures","propertyTexture","metadataClass","class","id","properties","property"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/engine/Source/Scene/getMetadataProperty.js"],"sourcesContent":["import defined from \"../Core/defined.js\";\n\n/**\n * Return the `PropertyTextureProperty` from the given `StructuralMetadata`\n * that matches the given description.\n *\n * If the given structural metadata is `undefined`, then `undefined` is returned.\n *\n * Otherwise, this method will check all the property textures in the given\n * structural metadata.\n *\n * If it finds a property texture that has a class with an `_id` that matches\n * the given name, and that contains a property for the given property name, then\n * this property is returned.\n *\n * Otherwise, `undefined` is returned\n *\n * @param {StructuralMetadata} structuralMetadata The structural metadata\n * @param {string} className The name of the metadata class\n * @param {string} propertyName The name of the metadata property\n * @returns {PropertyTextureProperty|undefined}\n * @private\n */\nfunction getMetadataProperty(structuralMetadata, className, propertyName) {\n  if (!defined(structuralMetadata)) {\n    return undefined;\n  }\n  const propertyTextures = structuralMetadata.propertyTextures;\n  for (const propertyTexture of propertyTextures) {\n    const metadataClass = propertyTexture.class;\n    if (metadataClass.id === className) {\n      const properties = propertyTexture.properties;\n      const property = properties[propertyName];\n      if (defined(property)) {\n        return property;\n      }\n    }\n  }\n  // Note: This could check for property attributes in a similar\n  // way. But since picking arbitrary property attributes via the\n  // frame buffer is not supported yet, returning \"undefined\" here\n  // causes the picking to bail out early and safely when no\n  // property texture was found.\n  // See https://github.com/CesiumGS/cesium/issues/12225\n  return undefined;\n}\n\nexport default getMetadataProperty;\n"],"mappings":"AAAA,OAAOA,OAAO,MAAM,oBAAoB;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,mBAAmBA,CAACC,kBAAkB,EAAEC,SAAS,EAAEC,YAAY,EAAE;EACxE,IAAI,CAACJ,OAAO,CAACE,kBAAkB,CAAC,EAAE;IAChC,OAAOG,SAAS;EAClB;EACA,MAAMC,gBAAgB,GAAGJ,kBAAkB,CAACI,gBAAgB;EAC5D,KAAK,MAAMC,eAAe,IAAID,gBAAgB,EAAE;IAC9C,MAAME,aAAa,GAAGD,eAAe,CAACE,KAAK;IAC3C,IAAID,aAAa,CAACE,EAAE,KAAKP,SAAS,EAAE;MAClC,MAAMQ,UAAU,GAAGJ,eAAe,CAACI,UAAU;MAC7C,MAAMC,QAAQ,GAAGD,UAAU,CAACP,YAAY,CAAC;MACzC,IAAIJ,OAAO,CAACY,QAAQ,CAAC,EAAE;QACrB,OAAOA,QAAQ;MACjB;IACF;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA,OAAOP,SAAS;AAClB;AAEA,eAAeJ,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}