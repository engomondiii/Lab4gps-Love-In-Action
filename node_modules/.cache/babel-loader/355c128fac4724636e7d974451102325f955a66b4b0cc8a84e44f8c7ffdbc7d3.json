{"ast":null,"code":"import defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport Event from \"../Core/Event.js\";\nimport createMaterialPropertyDescriptor from \"./createMaterialPropertyDescriptor.js\";\nimport createPropertyDescriptor from \"./createPropertyDescriptor.js\";\n\n/**\n * @typedef {object} PathGraphics.ConstructorOptions\n *\n * Initialization options for the PathGraphics constructor\n *\n * @property {Property | boolean} [show=true] A boolean Property specifying the visibility of the path.\n * @property {Property | number} [leadTime] A Property specifying the number of seconds in front the object to show.\n * @property {Property | number} [trailTime] A Property specifying the number of seconds behind of the object to show.\n * @property {Property | number} [width=1.0] A numeric Property specifying the width in pixels.\n * @property {Property | number} [resolution=60] A numeric Property specifying the maximum number of seconds to step when sampling the position.\n * @property {MaterialProperty | Color} [material=Color.WHITE] A Property specifying the material used to draw the path.\n * @property {Property | DistanceDisplayCondition} [distanceDisplayCondition] A Property specifying at what distance from the camera that this path will be displayed.\n */\n\n/**\n * Describes a polyline defined as the path made by an {@link Entity} as it moves over time.\n *\n * @alias PathGraphics\n * @constructor\n *\n * @param {PathGraphics.ConstructorOptions} [options] Object describing initialization options\n */\nfunction PathGraphics(options) {\n  this._definitionChanged = new Event();\n  this._show = undefined;\n  this._showSubscription = undefined;\n  this._leadTime = undefined;\n  this._leadTimeSubscription = undefined;\n  this._trailTime = undefined;\n  this._trailTimeSubscription = undefined;\n  this._width = undefined;\n  this._widthSubscription = undefined;\n  this._resolution = undefined;\n  this._resolutionSubscription = undefined;\n  this._material = undefined;\n  this._materialSubscription = undefined;\n  this._distanceDisplayCondition = undefined;\n  this._distanceDisplayConditionSubscription = undefined;\n  this.merge(defaultValue(options, defaultValue.EMPTY_OBJECT));\n}\nObject.defineProperties(PathGraphics.prototype, {\n  /**\n   * Gets the event that is raised whenever a property or sub-property is changed or modified.\n   * @memberof PathGraphics.prototype\n   * @type {Event}\n   * @readonly\n   */\n  definitionChanged: {\n    get: function () {\n      return this._definitionChanged;\n    }\n  },\n  /**\n   * Gets or sets the boolean Property specifying the visibility of the path.\n   * @memberof PathGraphics.prototype\n   * @type {Property|undefined}\n   * @default true\n   */\n  show: createPropertyDescriptor(\"show\"),\n  /**\n   * Gets or sets the Property specifying the number of seconds in front of the object to show.\n   * @memberof PathGraphics.prototype\n   * @type {Property|undefined}\n   */\n  leadTime: createPropertyDescriptor(\"leadTime\"),\n  /**\n   * Gets or sets the Property specifying the number of seconds behind the object to show.\n   * @memberof PathGraphics.prototype\n   * @type {Property|undefined}\n   */\n  trailTime: createPropertyDescriptor(\"trailTime\"),\n  /**\n   * Gets or sets the numeric Property specifying the width in pixels.\n   * @memberof PathGraphics.prototype\n   * @type {Property|undefined}\n   * @default 1.0\n   */\n  width: createPropertyDescriptor(\"width\"),\n  /**\n   * Gets or sets the Property specifying the maximum number of seconds to step when sampling the position.\n   * @memberof PathGraphics.prototype\n   * @type {Property|undefined}\n   * @default 60\n   */\n  resolution: createPropertyDescriptor(\"resolution\"),\n  /**\n   * Gets or sets the Property specifying the material used to draw the path.\n   * @memberof PathGraphics.prototype\n   * @type {MaterialProperty}\n   * @default Color.WHITE\n   */\n  material: createMaterialPropertyDescriptor(\"material\"),\n  /**\n   * Gets or sets the {@link DistanceDisplayCondition} Property specifying at what distance from the camera that this path will be displayed.\n   * @memberof PathGraphics.prototype\n   * @type {Property|undefined}\n   */\n  distanceDisplayCondition: createPropertyDescriptor(\"distanceDisplayCondition\")\n});\n\n/**\n * Duplicates this instance.\n *\n * @param {PathGraphics} [result] The object onto which to store the result.\n * @returns {PathGraphics} The modified result parameter or a new instance if one was not provided.\n */\nPathGraphics.prototype.clone = function (result) {\n  if (!defined(result)) {\n    return new PathGraphics(this);\n  }\n  result.show = this.show;\n  result.leadTime = this.leadTime;\n  result.trailTime = this.trailTime;\n  result.width = this.width;\n  result.resolution = this.resolution;\n  result.material = this.material;\n  result.distanceDisplayCondition = this.distanceDisplayCondition;\n  return result;\n};\n\n/**\n * Assigns each unassigned property on this object to the value\n * of the same property on the provided source object.\n *\n * @param {PathGraphics} source The object to be merged into this object.\n */\nPathGraphics.prototype.merge = function (source) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(source)) {\n    throw new DeveloperError(\"source is required.\");\n  }\n  //>>includeEnd('debug');\n\n  this.show = defaultValue(this.show, source.show);\n  this.leadTime = defaultValue(this.leadTime, source.leadTime);\n  this.trailTime = defaultValue(this.trailTime, source.trailTime);\n  this.width = defaultValue(this.width, source.width);\n  this.resolution = defaultValue(this.resolution, source.resolution);\n  this.material = defaultValue(this.material, source.material);\n  this.distanceDisplayCondition = defaultValue(this.distanceDisplayCondition, source.distanceDisplayCondition);\n};\nexport default PathGraphics;","map":{"version":3,"names":["defaultValue","defined","DeveloperError","Event","createMaterialPropertyDescriptor","createPropertyDescriptor","PathGraphics","options","_definitionChanged","_show","undefined","_showSubscription","_leadTime","_leadTimeSubscription","_trailTime","_trailTimeSubscription","_width","_widthSubscription","_resolution","_resolutionSubscription","_material","_materialSubscription","_distanceDisplayCondition","_distanceDisplayConditionSubscription","merge","EMPTY_OBJECT","Object","defineProperties","prototype","definitionChanged","get","show","leadTime","trailTime","width","resolution","material","distanceDisplayCondition","clone","result","source"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/engine/Source/DataSources/PathGraphics.js"],"sourcesContent":["import defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport Event from \"../Core/Event.js\";\nimport createMaterialPropertyDescriptor from \"./createMaterialPropertyDescriptor.js\";\nimport createPropertyDescriptor from \"./createPropertyDescriptor.js\";\n\n/**\n * @typedef {object} PathGraphics.ConstructorOptions\n *\n * Initialization options for the PathGraphics constructor\n *\n * @property {Property | boolean} [show=true] A boolean Property specifying the visibility of the path.\n * @property {Property | number} [leadTime] A Property specifying the number of seconds in front the object to show.\n * @property {Property | number} [trailTime] A Property specifying the number of seconds behind of the object to show.\n * @property {Property | number} [width=1.0] A numeric Property specifying the width in pixels.\n * @property {Property | number} [resolution=60] A numeric Property specifying the maximum number of seconds to step when sampling the position.\n * @property {MaterialProperty | Color} [material=Color.WHITE] A Property specifying the material used to draw the path.\n * @property {Property | DistanceDisplayCondition} [distanceDisplayCondition] A Property specifying at what distance from the camera that this path will be displayed.\n */\n\n/**\n * Describes a polyline defined as the path made by an {@link Entity} as it moves over time.\n *\n * @alias PathGraphics\n * @constructor\n *\n * @param {PathGraphics.ConstructorOptions} [options] Object describing initialization options\n */\nfunction PathGraphics(options) {\n  this._definitionChanged = new Event();\n  this._show = undefined;\n  this._showSubscription = undefined;\n  this._leadTime = undefined;\n  this._leadTimeSubscription = undefined;\n  this._trailTime = undefined;\n  this._trailTimeSubscription = undefined;\n  this._width = undefined;\n  this._widthSubscription = undefined;\n  this._resolution = undefined;\n  this._resolutionSubscription = undefined;\n  this._material = undefined;\n  this._materialSubscription = undefined;\n  this._distanceDisplayCondition = undefined;\n  this._distanceDisplayConditionSubscription = undefined;\n\n  this.merge(defaultValue(options, defaultValue.EMPTY_OBJECT));\n}\n\nObject.defineProperties(PathGraphics.prototype, {\n  /**\n   * Gets the event that is raised whenever a property or sub-property is changed or modified.\n   * @memberof PathGraphics.prototype\n   * @type {Event}\n   * @readonly\n   */\n  definitionChanged: {\n    get: function () {\n      return this._definitionChanged;\n    },\n  },\n\n  /**\n   * Gets or sets the boolean Property specifying the visibility of the path.\n   * @memberof PathGraphics.prototype\n   * @type {Property|undefined}\n   * @default true\n   */\n  show: createPropertyDescriptor(\"show\"),\n\n  /**\n   * Gets or sets the Property specifying the number of seconds in front of the object to show.\n   * @memberof PathGraphics.prototype\n   * @type {Property|undefined}\n   */\n  leadTime: createPropertyDescriptor(\"leadTime\"),\n\n  /**\n   * Gets or sets the Property specifying the number of seconds behind the object to show.\n   * @memberof PathGraphics.prototype\n   * @type {Property|undefined}\n   */\n  trailTime: createPropertyDescriptor(\"trailTime\"),\n\n  /**\n   * Gets or sets the numeric Property specifying the width in pixels.\n   * @memberof PathGraphics.prototype\n   * @type {Property|undefined}\n   * @default 1.0\n   */\n  width: createPropertyDescriptor(\"width\"),\n\n  /**\n   * Gets or sets the Property specifying the maximum number of seconds to step when sampling the position.\n   * @memberof PathGraphics.prototype\n   * @type {Property|undefined}\n   * @default 60\n   */\n  resolution: createPropertyDescriptor(\"resolution\"),\n\n  /**\n   * Gets or sets the Property specifying the material used to draw the path.\n   * @memberof PathGraphics.prototype\n   * @type {MaterialProperty}\n   * @default Color.WHITE\n   */\n  material: createMaterialPropertyDescriptor(\"material\"),\n\n  /**\n   * Gets or sets the {@link DistanceDisplayCondition} Property specifying at what distance from the camera that this path will be displayed.\n   * @memberof PathGraphics.prototype\n   * @type {Property|undefined}\n   */\n  distanceDisplayCondition: createPropertyDescriptor(\n    \"distanceDisplayCondition\",\n  ),\n});\n\n/**\n * Duplicates this instance.\n *\n * @param {PathGraphics} [result] The object onto which to store the result.\n * @returns {PathGraphics} The modified result parameter or a new instance if one was not provided.\n */\nPathGraphics.prototype.clone = function (result) {\n  if (!defined(result)) {\n    return new PathGraphics(this);\n  }\n  result.show = this.show;\n  result.leadTime = this.leadTime;\n  result.trailTime = this.trailTime;\n  result.width = this.width;\n  result.resolution = this.resolution;\n  result.material = this.material;\n  result.distanceDisplayCondition = this.distanceDisplayCondition;\n  return result;\n};\n\n/**\n * Assigns each unassigned property on this object to the value\n * of the same property on the provided source object.\n *\n * @param {PathGraphics} source The object to be merged into this object.\n */\nPathGraphics.prototype.merge = function (source) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(source)) {\n    throw new DeveloperError(\"source is required.\");\n  }\n  //>>includeEnd('debug');\n\n  this.show = defaultValue(this.show, source.show);\n  this.leadTime = defaultValue(this.leadTime, source.leadTime);\n  this.trailTime = defaultValue(this.trailTime, source.trailTime);\n  this.width = defaultValue(this.width, source.width);\n  this.resolution = defaultValue(this.resolution, source.resolution);\n  this.material = defaultValue(this.material, source.material);\n  this.distanceDisplayCondition = defaultValue(\n    this.distanceDisplayCondition,\n    source.distanceDisplayCondition,\n  );\n};\nexport default PathGraphics;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}