{"ast":null,"code":"import Color from \"../Core/Color.js\";\nimport defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport Event from \"../Core/Event.js\";\nimport JulianDate from \"../Core/JulianDate.js\";\nimport createPropertyDescriptor from \"./createPropertyDescriptor.js\";\nimport Property from \"./Property.js\";\nimport StripeOrientation from \"./StripeOrientation.js\";\nconst defaultOrientation = StripeOrientation.HORIZONTAL;\nconst defaultEvenColor = Color.WHITE;\nconst defaultOddColor = Color.BLACK;\nconst defaultOffset = 0;\nconst defaultRepeat = 1;\n\n/**\n * A {@link MaterialProperty} that maps to stripe {@link Material} uniforms.\n * @alias StripeMaterialProperty\n * @constructor\n *\n * @param {object} [options] Object with the following properties:\n * @param {Property|StripeOrientation} [options.orientation=StripeOrientation.HORIZONTAL] A Property specifying the {@link StripeOrientation}.\n * @param {Property|Color} [options.evenColor=Color.WHITE] A Property specifying the first {@link Color}.\n * @param {Property|Color} [options.oddColor=Color.BLACK] A Property specifying the second {@link Color}.\n * @param {Property|number} [options.offset=0] A numeric Property specifying how far into the pattern to start the material.\n * @param {Property|number} [options.repeat=1] A numeric Property specifying how many times the stripes repeat.\n */\nfunction StripeMaterialProperty(options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n  this._definitionChanged = new Event();\n  this._orientation = undefined;\n  this._orientationSubscription = undefined;\n  this._evenColor = undefined;\n  this._evenColorSubscription = undefined;\n  this._oddColor = undefined;\n  this._oddColorSubscription = undefined;\n  this._offset = undefined;\n  this._offsetSubscription = undefined;\n  this._repeat = undefined;\n  this._repeatSubscription = undefined;\n  this.orientation = options.orientation;\n  this.evenColor = options.evenColor;\n  this.oddColor = options.oddColor;\n  this.offset = options.offset;\n  this.repeat = options.repeat;\n}\nObject.defineProperties(StripeMaterialProperty.prototype, {\n  /**\n   * Gets a value indicating if this property is constant.  A property is considered\n   * constant if getValue always returns the same result for the current definition.\n   * @memberof StripeMaterialProperty.prototype\n   *\n   * @type {boolean}\n   * @readonly\n   */\n  isConstant: {\n    get: function () {\n      return Property.isConstant(this._orientation) &&\n      //\n      Property.isConstant(this._evenColor) &&\n      //\n      Property.isConstant(this._oddColor) &&\n      //\n      Property.isConstant(this._offset) &&\n      //\n      Property.isConstant(this._repeat);\n    }\n  },\n  /**\n   * Gets the event that is raised whenever the definition of this property changes.\n   * The definition is considered to have changed if a call to getValue would return\n   * a different result for the same time.\n   * @memberof StripeMaterialProperty.prototype\n   *\n   * @type {Event}\n   * @readonly\n   */\n  definitionChanged: {\n    get: function () {\n      return this._definitionChanged;\n    }\n  },\n  /**\n   * Gets or sets the Property specifying the {@link StripeOrientation}/\n   * @memberof StripeMaterialProperty.prototype\n   * @type {Property|undefined}\n   * @default StripeOrientation.HORIZONTAL\n   */\n  orientation: createPropertyDescriptor(\"orientation\"),\n  /**\n   * Gets or sets the Property specifying the first {@link Color}.\n   * @memberof StripeMaterialProperty.prototype\n   * @type {Property|undefined}\n   * @default Color.WHITE\n   */\n  evenColor: createPropertyDescriptor(\"evenColor\"),\n  /**\n   * Gets or sets the Property specifying the second {@link Color}.\n   * @memberof StripeMaterialProperty.prototype\n   * @type {Property|undefined}\n   * @default Color.BLACK\n   */\n  oddColor: createPropertyDescriptor(\"oddColor\"),\n  /**\n   * Gets or sets the numeric Property specifying the point into the pattern\n   * to begin drawing; with 0.0 being the beginning of the even color, 1.0 the beginning\n   * of the odd color, 2.0 being the even color again, and any multiple or fractional values\n   * being in between.\n   * @memberof StripeMaterialProperty.prototype\n   * @type {Property|undefined}\n   * @default 0.0\n   */\n  offset: createPropertyDescriptor(\"offset\"),\n  /**\n   * Gets or sets the numeric Property specifying how many times the stripes repeat.\n   * @memberof StripeMaterialProperty.prototype\n   * @type {Property|undefined}\n   * @default 1.0\n   */\n  repeat: createPropertyDescriptor(\"repeat\")\n});\n\n/**\n * Gets the {@link Material} type at the provided time.\n *\n * @param {JulianDate} time The time for which to retrieve the type.\n * @returns {string} The type of material.\n */\nStripeMaterialProperty.prototype.getType = function (time) {\n  return \"Stripe\";\n};\nconst timeScratch = new JulianDate();\n\n/**\n * Gets the value of the property at the provided time.\n *\n * @param {JulianDate} [time=JulianDate.now()] The time for which to retrieve the value. If omitted, the current system time is used.\n * @param {object} [result] The object to store the value into, if omitted, a new instance is created and returned.\n * @returns {object} The modified result parameter or a new instance if the result parameter was not supplied.\n */\nStripeMaterialProperty.prototype.getValue = function (time, result) {\n  if (!defined(time)) {\n    time = JulianDate.now(timeScratch);\n  }\n  if (!defined(result)) {\n    result = {};\n  }\n  result.horizontal = Property.getValueOrDefault(this._orientation, time, defaultOrientation) === StripeOrientation.HORIZONTAL;\n  result.evenColor = Property.getValueOrClonedDefault(this._evenColor, time, defaultEvenColor, result.evenColor);\n  result.oddColor = Property.getValueOrClonedDefault(this._oddColor, time, defaultOddColor, result.oddColor);\n  result.offset = Property.getValueOrDefault(this._offset, time, defaultOffset);\n  result.repeat = Property.getValueOrDefault(this._repeat, time, defaultRepeat);\n  return result;\n};\n\n/**\n * Compares this property to the provided property and returns\n * <code>true</code> if they are equal, <code>false</code> otherwise.\n *\n * @param {Property} [other] The other property.\n * @returns {boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\n */\nStripeMaterialProperty.prototype.equals = function (other) {\n  return this === other ||\n  //\n  other instanceof StripeMaterialProperty &&\n  //\n  Property.equals(this._orientation, other._orientation) &&\n  //\n  Property.equals(this._evenColor, other._evenColor) &&\n  //\n  Property.equals(this._oddColor, other._oddColor) &&\n  //\n  Property.equals(this._offset, other._offset) &&\n  //\n  Property.equals(this._repeat, other._repeat);\n};\nexport default StripeMaterialProperty;","map":{"version":3,"names":["Color","defaultValue","defined","Event","JulianDate","createPropertyDescriptor","Property","StripeOrientation","defaultOrientation","HORIZONTAL","defaultEvenColor","WHITE","defaultOddColor","BLACK","defaultOffset","defaultRepeat","StripeMaterialProperty","options","EMPTY_OBJECT","_definitionChanged","_orientation","undefined","_orientationSubscription","_evenColor","_evenColorSubscription","_oddColor","_oddColorSubscription","_offset","_offsetSubscription","_repeat","_repeatSubscription","orientation","evenColor","oddColor","offset","repeat","Object","defineProperties","prototype","isConstant","get","definitionChanged","getType","time","timeScratch","getValue","result","now","horizontal","getValueOrDefault","getValueOrClonedDefault","equals","other"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/engine/Source/DataSources/StripeMaterialProperty.js"],"sourcesContent":["import Color from \"../Core/Color.js\";\nimport defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport Event from \"../Core/Event.js\";\nimport JulianDate from \"../Core/JulianDate.js\";\nimport createPropertyDescriptor from \"./createPropertyDescriptor.js\";\nimport Property from \"./Property.js\";\nimport StripeOrientation from \"./StripeOrientation.js\";\n\nconst defaultOrientation = StripeOrientation.HORIZONTAL;\nconst defaultEvenColor = Color.WHITE;\nconst defaultOddColor = Color.BLACK;\nconst defaultOffset = 0;\nconst defaultRepeat = 1;\n\n/**\n * A {@link MaterialProperty} that maps to stripe {@link Material} uniforms.\n * @alias StripeMaterialProperty\n * @constructor\n *\n * @param {object} [options] Object with the following properties:\n * @param {Property|StripeOrientation} [options.orientation=StripeOrientation.HORIZONTAL] A Property specifying the {@link StripeOrientation}.\n * @param {Property|Color} [options.evenColor=Color.WHITE] A Property specifying the first {@link Color}.\n * @param {Property|Color} [options.oddColor=Color.BLACK] A Property specifying the second {@link Color}.\n * @param {Property|number} [options.offset=0] A numeric Property specifying how far into the pattern to start the material.\n * @param {Property|number} [options.repeat=1] A numeric Property specifying how many times the stripes repeat.\n */\nfunction StripeMaterialProperty(options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n\n  this._definitionChanged = new Event();\n  this._orientation = undefined;\n  this._orientationSubscription = undefined;\n  this._evenColor = undefined;\n  this._evenColorSubscription = undefined;\n  this._oddColor = undefined;\n  this._oddColorSubscription = undefined;\n  this._offset = undefined;\n  this._offsetSubscription = undefined;\n  this._repeat = undefined;\n  this._repeatSubscription = undefined;\n\n  this.orientation = options.orientation;\n  this.evenColor = options.evenColor;\n  this.oddColor = options.oddColor;\n  this.offset = options.offset;\n  this.repeat = options.repeat;\n}\n\nObject.defineProperties(StripeMaterialProperty.prototype, {\n  /**\n   * Gets a value indicating if this property is constant.  A property is considered\n   * constant if getValue always returns the same result for the current definition.\n   * @memberof StripeMaterialProperty.prototype\n   *\n   * @type {boolean}\n   * @readonly\n   */\n  isConstant: {\n    get: function () {\n      return (\n        Property.isConstant(this._orientation) && //\n        Property.isConstant(this._evenColor) && //\n        Property.isConstant(this._oddColor) && //\n        Property.isConstant(this._offset) && //\n        Property.isConstant(this._repeat)\n      );\n    },\n  },\n  /**\n   * Gets the event that is raised whenever the definition of this property changes.\n   * The definition is considered to have changed if a call to getValue would return\n   * a different result for the same time.\n   * @memberof StripeMaterialProperty.prototype\n   *\n   * @type {Event}\n   * @readonly\n   */\n  definitionChanged: {\n    get: function () {\n      return this._definitionChanged;\n    },\n  },\n\n  /**\n   * Gets or sets the Property specifying the {@link StripeOrientation}/\n   * @memberof StripeMaterialProperty.prototype\n   * @type {Property|undefined}\n   * @default StripeOrientation.HORIZONTAL\n   */\n  orientation: createPropertyDescriptor(\"orientation\"),\n\n  /**\n   * Gets or sets the Property specifying the first {@link Color}.\n   * @memberof StripeMaterialProperty.prototype\n   * @type {Property|undefined}\n   * @default Color.WHITE\n   */\n  evenColor: createPropertyDescriptor(\"evenColor\"),\n\n  /**\n   * Gets or sets the Property specifying the second {@link Color}.\n   * @memberof StripeMaterialProperty.prototype\n   * @type {Property|undefined}\n   * @default Color.BLACK\n   */\n  oddColor: createPropertyDescriptor(\"oddColor\"),\n\n  /**\n   * Gets or sets the numeric Property specifying the point into the pattern\n   * to begin drawing; with 0.0 being the beginning of the even color, 1.0 the beginning\n   * of the odd color, 2.0 being the even color again, and any multiple or fractional values\n   * being in between.\n   * @memberof StripeMaterialProperty.prototype\n   * @type {Property|undefined}\n   * @default 0.0\n   */\n  offset: createPropertyDescriptor(\"offset\"),\n\n  /**\n   * Gets or sets the numeric Property specifying how many times the stripes repeat.\n   * @memberof StripeMaterialProperty.prototype\n   * @type {Property|undefined}\n   * @default 1.0\n   */\n  repeat: createPropertyDescriptor(\"repeat\"),\n});\n\n/**\n * Gets the {@link Material} type at the provided time.\n *\n * @param {JulianDate} time The time for which to retrieve the type.\n * @returns {string} The type of material.\n */\nStripeMaterialProperty.prototype.getType = function (time) {\n  return \"Stripe\";\n};\n\nconst timeScratch = new JulianDate();\n\n/**\n * Gets the value of the property at the provided time.\n *\n * @param {JulianDate} [time=JulianDate.now()] The time for which to retrieve the value. If omitted, the current system time is used.\n * @param {object} [result] The object to store the value into, if omitted, a new instance is created and returned.\n * @returns {object} The modified result parameter or a new instance if the result parameter was not supplied.\n */\nStripeMaterialProperty.prototype.getValue = function (time, result) {\n  if (!defined(time)) {\n    time = JulianDate.now(timeScratch);\n  }\n  if (!defined(result)) {\n    result = {};\n  }\n  result.horizontal =\n    Property.getValueOrDefault(this._orientation, time, defaultOrientation) ===\n    StripeOrientation.HORIZONTAL;\n  result.evenColor = Property.getValueOrClonedDefault(\n    this._evenColor,\n    time,\n    defaultEvenColor,\n    result.evenColor,\n  );\n  result.oddColor = Property.getValueOrClonedDefault(\n    this._oddColor,\n    time,\n    defaultOddColor,\n    result.oddColor,\n  );\n  result.offset = Property.getValueOrDefault(this._offset, time, defaultOffset);\n  result.repeat = Property.getValueOrDefault(this._repeat, time, defaultRepeat);\n  return result;\n};\n\n/**\n * Compares this property to the provided property and returns\n * <code>true</code> if they are equal, <code>false</code> otherwise.\n *\n * @param {Property} [other] The other property.\n * @returns {boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\n */\nStripeMaterialProperty.prototype.equals = function (other) {\n  return (\n    this === other || //\n    (other instanceof StripeMaterialProperty && //\n      Property.equals(this._orientation, other._orientation) && //\n      Property.equals(this._evenColor, other._evenColor) && //\n      Property.equals(this._oddColor, other._oddColor) && //\n      Property.equals(this._offset, other._offset) && //\n      Property.equals(this._repeat, other._repeat))\n  );\n};\nexport default StripeMaterialProperty;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}