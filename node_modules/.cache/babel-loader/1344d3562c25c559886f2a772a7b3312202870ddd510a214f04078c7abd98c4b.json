{"ast":null,"code":"import Check from \"../../Core/Check.js\";\nimport clone from \"../../Core/clone.js\";\n\n/**\n * A model is made up of one or more nodes in the scene graph. Some details\n * such as instancing are computed on a per-node basis. This class provides\n * a place to store such details. It also inherits some properties from\n * the model render resources.\n *\n * @constructor\n *\n * @param {ModelRenderResources} modelRenderResources The model resources to inherit\n * @param {ModelRuntimeNode} runtimeNode The in-memory representation of the scene graph node.\n *\n * @private\n */\nfunction NodeRenderResources(modelRenderResources, runtimeNode) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.typeOf.object(\"modelRenderResources\", modelRenderResources);\n  Check.typeOf.object(\"runtimeNode\", runtimeNode);\n  //>>includeEnd('debug');\n\n  // Properties inherited from the ModelRenderResources.\n  /**\n   * A reference to the model. Inherited from the model render resources.\n   *\n   * @type {Model}\n   * @readonly\n   *\n   * @private\n   */\n  this.model = modelRenderResources.model;\n  /**\n   * An object used to build a shader incrementally. This is cloned from the\n   * model render resources because each node can compute a different shader.\n   *\n   * @type {ShaderBuilder}\n   * @readonly\n   *\n   * @private\n   */\n  this.shaderBuilder = modelRenderResources.shaderBuilder.clone();\n\n  /**\n   * A dictionary mapping uniform name to functions that return the uniform\n   * values. Inherited from the model render resources.\n   *\n   * @type {Object<string, Function>}\n   * @readonly\n   *\n   * @private\n   */\n  this.uniformMap = clone(modelRenderResources.uniformMap);\n\n  /**\n   * Options for configuring the alpha stage such as pass and alpha cutoff.\n   * Inherited from the model render resources.\n   *\n   * @type {ModelAlphaOptions}\n   * @readonly\n   *\n   * @private\n   */\n  this.alphaOptions = clone(modelRenderResources.alphaOptions);\n\n  /**\n   * An object storing options for creating a {@link RenderState}.\n   * The pipeline stages simply set the options, the render state is created\n   * when the {@link DrawCommand} is constructed. Inherited from the model\n   * render resources.\n   *\n   * @type {object}\n   * @readonly\n   *\n   * @private\n   */\n  this.renderStateOptions = clone(modelRenderResources.renderStateOptions, true);\n\n  /**\n   * Whether the model has a silhouette. This value indicates what draw commands\n   * are needed. Inherited from the model render resources.\n   *\n   * @type {boolean}\n   * @readonly\n   *\n   * @private\n   */\n  this.hasSilhouette = modelRenderResources.hasSilhouette;\n\n  /**\n   * Whether the model is part of a tileset that uses the skipLevelOfDetail\n   * optimization. This value indicates what draw commands are needed.\n   * Inherited from the model render resources.\n   *\n   * @type {boolean}\n   * @readonly\n   *\n   * @private\n   */\n  this.hasSkipLevelOfDetail = modelRenderResources.hasSkipLevelOfDetail;\n\n  // Other properties.\n  /**\n   * A reference to the runtime node\n   *\n   * @type {ModelRuntimeNode}\n   * @readonly\n   *\n   * @private\n   */\n  this.runtimeNode = runtimeNode;\n\n  /**\n   * An array of objects describing vertex attributes that will eventually\n   * be used to create a {@link VertexArray} for the draw command. Attributes\n   * at the node level may be needed for extensions such as EXT_mesh_gpu_instancing.\n   *\n   * @type {Object[]}\n   * @readonly\n   *\n   * @private\n   */\n  this.attributes = [];\n\n  /**\n   * The index to give to the next vertex attribute added to the attributes array.\n   * POSITION takes index 0.\n   *\n   * @type {number}\n   *\n   * @private\n   */\n  this.attributeIndex = 1;\n\n  /**\n   * The set index to assign to feature ID vertex attribute(s) created from the\n   * offset/repeat in the feature ID attribute.\n   *\n   * @type {number}\n   * @default 0\n   *\n   * @private\n   */\n  this.featureIdVertexAttributeSetIndex = 0;\n\n  /**\n   * The number of instances. This value is set by InstancingPipelineStage.\n   *\n   * @type {number}\n   * @default 0\n   *\n   * @private\n   */\n  this.instanceCount = 0;\n}\nexport default NodeRenderResources;","map":{"version":3,"names":["Check","clone","NodeRenderResources","modelRenderResources","runtimeNode","typeOf","object","model","shaderBuilder","uniformMap","alphaOptions","renderStateOptions","hasSilhouette","hasSkipLevelOfDetail","attributes","attributeIndex","featureIdVertexAttributeSetIndex","instanceCount"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/engine/Source/Scene/Model/NodeRenderResources.js"],"sourcesContent":["import Check from \"../../Core/Check.js\";\nimport clone from \"../../Core/clone.js\";\n\n/**\n * A model is made up of one or more nodes in the scene graph. Some details\n * such as instancing are computed on a per-node basis. This class provides\n * a place to store such details. It also inherits some properties from\n * the model render resources.\n *\n * @constructor\n *\n * @param {ModelRenderResources} modelRenderResources The model resources to inherit\n * @param {ModelRuntimeNode} runtimeNode The in-memory representation of the scene graph node.\n *\n * @private\n */\nfunction NodeRenderResources(modelRenderResources, runtimeNode) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.typeOf.object(\"modelRenderResources\", modelRenderResources);\n  Check.typeOf.object(\"runtimeNode\", runtimeNode);\n  //>>includeEnd('debug');\n\n  // Properties inherited from the ModelRenderResources.\n  /**\n   * A reference to the model. Inherited from the model render resources.\n   *\n   * @type {Model}\n   * @readonly\n   *\n   * @private\n   */\n  this.model = modelRenderResources.model;\n  /**\n   * An object used to build a shader incrementally. This is cloned from the\n   * model render resources because each node can compute a different shader.\n   *\n   * @type {ShaderBuilder}\n   * @readonly\n   *\n   * @private\n   */\n  this.shaderBuilder = modelRenderResources.shaderBuilder.clone();\n\n  /**\n   * A dictionary mapping uniform name to functions that return the uniform\n   * values. Inherited from the model render resources.\n   *\n   * @type {Object<string, Function>}\n   * @readonly\n   *\n   * @private\n   */\n  this.uniformMap = clone(modelRenderResources.uniformMap);\n\n  /**\n   * Options for configuring the alpha stage such as pass and alpha cutoff.\n   * Inherited from the model render resources.\n   *\n   * @type {ModelAlphaOptions}\n   * @readonly\n   *\n   * @private\n   */\n  this.alphaOptions = clone(modelRenderResources.alphaOptions);\n\n  /**\n   * An object storing options for creating a {@link RenderState}.\n   * The pipeline stages simply set the options, the render state is created\n   * when the {@link DrawCommand} is constructed. Inherited from the model\n   * render resources.\n   *\n   * @type {object}\n   * @readonly\n   *\n   * @private\n   */\n  this.renderStateOptions = clone(\n    modelRenderResources.renderStateOptions,\n    true,\n  );\n\n  /**\n   * Whether the model has a silhouette. This value indicates what draw commands\n   * are needed. Inherited from the model render resources.\n   *\n   * @type {boolean}\n   * @readonly\n   *\n   * @private\n   */\n  this.hasSilhouette = modelRenderResources.hasSilhouette;\n\n  /**\n   * Whether the model is part of a tileset that uses the skipLevelOfDetail\n   * optimization. This value indicates what draw commands are needed.\n   * Inherited from the model render resources.\n   *\n   * @type {boolean}\n   * @readonly\n   *\n   * @private\n   */\n  this.hasSkipLevelOfDetail = modelRenderResources.hasSkipLevelOfDetail;\n\n  // Other properties.\n  /**\n   * A reference to the runtime node\n   *\n   * @type {ModelRuntimeNode}\n   * @readonly\n   *\n   * @private\n   */\n  this.runtimeNode = runtimeNode;\n\n  /**\n   * An array of objects describing vertex attributes that will eventually\n   * be used to create a {@link VertexArray} for the draw command. Attributes\n   * at the node level may be needed for extensions such as EXT_mesh_gpu_instancing.\n   *\n   * @type {Object[]}\n   * @readonly\n   *\n   * @private\n   */\n  this.attributes = [];\n\n  /**\n   * The index to give to the next vertex attribute added to the attributes array.\n   * POSITION takes index 0.\n   *\n   * @type {number}\n   *\n   * @private\n   */\n  this.attributeIndex = 1;\n\n  /**\n   * The set index to assign to feature ID vertex attribute(s) created from the\n   * offset/repeat in the feature ID attribute.\n   *\n   * @type {number}\n   * @default 0\n   *\n   * @private\n   */\n  this.featureIdVertexAttributeSetIndex = 0;\n\n  /**\n   * The number of instances. This value is set by InstancingPipelineStage.\n   *\n   * @type {number}\n   * @default 0\n   *\n   * @private\n   */\n  this.instanceCount = 0;\n}\n\nexport default NodeRenderResources;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,qBAAqB;AACvC,OAAOC,KAAK,MAAM,qBAAqB;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,mBAAmBA,CAACC,oBAAoB,EAAEC,WAAW,EAAE;EAC9D;EACAJ,KAAK,CAACK,MAAM,CAACC,MAAM,CAAC,sBAAsB,EAAEH,oBAAoB,CAAC;EACjEH,KAAK,CAACK,MAAM,CAACC,MAAM,CAAC,aAAa,EAAEF,WAAW,CAAC;EAC/C;;EAEA;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACE,IAAI,CAACG,KAAK,GAAGJ,oBAAoB,CAACI,KAAK;EACvC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,IAAI,CAACC,aAAa,GAAGL,oBAAoB,CAACK,aAAa,CAACP,KAAK,CAAC,CAAC;;EAE/D;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,IAAI,CAACQ,UAAU,GAAGR,KAAK,CAACE,oBAAoB,CAACM,UAAU,CAAC;;EAExD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,IAAI,CAACC,YAAY,GAAGT,KAAK,CAACE,oBAAoB,CAACO,YAAY,CAAC;;EAE5D;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,IAAI,CAACC,kBAAkB,GAAGV,KAAK,CAC7BE,oBAAoB,CAACQ,kBAAkB,EACvC,IACF,CAAC;;EAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,IAAI,CAACC,aAAa,GAAGT,oBAAoB,CAACS,aAAa;;EAEvD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,IAAI,CAACC,oBAAoB,GAAGV,oBAAoB,CAACU,oBAAoB;;EAErE;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACE,IAAI,CAACT,WAAW,GAAGA,WAAW;;EAE9B;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,IAAI,CAACU,UAAU,GAAG,EAAE;;EAEpB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACE,IAAI,CAACC,cAAc,GAAG,CAAC;;EAEvB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,IAAI,CAACC,gCAAgC,GAAG,CAAC;;EAEzC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACE,IAAI,CAACC,aAAa,GAAG,CAAC;AACxB;AAEA,eAAef,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}