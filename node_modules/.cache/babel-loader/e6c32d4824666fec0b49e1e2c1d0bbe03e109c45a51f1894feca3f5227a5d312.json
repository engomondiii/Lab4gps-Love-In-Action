{"ast":null,"code":"import defined from \"../Core/defined.js\";\nimport Event from \"../Core/Event.js\";\nimport EventHelper from \"../Core/EventHelper.js\";\nimport JulianDate from \"../Core/JulianDate.js\";\nimport TimeIntervalCollection from \"../Core/TimeIntervalCollection.js\";\nimport Property from \"./Property.js\";\nfunction subscribeAll(property, eventHelper, definitionChanged, intervals) {\n  function callback() {\n    definitionChanged.raiseEvent(property);\n  }\n  const items = [];\n  eventHelper.removeAll();\n  const length = intervals.length;\n  for (let i = 0; i < length; i++) {\n    const interval = intervals.get(i);\n    if (defined(interval.data) && items.indexOf(interval.data) === -1) {\n      eventHelper.add(interval.data.definitionChanged, callback);\n    }\n  }\n}\n\n/**\n * A {@link Property} which is defined by a {@link TimeIntervalCollection}, where the\n * data property of each {@link TimeInterval} is another Property instance which is\n * evaluated at the provided time.\n *\n * @alias CompositeProperty\n * @constructor\n *\n *\n * @example\n * const constantProperty = ...;\n * const sampledProperty = ...;\n *\n * //Create a composite property from two previously defined properties\n * //where the property is valid on August 1st, 2012 and uses a constant\n * //property for the first half of the day and a sampled property for the\n * //remaining half.\n * const composite = new Cesium.CompositeProperty();\n * composite.intervals.addInterval(Cesium.TimeInterval.fromIso8601({\n *     iso8601 : '2012-08-01T00:00:00.00Z/2012-08-01T12:00:00.00Z',\n *     data : constantProperty\n * }));\n * composite.intervals.addInterval(Cesium.TimeInterval.fromIso8601({\n *     iso8601 : '2012-08-01T12:00:00.00Z/2012-08-02T00:00:00.00Z',\n *     isStartIncluded : false,\n *     isStopIncluded : false,\n *     data : sampledProperty\n * }));\n *\n * @see CompositeMaterialProperty\n * @see CompositePositionProperty\n */\nfunction CompositeProperty() {\n  this._eventHelper = new EventHelper();\n  this._definitionChanged = new Event();\n  this._intervals = new TimeIntervalCollection();\n  this._intervals.changedEvent.addEventListener(CompositeProperty.prototype._intervalsChanged, this);\n}\nObject.defineProperties(CompositeProperty.prototype, {\n  /**\n   * Gets a value indicating if this property is constant.  A property is considered\n   * constant if getValue always returns the same result for the current definition.\n   * @memberof CompositeProperty.prototype\n   *\n   * @type {boolean}\n   * @readonly\n   */\n  isConstant: {\n    get: function () {\n      return this._intervals.isEmpty;\n    }\n  },\n  /**\n   * Gets the event that is raised whenever the definition of this property changes.\n   * The definition is changed whenever setValue is called with data different\n   * than the current value.\n   * @memberof CompositeProperty.prototype\n   *\n   * @type {Event}\n   * @readonly\n   */\n  definitionChanged: {\n    get: function () {\n      return this._definitionChanged;\n    }\n  },\n  /**\n   * Gets the interval collection.\n   * @memberof CompositeProperty.prototype\n   *\n   * @type {TimeIntervalCollection}\n   */\n  intervals: {\n    get: function () {\n      return this._intervals;\n    }\n  }\n});\nconst timeScratch = new JulianDate();\n\n/**\n * Gets the value of the property at the provided time.\n *\n * @param {JulianDate} [time=JulianDate.now()] The time for which to retrieve the value. If omitted, the current system time is used.\n * @param {object} [result] The object to store the value into, if omitted, a new instance is created and returned.\n * @returns {object} The modified result parameter or a new instance if the result parameter was not supplied.\n */\nCompositeProperty.prototype.getValue = function (time, result) {\n  if (!defined(time)) {\n    time = JulianDate.now(timeScratch);\n  }\n  const innerProperty = this._intervals.findDataForIntervalContainingDate(time);\n  if (defined(innerProperty)) {\n    return innerProperty.getValue(time, result);\n  }\n  return undefined;\n};\n\n/**\n * Compares this property to the provided property and returns\n * <code>true</code> if they are equal, <code>false</code> otherwise.\n *\n * @param {Property} [other] The other property.\n * @returns {boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\n */\nCompositeProperty.prototype.equals = function (other) {\n  return this === other ||\n  //\n  other instanceof CompositeProperty &&\n  //\n  this._intervals.equals(other._intervals, Property.equals);\n};\n\n/**\n * @private\n */\nCompositeProperty.prototype._intervalsChanged = function () {\n  subscribeAll(this, this._eventHelper, this._definitionChanged, this._intervals);\n  this._definitionChanged.raiseEvent(this);\n};\nexport default CompositeProperty;","map":{"version":3,"names":["defined","Event","EventHelper","JulianDate","TimeIntervalCollection","Property","subscribeAll","property","eventHelper","definitionChanged","intervals","callback","raiseEvent","items","removeAll","length","i","interval","get","data","indexOf","add","CompositeProperty","_eventHelper","_definitionChanged","_intervals","changedEvent","addEventListener","prototype","_intervalsChanged","Object","defineProperties","isConstant","isEmpty","timeScratch","getValue","time","result","now","innerProperty","findDataForIntervalContainingDate","undefined","equals","other"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/engine/Source/DataSources/CompositeProperty.js"],"sourcesContent":["import defined from \"../Core/defined.js\";\nimport Event from \"../Core/Event.js\";\nimport EventHelper from \"../Core/EventHelper.js\";\nimport JulianDate from \"../Core/JulianDate.js\";\nimport TimeIntervalCollection from \"../Core/TimeIntervalCollection.js\";\nimport Property from \"./Property.js\";\n\nfunction subscribeAll(property, eventHelper, definitionChanged, intervals) {\n  function callback() {\n    definitionChanged.raiseEvent(property);\n  }\n  const items = [];\n  eventHelper.removeAll();\n  const length = intervals.length;\n  for (let i = 0; i < length; i++) {\n    const interval = intervals.get(i);\n    if (defined(interval.data) && items.indexOf(interval.data) === -1) {\n      eventHelper.add(interval.data.definitionChanged, callback);\n    }\n  }\n}\n\n/**\n * A {@link Property} which is defined by a {@link TimeIntervalCollection}, where the\n * data property of each {@link TimeInterval} is another Property instance which is\n * evaluated at the provided time.\n *\n * @alias CompositeProperty\n * @constructor\n *\n *\n * @example\n * const constantProperty = ...;\n * const sampledProperty = ...;\n *\n * //Create a composite property from two previously defined properties\n * //where the property is valid on August 1st, 2012 and uses a constant\n * //property for the first half of the day and a sampled property for the\n * //remaining half.\n * const composite = new Cesium.CompositeProperty();\n * composite.intervals.addInterval(Cesium.TimeInterval.fromIso8601({\n *     iso8601 : '2012-08-01T00:00:00.00Z/2012-08-01T12:00:00.00Z',\n *     data : constantProperty\n * }));\n * composite.intervals.addInterval(Cesium.TimeInterval.fromIso8601({\n *     iso8601 : '2012-08-01T12:00:00.00Z/2012-08-02T00:00:00.00Z',\n *     isStartIncluded : false,\n *     isStopIncluded : false,\n *     data : sampledProperty\n * }));\n *\n * @see CompositeMaterialProperty\n * @see CompositePositionProperty\n */\nfunction CompositeProperty() {\n  this._eventHelper = new EventHelper();\n  this._definitionChanged = new Event();\n  this._intervals = new TimeIntervalCollection();\n  this._intervals.changedEvent.addEventListener(\n    CompositeProperty.prototype._intervalsChanged,\n    this,\n  );\n}\n\nObject.defineProperties(CompositeProperty.prototype, {\n  /**\n   * Gets a value indicating if this property is constant.  A property is considered\n   * constant if getValue always returns the same result for the current definition.\n   * @memberof CompositeProperty.prototype\n   *\n   * @type {boolean}\n   * @readonly\n   */\n  isConstant: {\n    get: function () {\n      return this._intervals.isEmpty;\n    },\n  },\n  /**\n   * Gets the event that is raised whenever the definition of this property changes.\n   * The definition is changed whenever setValue is called with data different\n   * than the current value.\n   * @memberof CompositeProperty.prototype\n   *\n   * @type {Event}\n   * @readonly\n   */\n  definitionChanged: {\n    get: function () {\n      return this._definitionChanged;\n    },\n  },\n  /**\n   * Gets the interval collection.\n   * @memberof CompositeProperty.prototype\n   *\n   * @type {TimeIntervalCollection}\n   */\n  intervals: {\n    get: function () {\n      return this._intervals;\n    },\n  },\n});\n\nconst timeScratch = new JulianDate();\n\n/**\n * Gets the value of the property at the provided time.\n *\n * @param {JulianDate} [time=JulianDate.now()] The time for which to retrieve the value. If omitted, the current system time is used.\n * @param {object} [result] The object to store the value into, if omitted, a new instance is created and returned.\n * @returns {object} The modified result parameter or a new instance if the result parameter was not supplied.\n */\nCompositeProperty.prototype.getValue = function (time, result) {\n  if (!defined(time)) {\n    time = JulianDate.now(timeScratch);\n  }\n\n  const innerProperty = this._intervals.findDataForIntervalContainingDate(time);\n  if (defined(innerProperty)) {\n    return innerProperty.getValue(time, result);\n  }\n  return undefined;\n};\n\n/**\n * Compares this property to the provided property and returns\n * <code>true</code> if they are equal, <code>false</code> otherwise.\n *\n * @param {Property} [other] The other property.\n * @returns {boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\n */\nCompositeProperty.prototype.equals = function (other) {\n  return (\n    this === other || //\n    (other instanceof CompositeProperty && //\n      this._intervals.equals(other._intervals, Property.equals))\n  );\n};\n\n/**\n * @private\n */\nCompositeProperty.prototype._intervalsChanged = function () {\n  subscribeAll(\n    this,\n    this._eventHelper,\n    this._definitionChanged,\n    this._intervals,\n  );\n  this._definitionChanged.raiseEvent(this);\n};\nexport default CompositeProperty;\n"],"mappings":"AAAA,OAAOA,OAAO,MAAM,oBAAoB;AACxC,OAAOC,KAAK,MAAM,kBAAkB;AACpC,OAAOC,WAAW,MAAM,wBAAwB;AAChD,OAAOC,UAAU,MAAM,uBAAuB;AAC9C,OAAOC,sBAAsB,MAAM,mCAAmC;AACtE,OAAOC,QAAQ,MAAM,eAAe;AAEpC,SAASC,YAAYA,CAACC,QAAQ,EAAEC,WAAW,EAAEC,iBAAiB,EAAEC,SAAS,EAAE;EACzE,SAASC,QAAQA,CAAA,EAAG;IAClBF,iBAAiB,CAACG,UAAU,CAACL,QAAQ,CAAC;EACxC;EACA,MAAMM,KAAK,GAAG,EAAE;EAChBL,WAAW,CAACM,SAAS,CAAC,CAAC;EACvB,MAAMC,MAAM,GAAGL,SAAS,CAACK,MAAM;EAC/B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,MAAM,EAAEC,CAAC,EAAE,EAAE;IAC/B,MAAMC,QAAQ,GAAGP,SAAS,CAACQ,GAAG,CAACF,CAAC,CAAC;IACjC,IAAIhB,OAAO,CAACiB,QAAQ,CAACE,IAAI,CAAC,IAAIN,KAAK,CAACO,OAAO,CAACH,QAAQ,CAACE,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;MACjEX,WAAW,CAACa,GAAG,CAACJ,QAAQ,CAACE,IAAI,CAACV,iBAAiB,EAAEE,QAAQ,CAAC;IAC5D;EACF;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASW,iBAAiBA,CAAA,EAAG;EAC3B,IAAI,CAACC,YAAY,GAAG,IAAIrB,WAAW,CAAC,CAAC;EACrC,IAAI,CAACsB,kBAAkB,GAAG,IAAIvB,KAAK,CAAC,CAAC;EACrC,IAAI,CAACwB,UAAU,GAAG,IAAIrB,sBAAsB,CAAC,CAAC;EAC9C,IAAI,CAACqB,UAAU,CAACC,YAAY,CAACC,gBAAgB,CAC3CL,iBAAiB,CAACM,SAAS,CAACC,iBAAiB,EAC7C,IACF,CAAC;AACH;AAEAC,MAAM,CAACC,gBAAgB,CAACT,iBAAiB,CAACM,SAAS,EAAE;EACnD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACEI,UAAU,EAAE;IACVd,GAAG,EAAE,SAAAA,CAAA,EAAY;MACf,OAAO,IAAI,CAACO,UAAU,CAACQ,OAAO;IAChC;EACF,CAAC;EACD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACExB,iBAAiB,EAAE;IACjBS,GAAG,EAAE,SAAAA,CAAA,EAAY;MACf,OAAO,IAAI,CAACM,kBAAkB;IAChC;EACF,CAAC;EACD;AACF;AACA;AACA;AACA;AACA;EACEd,SAAS,EAAE;IACTQ,GAAG,EAAE,SAAAA,CAAA,EAAY;MACf,OAAO,IAAI,CAACO,UAAU;IACxB;EACF;AACF,CAAC,CAAC;AAEF,MAAMS,WAAW,GAAG,IAAI/B,UAAU,CAAC,CAAC;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACAmB,iBAAiB,CAACM,SAAS,CAACO,QAAQ,GAAG,UAAUC,IAAI,EAAEC,MAAM,EAAE;EAC7D,IAAI,CAACrC,OAAO,CAACoC,IAAI,CAAC,EAAE;IAClBA,IAAI,GAAGjC,UAAU,CAACmC,GAAG,CAACJ,WAAW,CAAC;EACpC;EAEA,MAAMK,aAAa,GAAG,IAAI,CAACd,UAAU,CAACe,iCAAiC,CAACJ,IAAI,CAAC;EAC7E,IAAIpC,OAAO,CAACuC,aAAa,CAAC,EAAE;IAC1B,OAAOA,aAAa,CAACJ,QAAQ,CAACC,IAAI,EAAEC,MAAM,CAAC;EAC7C;EACA,OAAOI,SAAS;AAClB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACAnB,iBAAiB,CAACM,SAAS,CAACc,MAAM,GAAG,UAAUC,KAAK,EAAE;EACpD,OACE,IAAI,KAAKA,KAAK;EAAI;EACjBA,KAAK,YAAYrB,iBAAiB;EAAI;EACrC,IAAI,CAACG,UAAU,CAACiB,MAAM,CAACC,KAAK,CAAClB,UAAU,EAAEpB,QAAQ,CAACqC,MAAM,CAAE;AAEhE,CAAC;;AAED;AACA;AACA;AACApB,iBAAiB,CAACM,SAAS,CAACC,iBAAiB,GAAG,YAAY;EAC1DvB,YAAY,CACV,IAAI,EACJ,IAAI,CAACiB,YAAY,EACjB,IAAI,CAACC,kBAAkB,EACvB,IAAI,CAACC,UACP,CAAC;EACD,IAAI,CAACD,kBAAkB,CAACZ,UAAU,CAAC,IAAI,CAAC;AAC1C,CAAC;AACD,eAAeU,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}