{"ast":null,"code":"import defined from \"../Core/defined.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport Intersect from \"../Core/Intersect.js\";\nimport Cesium3DTileOptimizationHint from \"./Cesium3DTileOptimizationHint.js\";\nimport Cesium3DTileRefine from \"./Cesium3DTileRefine.js\";\n\n/**\n * Traverses a {@link Cesium3DTileset} to determine which tiles to load and render.\n * This type describes an interface and is not intended to be instantiated directly.\n *\n * @alias Cesium3DTilesetTraversal\n * @constructor\n * @abstract\n *\n * @see Cesium3DTilesetBaseTraversal\n * @see Cesium3DTilesetSkipTraversal\n * @see Cesium3DTilesetMostDetailedTraversal\n *\n * @private\n */\nfunction Cesium3DTilesetTraversal() {}\n\n/**\n * Traverses a {@link Cesium3DTileset} to determine which tiles to load and render.\n *\n * @private\n * @param {Cesium3DTileset} tileset\n * @param {FrameState} frameState\n */\nCesium3DTilesetTraversal.selectTiles = function (tileset, frameState) {\n  DeveloperError.throwInstantiationError();\n};\n\n/**\n * Sort by farthest child first since this is going on a stack\n *\n * @private\n * @param {Cesium3DTile} a\n * @param {Cesium3DTile} b\n * @returns {number}\n */\nCesium3DTilesetTraversal.sortChildrenByDistanceToCamera = function (a, b) {\n  if (b._distanceToCamera === 0 && a._distanceToCamera === 0) {\n    return b._centerZDepth - a._centerZDepth;\n  }\n  return b._distanceToCamera - a._distanceToCamera;\n};\n\n/**\n * Determine if a tile can and should be traversed for children tiles that\n * would contribute to rendering the current view\n *\n * @private\n * @param {Cesium3DTile} tile\n * @returns {boolean}\n */\nCesium3DTilesetTraversal.canTraverse = function (tile) {\n  if (tile.children.length === 0) {\n    return false;\n  }\n  if (tile.hasTilesetContent || tile.hasImplicitContent) {\n    // Traverse external tileset to visit its root tile\n    // Don't traverse if the subtree is expired because it will be destroyed\n    return !tile.contentExpired;\n  }\n  return tile._screenSpaceError > tile.tileset.memoryAdjustedScreenSpaceError;\n};\n\n/**\n * Mark a tile as selected, and add it to the tileset's list of selected tiles\n *\n * @private\n * @param {Cesium3DTile} tile\n * @param {FrameState} frameState\n */\nCesium3DTilesetTraversal.selectTile = function (tile, frameState) {\n  if (tile.contentVisibility(frameState) === Intersect.OUTSIDE) {\n    return;\n  }\n  tile._wasSelectedLastFrame = true;\n  const {\n    content,\n    tileset\n  } = tile;\n  if (content.featurePropertiesDirty) {\n    // A feature's property in this tile changed, the tile needs to be re-styled.\n    content.featurePropertiesDirty = false;\n    tile.lastStyleTime = 0; // Force applying the style to this tile\n    tileset._selectedTilesToStyle.push(tile);\n  } else if (tile._selectedFrame < frameState.frameNumber - 1) {\n    // Tile is newly selected; it is selected this frame, but was not selected last frame.\n    tileset._selectedTilesToStyle.push(tile);\n    tile._wasSelectedLastFrame = false;\n  }\n  tile._selectedFrame = frameState.frameNumber;\n  tileset._selectedTiles.push(tile);\n};\n\n/**\n * @private\n * @param {Cesium3DTile} tile\n * @param {FrameState} frameState\n */\nCesium3DTilesetTraversal.visitTile = function (tile, frameState) {\n  ++tile.tileset._statistics.visited;\n  tile._visitedFrame = frameState.frameNumber;\n};\n\n/**\n * @private\n * @param {Cesium3DTile} tile\n * @param {FrameState} frameState\n */\nCesium3DTilesetTraversal.touchTile = function (tile, frameState) {\n  if (tile._touchedFrame === frameState.frameNumber) {\n    // Prevents another pass from touching the frame again\n    return;\n  }\n  tile.tileset._cache.touch(tile);\n  tile._touchedFrame = frameState.frameNumber;\n};\n\n/**\n * Add a tile to the list of requested tiles, if appropriate\n *\n * @private\n * @param {Cesium3DTile} tile\n * @param {FrameState} frameState\n */\nCesium3DTilesetTraversal.loadTile = function (tile, frameState) {\n  const {\n    tileset\n  } = tile;\n  if (tile._requestedFrame === frameState.frameNumber || !tile.hasUnloadedRenderableContent && !tile.contentExpired) {\n    return;\n  }\n  if (!isOnScreenLongEnough(tile, frameState)) {\n    return;\n  }\n  const cameraHasNotStoppedMovingLongEnough = frameState.camera.timeSinceMoved < tileset.foveatedTimeDelay;\n  if (tile.priorityDeferred && cameraHasNotStoppedMovingLongEnough) {\n    return;\n  }\n  tile._requestedFrame = frameState.frameNumber;\n  tileset._requestedTiles.push(tile);\n};\n\n/**\n * Prevent unnecessary loads while camera is moving by getting the ratio of travel distance to tile size.\n *\n * @private\n * @param {Cesium3DTile} tile\n * @param {FrameState} frameState\n * @returns {boolean}\n */\nfunction isOnScreenLongEnough(tile, frameState) {\n  const {\n    tileset\n  } = tile;\n  if (!tileset._cullRequestsWhileMoving) {\n    return true;\n  }\n  const {\n    positionWCDeltaMagnitude,\n    positionWCDeltaMagnitudeLastFrame\n  } = frameState.camera;\n  const deltaMagnitude = positionWCDeltaMagnitude !== 0.0 ? positionWCDeltaMagnitude : positionWCDeltaMagnitudeLastFrame;\n\n  // How do n frames of this movement compare to the tile's physical size.\n  const diameter = Math.max(tile.boundingSphere.radius * 2.0, 1.0);\n  const movementRatio = tileset.cullRequestsWhileMovingMultiplier * deltaMagnitude / diameter;\n  return movementRatio < 1.0;\n}\n\n/**\n * Reset some of the tile's flags and re-evaluate visibility and priority\n *\n * @private\n * @param {Cesium3DTile} tile\n * @param {FrameState} frameState\n */\nCesium3DTilesetTraversal.updateTile = function (tile, frameState) {\n  updateTileVisibility(tile, frameState);\n  tile.updateExpiration();\n  tile._wasMinPriorityChild = false;\n  tile._priorityHolder = tile;\n  updateMinimumMaximumPriority(tile);\n\n  // SkipLOD\n  tile._shouldSelect = false;\n  tile._finalResolution = true;\n};\n\n/**\n * @private\n * @param {Cesium3DTile} tile\n * @param {FrameState} frameState\n */\nfunction updateTileVisibility(tile, frameState) {\n  tile.updateVisibility(frameState);\n  if (!tile.isVisible) {\n    return;\n  }\n  const hasChildren = tile.children.length > 0;\n  if ((tile.hasTilesetContent || tile.hasImplicitContent) && hasChildren) {\n    // Use the root tile's visibility instead of this tile's visibility.\n    // The root tile may be culled by the children bounds optimization in which\n    // case this tile should also be culled.\n    const child = tile.children[0];\n    updateTileVisibility(child, frameState);\n    tile._visible = child._visible;\n    return;\n  }\n  if (meetsScreenSpaceErrorEarly(tile, frameState)) {\n    tile._visible = false;\n    return;\n  }\n\n  // Optimization - if none of the tile's children are visible then this tile isn't visible\n  const replace = tile.refine === Cesium3DTileRefine.REPLACE;\n  const useOptimization = tile._optimChildrenWithinParent === Cesium3DTileOptimizationHint.USE_OPTIMIZATION;\n  if (replace && useOptimization && hasChildren) {\n    if (!anyChildrenVisible(tile, frameState)) {\n      ++tile.tileset._statistics.numberOfTilesCulledWithChildrenUnion;\n      tile._visible = false;\n      return;\n    }\n  }\n}\n\n/**\n * @private\n * @param {Cesium3DTile} tile\n * @param {FrameState} frameState\n * @returns {boolean}\n */\nfunction meetsScreenSpaceErrorEarly(tile, frameState) {\n  const {\n    parent,\n    tileset\n  } = tile;\n  if (!defined(parent) || parent.hasTilesetContent || parent.hasImplicitContent || parent.refine !== Cesium3DTileRefine.ADD) {\n    return false;\n  }\n\n  // Use parent's geometric error with child's box to see if the tile already meet the SSE\n  return tile.getScreenSpaceError(frameState, true) <= tileset.memoryAdjustedScreenSpaceError;\n}\n\n/**\n * @private\n * @param {Cesium3DTile} tile\n * @param {FrameState} frameState\n * @returns {boolean}\n */\nfunction anyChildrenVisible(tile, frameState) {\n  let anyVisible = false;\n  const children = tile.children;\n  for (let i = 0; i < children.length; ++i) {\n    const child = children[i];\n    child.updateVisibility(frameState);\n    anyVisible = anyVisible || child.isVisible;\n  }\n  return anyVisible;\n}\n\n/**\n * @private\n * @param {Cesium3DTile} tile\n */\nfunction updateMinimumMaximumPriority(tile) {\n  const minimumPriority = tile.tileset._minimumPriority;\n  const maximumPriority = tile.tileset._maximumPriority;\n  const priorityHolder = tile._priorityHolder;\n  maximumPriority.distance = Math.max(priorityHolder._distanceToCamera, maximumPriority.distance);\n  minimumPriority.distance = Math.min(priorityHolder._distanceToCamera, minimumPriority.distance);\n  maximumPriority.depth = Math.max(tile._depth, maximumPriority.depth);\n  minimumPriority.depth = Math.min(tile._depth, minimumPriority.depth);\n  maximumPriority.foveatedFactor = Math.max(priorityHolder._foveatedFactor, maximumPriority.foveatedFactor);\n  minimumPriority.foveatedFactor = Math.min(priorityHolder._foveatedFactor, minimumPriority.foveatedFactor);\n  maximumPriority.reverseScreenSpaceError = Math.max(tile._priorityReverseScreenSpaceError, maximumPriority.reverseScreenSpaceError);\n  minimumPriority.reverseScreenSpaceError = Math.min(tile._priorityReverseScreenSpaceError, minimumPriority.reverseScreenSpaceError);\n}\nexport default Cesium3DTilesetTraversal;","map":{"version":3,"names":["defined","DeveloperError","Intersect","Cesium3DTileOptimizationHint","Cesium3DTileRefine","Cesium3DTilesetTraversal","selectTiles","tileset","frameState","throwInstantiationError","sortChildrenByDistanceToCamera","a","b","_distanceToCamera","_centerZDepth","canTraverse","tile","children","length","hasTilesetContent","hasImplicitContent","contentExpired","_screenSpaceError","memoryAdjustedScreenSpaceError","selectTile","contentVisibility","OUTSIDE","_wasSelectedLastFrame","content","featurePropertiesDirty","lastStyleTime","_selectedTilesToStyle","push","_selectedFrame","frameNumber","_selectedTiles","visitTile","_statistics","visited","_visitedFrame","touchTile","_touchedFrame","_cache","touch","loadTile","_requestedFrame","hasUnloadedRenderableContent","isOnScreenLongEnough","cameraHasNotStoppedMovingLongEnough","camera","timeSinceMoved","foveatedTimeDelay","priorityDeferred","_requestedTiles","_cullRequestsWhileMoving","positionWCDeltaMagnitude","positionWCDeltaMagnitudeLastFrame","deltaMagnitude","diameter","Math","max","boundingSphere","radius","movementRatio","cullRequestsWhileMovingMultiplier","updateTile","updateTileVisibility","updateExpiration","_wasMinPriorityChild","_priorityHolder","updateMinimumMaximumPriority","_shouldSelect","_finalResolution","updateVisibility","isVisible","hasChildren","child","_visible","meetsScreenSpaceErrorEarly","replace","refine","REPLACE","useOptimization","_optimChildrenWithinParent","USE_OPTIMIZATION","anyChildrenVisible","numberOfTilesCulledWithChildrenUnion","parent","ADD","getScreenSpaceError","anyVisible","i","minimumPriority","_minimumPriority","maximumPriority","_maximumPriority","priorityHolder","distance","min","depth","_depth","foveatedFactor","_foveatedFactor","reverseScreenSpaceError","_priorityReverseScreenSpaceError"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/engine/Source/Scene/Cesium3DTilesetTraversal.js"],"sourcesContent":["import defined from \"../Core/defined.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport Intersect from \"../Core/Intersect.js\";\nimport Cesium3DTileOptimizationHint from \"./Cesium3DTileOptimizationHint.js\";\nimport Cesium3DTileRefine from \"./Cesium3DTileRefine.js\";\n\n/**\n * Traverses a {@link Cesium3DTileset} to determine which tiles to load and render.\n * This type describes an interface and is not intended to be instantiated directly.\n *\n * @alias Cesium3DTilesetTraversal\n * @constructor\n * @abstract\n *\n * @see Cesium3DTilesetBaseTraversal\n * @see Cesium3DTilesetSkipTraversal\n * @see Cesium3DTilesetMostDetailedTraversal\n *\n * @private\n */\nfunction Cesium3DTilesetTraversal() {}\n\n/**\n * Traverses a {@link Cesium3DTileset} to determine which tiles to load and render.\n *\n * @private\n * @param {Cesium3DTileset} tileset\n * @param {FrameState} frameState\n */\nCesium3DTilesetTraversal.selectTiles = function (tileset, frameState) {\n  DeveloperError.throwInstantiationError();\n};\n\n/**\n * Sort by farthest child first since this is going on a stack\n *\n * @private\n * @param {Cesium3DTile} a\n * @param {Cesium3DTile} b\n * @returns {number}\n */\nCesium3DTilesetTraversal.sortChildrenByDistanceToCamera = function (a, b) {\n  if (b._distanceToCamera === 0 && a._distanceToCamera === 0) {\n    return b._centerZDepth - a._centerZDepth;\n  }\n\n  return b._distanceToCamera - a._distanceToCamera;\n};\n\n/**\n * Determine if a tile can and should be traversed for children tiles that\n * would contribute to rendering the current view\n *\n * @private\n * @param {Cesium3DTile} tile\n * @returns {boolean}\n */\nCesium3DTilesetTraversal.canTraverse = function (tile) {\n  if (tile.children.length === 0) {\n    return false;\n  }\n  if (tile.hasTilesetContent || tile.hasImplicitContent) {\n    // Traverse external tileset to visit its root tile\n    // Don't traverse if the subtree is expired because it will be destroyed\n    return !tile.contentExpired;\n  }\n  return tile._screenSpaceError > tile.tileset.memoryAdjustedScreenSpaceError;\n};\n\n/**\n * Mark a tile as selected, and add it to the tileset's list of selected tiles\n *\n * @private\n * @param {Cesium3DTile} tile\n * @param {FrameState} frameState\n */\nCesium3DTilesetTraversal.selectTile = function (tile, frameState) {\n  if (tile.contentVisibility(frameState) === Intersect.OUTSIDE) {\n    return;\n  }\n\n  tile._wasSelectedLastFrame = true;\n\n  const { content, tileset } = tile;\n  if (content.featurePropertiesDirty) {\n    // A feature's property in this tile changed, the tile needs to be re-styled.\n    content.featurePropertiesDirty = false;\n    tile.lastStyleTime = 0; // Force applying the style to this tile\n    tileset._selectedTilesToStyle.push(tile);\n  } else if (tile._selectedFrame < frameState.frameNumber - 1) {\n    // Tile is newly selected; it is selected this frame, but was not selected last frame.\n    tileset._selectedTilesToStyle.push(tile);\n    tile._wasSelectedLastFrame = false;\n  }\n\n  tile._selectedFrame = frameState.frameNumber;\n  tileset._selectedTiles.push(tile);\n};\n\n/**\n * @private\n * @param {Cesium3DTile} tile\n * @param {FrameState} frameState\n */\nCesium3DTilesetTraversal.visitTile = function (tile, frameState) {\n  ++tile.tileset._statistics.visited;\n  tile._visitedFrame = frameState.frameNumber;\n};\n\n/**\n * @private\n * @param {Cesium3DTile} tile\n * @param {FrameState} frameState\n */\nCesium3DTilesetTraversal.touchTile = function (tile, frameState) {\n  if (tile._touchedFrame === frameState.frameNumber) {\n    // Prevents another pass from touching the frame again\n    return;\n  }\n  tile.tileset._cache.touch(tile);\n  tile._touchedFrame = frameState.frameNumber;\n};\n\n/**\n * Add a tile to the list of requested tiles, if appropriate\n *\n * @private\n * @param {Cesium3DTile} tile\n * @param {FrameState} frameState\n */\nCesium3DTilesetTraversal.loadTile = function (tile, frameState) {\n  const { tileset } = tile;\n  if (\n    tile._requestedFrame === frameState.frameNumber ||\n    (!tile.hasUnloadedRenderableContent && !tile.contentExpired)\n  ) {\n    return;\n  }\n\n  if (!isOnScreenLongEnough(tile, frameState)) {\n    return;\n  }\n\n  const cameraHasNotStoppedMovingLongEnough =\n    frameState.camera.timeSinceMoved < tileset.foveatedTimeDelay;\n  if (tile.priorityDeferred && cameraHasNotStoppedMovingLongEnough) {\n    return;\n  }\n\n  tile._requestedFrame = frameState.frameNumber;\n  tileset._requestedTiles.push(tile);\n};\n\n/**\n * Prevent unnecessary loads while camera is moving by getting the ratio of travel distance to tile size.\n *\n * @private\n * @param {Cesium3DTile} tile\n * @param {FrameState} frameState\n * @returns {boolean}\n */\nfunction isOnScreenLongEnough(tile, frameState) {\n  const { tileset } = tile;\n  if (!tileset._cullRequestsWhileMoving) {\n    return true;\n  }\n\n  const { positionWCDeltaMagnitude, positionWCDeltaMagnitudeLastFrame } =\n    frameState.camera;\n  const deltaMagnitude =\n    positionWCDeltaMagnitude !== 0.0\n      ? positionWCDeltaMagnitude\n      : positionWCDeltaMagnitudeLastFrame;\n\n  // How do n frames of this movement compare to the tile's physical size.\n  const diameter = Math.max(tile.boundingSphere.radius * 2.0, 1.0);\n  const movementRatio =\n    (tileset.cullRequestsWhileMovingMultiplier * deltaMagnitude) / diameter;\n\n  return movementRatio < 1.0;\n}\n\n/**\n * Reset some of the tile's flags and re-evaluate visibility and priority\n *\n * @private\n * @param {Cesium3DTile} tile\n * @param {FrameState} frameState\n */\nCesium3DTilesetTraversal.updateTile = function (tile, frameState) {\n  updateTileVisibility(tile, frameState);\n  tile.updateExpiration();\n\n  tile._wasMinPriorityChild = false;\n  tile._priorityHolder = tile;\n  updateMinimumMaximumPriority(tile);\n\n  // SkipLOD\n  tile._shouldSelect = false;\n  tile._finalResolution = true;\n};\n\n/**\n * @private\n * @param {Cesium3DTile} tile\n * @param {FrameState} frameState\n */\nfunction updateTileVisibility(tile, frameState) {\n  tile.updateVisibility(frameState);\n\n  if (!tile.isVisible) {\n    return;\n  }\n\n  const hasChildren = tile.children.length > 0;\n  if ((tile.hasTilesetContent || tile.hasImplicitContent) && hasChildren) {\n    // Use the root tile's visibility instead of this tile's visibility.\n    // The root tile may be culled by the children bounds optimization in which\n    // case this tile should also be culled.\n    const child = tile.children[0];\n    updateTileVisibility(child, frameState);\n    tile._visible = child._visible;\n    return;\n  }\n\n  if (meetsScreenSpaceErrorEarly(tile, frameState)) {\n    tile._visible = false;\n    return;\n  }\n\n  // Optimization - if none of the tile's children are visible then this tile isn't visible\n  const replace = tile.refine === Cesium3DTileRefine.REPLACE;\n  const useOptimization =\n    tile._optimChildrenWithinParent ===\n    Cesium3DTileOptimizationHint.USE_OPTIMIZATION;\n  if (replace && useOptimization && hasChildren) {\n    if (!anyChildrenVisible(tile, frameState)) {\n      ++tile.tileset._statistics.numberOfTilesCulledWithChildrenUnion;\n      tile._visible = false;\n      return;\n    }\n  }\n}\n\n/**\n * @private\n * @param {Cesium3DTile} tile\n * @param {FrameState} frameState\n * @returns {boolean}\n */\nfunction meetsScreenSpaceErrorEarly(tile, frameState) {\n  const { parent, tileset } = tile;\n  if (\n    !defined(parent) ||\n    parent.hasTilesetContent ||\n    parent.hasImplicitContent ||\n    parent.refine !== Cesium3DTileRefine.ADD\n  ) {\n    return false;\n  }\n\n  // Use parent's geometric error with child's box to see if the tile already meet the SSE\n  return (\n    tile.getScreenSpaceError(frameState, true) <=\n    tileset.memoryAdjustedScreenSpaceError\n  );\n}\n\n/**\n * @private\n * @param {Cesium3DTile} tile\n * @param {FrameState} frameState\n * @returns {boolean}\n */\nfunction anyChildrenVisible(tile, frameState) {\n  let anyVisible = false;\n  const children = tile.children;\n  for (let i = 0; i < children.length; ++i) {\n    const child = children[i];\n    child.updateVisibility(frameState);\n    anyVisible = anyVisible || child.isVisible;\n  }\n  return anyVisible;\n}\n\n/**\n * @private\n * @param {Cesium3DTile} tile\n */\nfunction updateMinimumMaximumPriority(tile) {\n  const minimumPriority = tile.tileset._minimumPriority;\n  const maximumPriority = tile.tileset._maximumPriority;\n  const priorityHolder = tile._priorityHolder;\n\n  maximumPriority.distance = Math.max(\n    priorityHolder._distanceToCamera,\n    maximumPriority.distance,\n  );\n  minimumPriority.distance = Math.min(\n    priorityHolder._distanceToCamera,\n    minimumPriority.distance,\n  );\n  maximumPriority.depth = Math.max(tile._depth, maximumPriority.depth);\n  minimumPriority.depth = Math.min(tile._depth, minimumPriority.depth);\n  maximumPriority.foveatedFactor = Math.max(\n    priorityHolder._foveatedFactor,\n    maximumPriority.foveatedFactor,\n  );\n  minimumPriority.foveatedFactor = Math.min(\n    priorityHolder._foveatedFactor,\n    minimumPriority.foveatedFactor,\n  );\n  maximumPriority.reverseScreenSpaceError = Math.max(\n    tile._priorityReverseScreenSpaceError,\n    maximumPriority.reverseScreenSpaceError,\n  );\n  minimumPriority.reverseScreenSpaceError = Math.min(\n    tile._priorityReverseScreenSpaceError,\n    minimumPriority.reverseScreenSpaceError,\n  );\n}\n\nexport default Cesium3DTilesetTraversal;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}