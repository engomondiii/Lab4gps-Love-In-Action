{"ast":null,"code":"import knockout from \"../ThirdParty/knockout.js\";\nimport createCommand from \"../createCommand.js\";\n\n/**\n * The view model for {@link NavigationHelpButton}.\n * @alias NavigationHelpButtonViewModel\n * @constructor\n */\nfunction NavigationHelpButtonViewModel() {\n  /**\n   * Gets or sets whether the instructions are currently shown.  This property is observable.\n   * @type {boolean}\n   * @default false\n   */\n  this.showInstructions = false;\n  const that = this;\n  this._command = createCommand(function () {\n    that.showInstructions = !that.showInstructions;\n  });\n  this._showClick = createCommand(function () {\n    that._touch = false;\n  });\n  this._showTouch = createCommand(function () {\n    that._touch = true;\n  });\n  this._touch = false;\n\n  /**\n   * Gets or sets the tooltip.  This property is observable.\n   *\n   * @type {string}\n   */\n  this.tooltip = \"Navigation Instructions\";\n  knockout.track(this, [\"tooltip\", \"showInstructions\", \"_touch\"]);\n}\nObject.defineProperties(NavigationHelpButtonViewModel.prototype, {\n  /**\n   * Gets the Command that is executed when the button is clicked.\n   * @memberof NavigationHelpButtonViewModel.prototype\n   *\n   * @type {Command}\n   */\n  command: {\n    get: function () {\n      return this._command;\n    }\n  },\n  /**\n   * Gets the Command that is executed when the mouse instructions should be shown.\n   * @memberof NavigationHelpButtonViewModel.prototype\n   *\n   * @type {Command}\n   */\n  showClick: {\n    get: function () {\n      return this._showClick;\n    }\n  },\n  /**\n   * Gets the Command that is executed when the touch instructions should be shown.\n   * @memberof NavigationHelpButtonViewModel.prototype\n   *\n   * @type {Command}\n   */\n  showTouch: {\n    get: function () {\n      return this._showTouch;\n    }\n  }\n});\nexport default NavigationHelpButtonViewModel;","map":{"version":3,"names":["knockout","createCommand","NavigationHelpButtonViewModel","showInstructions","that","_command","_showClick","_touch","_showTouch","tooltip","track","Object","defineProperties","prototype","command","get","showClick","showTouch"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/widgets/Source/NavigationHelpButton/NavigationHelpButtonViewModel.js"],"sourcesContent":["import knockout from \"../ThirdParty/knockout.js\";\nimport createCommand from \"../createCommand.js\";\n\n/**\n * The view model for {@link NavigationHelpButton}.\n * @alias NavigationHelpButtonViewModel\n * @constructor\n */\nfunction NavigationHelpButtonViewModel() {\n  /**\n   * Gets or sets whether the instructions are currently shown.  This property is observable.\n   * @type {boolean}\n   * @default false\n   */\n  this.showInstructions = false;\n\n  const that = this;\n  this._command = createCommand(function () {\n    that.showInstructions = !that.showInstructions;\n  });\n  this._showClick = createCommand(function () {\n    that._touch = false;\n  });\n  this._showTouch = createCommand(function () {\n    that._touch = true;\n  });\n\n  this._touch = false;\n\n  /**\n   * Gets or sets the tooltip.  This property is observable.\n   *\n   * @type {string}\n   */\n  this.tooltip = \"Navigation Instructions\";\n\n  knockout.track(this, [\"tooltip\", \"showInstructions\", \"_touch\"]);\n}\n\nObject.defineProperties(NavigationHelpButtonViewModel.prototype, {\n  /**\n   * Gets the Command that is executed when the button is clicked.\n   * @memberof NavigationHelpButtonViewModel.prototype\n   *\n   * @type {Command}\n   */\n  command: {\n    get: function () {\n      return this._command;\n    },\n  },\n\n  /**\n   * Gets the Command that is executed when the mouse instructions should be shown.\n   * @memberof NavigationHelpButtonViewModel.prototype\n   *\n   * @type {Command}\n   */\n  showClick: {\n    get: function () {\n      return this._showClick;\n    },\n  },\n\n  /**\n   * Gets the Command that is executed when the touch instructions should be shown.\n   * @memberof NavigationHelpButtonViewModel.prototype\n   *\n   * @type {Command}\n   */\n  showTouch: {\n    get: function () {\n      return this._showTouch;\n    },\n  },\n});\nexport default NavigationHelpButtonViewModel;\n"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,2BAA2B;AAChD,OAAOC,aAAa,MAAM,qBAAqB;;AAE/C;AACA;AACA;AACA;AACA;AACA,SAASC,6BAA6BA,CAAA,EAAG;EACvC;AACF;AACA;AACA;AACA;EACE,IAAI,CAACC,gBAAgB,GAAG,KAAK;EAE7B,MAAMC,IAAI,GAAG,IAAI;EACjB,IAAI,CAACC,QAAQ,GAAGJ,aAAa,CAAC,YAAY;IACxCG,IAAI,CAACD,gBAAgB,GAAG,CAACC,IAAI,CAACD,gBAAgB;EAChD,CAAC,CAAC;EACF,IAAI,CAACG,UAAU,GAAGL,aAAa,CAAC,YAAY;IAC1CG,IAAI,CAACG,MAAM,GAAG,KAAK;EACrB,CAAC,CAAC;EACF,IAAI,CAACC,UAAU,GAAGP,aAAa,CAAC,YAAY;IAC1CG,IAAI,CAACG,MAAM,GAAG,IAAI;EACpB,CAAC,CAAC;EAEF,IAAI,CAACA,MAAM,GAAG,KAAK;;EAEnB;AACF;AACA;AACA;AACA;EACE,IAAI,CAACE,OAAO,GAAG,yBAAyB;EAExCT,QAAQ,CAACU,KAAK,CAAC,IAAI,EAAE,CAAC,SAAS,EAAE,kBAAkB,EAAE,QAAQ,CAAC,CAAC;AACjE;AAEAC,MAAM,CAACC,gBAAgB,CAACV,6BAA6B,CAACW,SAAS,EAAE;EAC/D;AACF;AACA;AACA;AACA;AACA;EACEC,OAAO,EAAE;IACPC,GAAG,EAAE,SAAAA,CAAA,EAAY;MACf,OAAO,IAAI,CAACV,QAAQ;IACtB;EACF,CAAC;EAED;AACF;AACA;AACA;AACA;AACA;EACEW,SAAS,EAAE;IACTD,GAAG,EAAE,SAAAA,CAAA,EAAY;MACf,OAAO,IAAI,CAACT,UAAU;IACxB;EACF,CAAC;EAED;AACF;AACA;AACA;AACA;AACA;EACEW,SAAS,EAAE;IACTF,GAAG,EAAE,SAAAA,CAAA,EAAY;MACf,OAAO,IAAI,CAACP,UAAU;IACxB;EACF;AACF,CAAC,CAAC;AACF,eAAeN,6BAA6B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}