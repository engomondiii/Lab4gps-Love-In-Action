{"ast":null,"code":"import defaultValue from \"./defaultValue.js\";\nimport defined from \"./defined.js\";\nimport DeveloperError from \"./DeveloperError.js\";\nconst warnings = {};\n\n/**\n * Logs a one time message to the console.  Use this function instead of\n * <code>console.log</code> directly since this does not log duplicate messages\n * unless it is called from multiple workers.\n *\n * @function oneTimeWarning\n *\n * @param {string} identifier The unique identifier for this warning.\n * @param {string} [message=identifier] The message to log to the console.\n *\n * @example\n * for(let i=0;i<foo.length;++i) {\n *    if (!defined(foo[i].bar)) {\n *       // Something that can be recovered from but may happen a lot\n *       oneTimeWarning('foo.bar undefined', 'foo.bar is undefined. Setting to 0.');\n *       foo[i].bar = 0;\n *       // ...\n *    }\n * }\n *\n * @private\n */\nfunction oneTimeWarning(identifier, message) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(identifier)) {\n    throw new DeveloperError(\"identifier is required.\");\n  }\n  //>>includeEnd('debug');\n\n  if (!defined(warnings[identifier])) {\n    warnings[identifier] = true;\n    console.warn(defaultValue(message, identifier));\n  }\n}\noneTimeWarning.geometryOutlines = \"Entity geometry outlines are unsupported on terrain. Outlines will be disabled. To enable outlines, disable geometry terrain clamping by explicitly setting height to 0.\";\noneTimeWarning.geometryZIndex = \"Entity geometry with zIndex are unsupported when height or extrudedHeight are defined.  zIndex will be ignored\";\noneTimeWarning.geometryHeightReference = \"Entity corridor, ellipse, polygon or rectangle with heightReference must also have a defined height.  heightReference will be ignored\";\noneTimeWarning.geometryExtrudedHeightReference = \"Entity corridor, ellipse, polygon or rectangle with extrudedHeightReference must also have a defined extrudedHeight.  extrudedHeightReference will be ignored\";\nexport default oneTimeWarning;","map":{"version":3,"names":["defaultValue","defined","DeveloperError","warnings","oneTimeWarning","identifier","message","console","warn","geometryOutlines","geometryZIndex","geometryHeightReference","geometryExtrudedHeightReference"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/engine/Source/Core/oneTimeWarning.js"],"sourcesContent":["import defaultValue from \"./defaultValue.js\";\nimport defined from \"./defined.js\";\nimport DeveloperError from \"./DeveloperError.js\";\n\nconst warnings = {};\n\n/**\n * Logs a one time message to the console.  Use this function instead of\n * <code>console.log</code> directly since this does not log duplicate messages\n * unless it is called from multiple workers.\n *\n * @function oneTimeWarning\n *\n * @param {string} identifier The unique identifier for this warning.\n * @param {string} [message=identifier] The message to log to the console.\n *\n * @example\n * for(let i=0;i<foo.length;++i) {\n *    if (!defined(foo[i].bar)) {\n *       // Something that can be recovered from but may happen a lot\n *       oneTimeWarning('foo.bar undefined', 'foo.bar is undefined. Setting to 0.');\n *       foo[i].bar = 0;\n *       // ...\n *    }\n * }\n *\n * @private\n */\nfunction oneTimeWarning(identifier, message) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(identifier)) {\n    throw new DeveloperError(\"identifier is required.\");\n  }\n  //>>includeEnd('debug');\n\n  if (!defined(warnings[identifier])) {\n    warnings[identifier] = true;\n    console.warn(defaultValue(message, identifier));\n  }\n}\n\noneTimeWarning.geometryOutlines =\n  \"Entity geometry outlines are unsupported on terrain. Outlines will be disabled. To enable outlines, disable geometry terrain clamping by explicitly setting height to 0.\";\n\noneTimeWarning.geometryZIndex =\n  \"Entity geometry with zIndex are unsupported when height or extrudedHeight are defined.  zIndex will be ignored\";\n\noneTimeWarning.geometryHeightReference =\n  \"Entity corridor, ellipse, polygon or rectangle with heightReference must also have a defined height.  heightReference will be ignored\";\noneTimeWarning.geometryExtrudedHeightReference =\n  \"Entity corridor, ellipse, polygon or rectangle with extrudedHeightReference must also have a defined extrudedHeight.  extrudedHeightReference will be ignored\";\nexport default oneTimeWarning;\n"],"mappings":"AAAA,OAAOA,YAAY,MAAM,mBAAmB;AAC5C,OAAOC,OAAO,MAAM,cAAc;AAClC,OAAOC,cAAc,MAAM,qBAAqB;AAEhD,MAAMC,QAAQ,GAAG,CAAC,CAAC;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,cAAcA,CAACC,UAAU,EAAEC,OAAO,EAAE;EAC3C;EACA,IAAI,CAACL,OAAO,CAACI,UAAU,CAAC,EAAE;IACxB,MAAM,IAAIH,cAAc,CAAC,yBAAyB,CAAC;EACrD;EACA;;EAEA,IAAI,CAACD,OAAO,CAACE,QAAQ,CAACE,UAAU,CAAC,CAAC,EAAE;IAClCF,QAAQ,CAACE,UAAU,CAAC,GAAG,IAAI;IAC3BE,OAAO,CAACC,IAAI,CAACR,YAAY,CAACM,OAAO,EAAED,UAAU,CAAC,CAAC;EACjD;AACF;AAEAD,cAAc,CAACK,gBAAgB,GAC7B,0KAA0K;AAE5KL,cAAc,CAACM,cAAc,GAC3B,gHAAgH;AAElHN,cAAc,CAACO,uBAAuB,GACpC,uIAAuI;AACzIP,cAAc,CAACQ,+BAA+B,GAC5C,+JAA+J;AACjK,eAAeR,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}