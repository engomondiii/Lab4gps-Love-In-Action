{"ast":null,"code":"import DeveloperError from \"../Core/DeveloperError.js\";\n\n/**\n * If element is a string, look up the element in the DOM by ID.  Otherwise return element.\n *\n * @private\n *\n * @exception {DeveloperError} Element with id \"id\" does not exist in the document.\n */\nfunction getElement(element) {\n  if (typeof element === \"string\") {\n    const foundElement = document.getElementById(element);\n\n    //>>includeStart('debug', pragmas.debug);\n    if (foundElement === null) {\n      throw new DeveloperError(`Element with id \"${element}\" does not exist in the document.`);\n    }\n    //>>includeEnd('debug');\n\n    element = foundElement;\n  }\n  return element;\n}\nexport default getElement;","map":{"version":3,"names":["DeveloperError","getElement","element","foundElement","document","getElementById"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/engine/Source/DataSources/getElement.js"],"sourcesContent":["import DeveloperError from \"../Core/DeveloperError.js\";\n\n/**\n * If element is a string, look up the element in the DOM by ID.  Otherwise return element.\n *\n * @private\n *\n * @exception {DeveloperError} Element with id \"id\" does not exist in the document.\n */\nfunction getElement(element) {\n  if (typeof element === \"string\") {\n    const foundElement = document.getElementById(element);\n\n    //>>includeStart('debug', pragmas.debug);\n    if (foundElement === null) {\n      throw new DeveloperError(\n        `Element with id \"${element}\" does not exist in the document.`,\n      );\n    }\n    //>>includeEnd('debug');\n\n    element = foundElement;\n  }\n  return element;\n}\nexport default getElement;\n"],"mappings":"AAAA,OAAOA,cAAc,MAAM,2BAA2B;;AAEtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,UAAUA,CAACC,OAAO,EAAE;EAC3B,IAAI,OAAOA,OAAO,KAAK,QAAQ,EAAE;IAC/B,MAAMC,YAAY,GAAGC,QAAQ,CAACC,cAAc,CAACH,OAAO,CAAC;;IAErD;IACA,IAAIC,YAAY,KAAK,IAAI,EAAE;MACzB,MAAM,IAAIH,cAAc,CACtB,oBAAoBE,OAAO,mCAC7B,CAAC;IACH;IACA;;IAEAA,OAAO,GAAGC,YAAY;EACxB;EACA,OAAOD,OAAO;AAChB;AACA,eAAeD,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}