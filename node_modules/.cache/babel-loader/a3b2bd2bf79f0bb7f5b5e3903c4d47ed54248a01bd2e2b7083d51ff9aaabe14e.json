{"ast":null,"code":"import Cartesian2 from \"./Cartesian2.js\";\nimport Cartesian3 from \"./Cartesian3.js\";\nimport Check from \"./Check.js\";\nimport Matrix3 from \"./Matrix3.js\";\nimport OrientedBoundingBox from \"./OrientedBoundingBox.js\";\n\n/**\n * @private\n */\nconst CoplanarPolygonGeometryLibrary = {};\nconst scratchIntersectionPoint = new Cartesian3();\nconst scratchXAxis = new Cartesian3();\nconst scratchYAxis = new Cartesian3();\nconst scratchZAxis = new Cartesian3();\nconst obbScratch = new OrientedBoundingBox();\nCoplanarPolygonGeometryLibrary.validOutline = function (positions) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.defined(\"positions\", positions);\n  //>>includeEnd('debug');\n\n  const orientedBoundingBox = OrientedBoundingBox.fromPoints(positions, obbScratch);\n  const halfAxes = orientedBoundingBox.halfAxes;\n  const xAxis = Matrix3.getColumn(halfAxes, 0, scratchXAxis);\n  const yAxis = Matrix3.getColumn(halfAxes, 1, scratchYAxis);\n  const zAxis = Matrix3.getColumn(halfAxes, 2, scratchZAxis);\n  const xMag = Cartesian3.magnitude(xAxis);\n  const yMag = Cartesian3.magnitude(yAxis);\n  const zMag = Cartesian3.magnitude(zAxis);\n\n  // If all the points are on a line return undefined because we can't draw a polygon\n  return !(xMag === 0 && (yMag === 0 || zMag === 0) || yMag === 0 && zMag === 0);\n};\n\n// call after removeDuplicates\nCoplanarPolygonGeometryLibrary.computeProjectTo2DArguments = function (positions, centerResult, planeAxis1Result, planeAxis2Result) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.defined(\"positions\", positions);\n  Check.defined(\"centerResult\", centerResult);\n  Check.defined(\"planeAxis1Result\", planeAxis1Result);\n  Check.defined(\"planeAxis2Result\", planeAxis2Result);\n  //>>includeEnd('debug');\n\n  const orientedBoundingBox = OrientedBoundingBox.fromPoints(positions, obbScratch);\n  const halfAxes = orientedBoundingBox.halfAxes;\n  const xAxis = Matrix3.getColumn(halfAxes, 0, scratchXAxis);\n  const yAxis = Matrix3.getColumn(halfAxes, 1, scratchYAxis);\n  const zAxis = Matrix3.getColumn(halfAxes, 2, scratchZAxis);\n  const xMag = Cartesian3.magnitude(xAxis);\n  const yMag = Cartesian3.magnitude(yAxis);\n  const zMag = Cartesian3.magnitude(zAxis);\n  const min = Math.min(xMag, yMag, zMag);\n\n  // If all the points are on a line return undefined because we can't draw a polygon\n  if (xMag === 0 && (yMag === 0 || zMag === 0) || yMag === 0 && zMag === 0) {\n    return false;\n  }\n  let planeAxis1;\n  let planeAxis2;\n  if (min === yMag || min === zMag) {\n    planeAxis1 = xAxis;\n  }\n  if (min === xMag) {\n    planeAxis1 = yAxis;\n  } else if (min === zMag) {\n    planeAxis2 = yAxis;\n  }\n  if (min === xMag || min === yMag) {\n    planeAxis2 = zAxis;\n  }\n  Cartesian3.normalize(planeAxis1, planeAxis1Result);\n  Cartesian3.normalize(planeAxis2, planeAxis2Result);\n  Cartesian3.clone(orientedBoundingBox.center, centerResult);\n  return true;\n};\nfunction projectTo2D(position, center, axis1, axis2, result) {\n  const v = Cartesian3.subtract(position, center, scratchIntersectionPoint);\n  const x = Cartesian3.dot(axis1, v);\n  const y = Cartesian3.dot(axis2, v);\n  return Cartesian2.fromElements(x, y, result);\n}\nCoplanarPolygonGeometryLibrary.createProjectPointsTo2DFunction = function (center, axis1, axis2) {\n  return function (positions) {\n    const positionResults = new Array(positions.length);\n    for (let i = 0; i < positions.length; i++) {\n      positionResults[i] = projectTo2D(positions[i], center, axis1, axis2);\n    }\n    return positionResults;\n  };\n};\nCoplanarPolygonGeometryLibrary.createProjectPointTo2DFunction = function (center, axis1, axis2) {\n  return function (position, result) {\n    return projectTo2D(position, center, axis1, axis2, result);\n  };\n};\nexport default CoplanarPolygonGeometryLibrary;","map":{"version":3,"names":["Cartesian2","Cartesian3","Check","Matrix3","OrientedBoundingBox","CoplanarPolygonGeometryLibrary","scratchIntersectionPoint","scratchXAxis","scratchYAxis","scratchZAxis","obbScratch","validOutline","positions","defined","orientedBoundingBox","fromPoints","halfAxes","xAxis","getColumn","yAxis","zAxis","xMag","magnitude","yMag","zMag","computeProjectTo2DArguments","centerResult","planeAxis1Result","planeAxis2Result","min","Math","planeAxis1","planeAxis2","normalize","clone","center","projectTo2D","position","axis1","axis2","result","v","subtract","x","dot","y","fromElements","createProjectPointsTo2DFunction","positionResults","Array","length","i","createProjectPointTo2DFunction"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/engine/Source/Core/CoplanarPolygonGeometryLibrary.js"],"sourcesContent":["import Cartesian2 from \"./Cartesian2.js\";\nimport Cartesian3 from \"./Cartesian3.js\";\nimport Check from \"./Check.js\";\nimport Matrix3 from \"./Matrix3.js\";\nimport OrientedBoundingBox from \"./OrientedBoundingBox.js\";\n\n/**\n * @private\n */\nconst CoplanarPolygonGeometryLibrary = {};\n\nconst scratchIntersectionPoint = new Cartesian3();\nconst scratchXAxis = new Cartesian3();\nconst scratchYAxis = new Cartesian3();\nconst scratchZAxis = new Cartesian3();\nconst obbScratch = new OrientedBoundingBox();\n\nCoplanarPolygonGeometryLibrary.validOutline = function (positions) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.defined(\"positions\", positions);\n  //>>includeEnd('debug');\n\n  const orientedBoundingBox = OrientedBoundingBox.fromPoints(\n    positions,\n    obbScratch,\n  );\n  const halfAxes = orientedBoundingBox.halfAxes;\n  const xAxis = Matrix3.getColumn(halfAxes, 0, scratchXAxis);\n  const yAxis = Matrix3.getColumn(halfAxes, 1, scratchYAxis);\n  const zAxis = Matrix3.getColumn(halfAxes, 2, scratchZAxis);\n\n  const xMag = Cartesian3.magnitude(xAxis);\n  const yMag = Cartesian3.magnitude(yAxis);\n  const zMag = Cartesian3.magnitude(zAxis);\n\n  // If all the points are on a line return undefined because we can't draw a polygon\n  return !(\n    (xMag === 0 && (yMag === 0 || zMag === 0)) ||\n    (yMag === 0 && zMag === 0)\n  );\n};\n\n// call after removeDuplicates\nCoplanarPolygonGeometryLibrary.computeProjectTo2DArguments = function (\n  positions,\n  centerResult,\n  planeAxis1Result,\n  planeAxis2Result,\n) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.defined(\"positions\", positions);\n  Check.defined(\"centerResult\", centerResult);\n  Check.defined(\"planeAxis1Result\", planeAxis1Result);\n  Check.defined(\"planeAxis2Result\", planeAxis2Result);\n  //>>includeEnd('debug');\n\n  const orientedBoundingBox = OrientedBoundingBox.fromPoints(\n    positions,\n    obbScratch,\n  );\n  const halfAxes = orientedBoundingBox.halfAxes;\n  const xAxis = Matrix3.getColumn(halfAxes, 0, scratchXAxis);\n  const yAxis = Matrix3.getColumn(halfAxes, 1, scratchYAxis);\n  const zAxis = Matrix3.getColumn(halfAxes, 2, scratchZAxis);\n\n  const xMag = Cartesian3.magnitude(xAxis);\n  const yMag = Cartesian3.magnitude(yAxis);\n  const zMag = Cartesian3.magnitude(zAxis);\n  const min = Math.min(xMag, yMag, zMag);\n\n  // If all the points are on a line return undefined because we can't draw a polygon\n  if (\n    (xMag === 0 && (yMag === 0 || zMag === 0)) ||\n    (yMag === 0 && zMag === 0)\n  ) {\n    return false;\n  }\n\n  let planeAxis1;\n  let planeAxis2;\n\n  if (min === yMag || min === zMag) {\n    planeAxis1 = xAxis;\n  }\n  if (min === xMag) {\n    planeAxis1 = yAxis;\n  } else if (min === zMag) {\n    planeAxis2 = yAxis;\n  }\n  if (min === xMag || min === yMag) {\n    planeAxis2 = zAxis;\n  }\n\n  Cartesian3.normalize(planeAxis1, planeAxis1Result);\n  Cartesian3.normalize(planeAxis2, planeAxis2Result);\n  Cartesian3.clone(orientedBoundingBox.center, centerResult);\n  return true;\n};\n\nfunction projectTo2D(position, center, axis1, axis2, result) {\n  const v = Cartesian3.subtract(position, center, scratchIntersectionPoint);\n  const x = Cartesian3.dot(axis1, v);\n  const y = Cartesian3.dot(axis2, v);\n\n  return Cartesian2.fromElements(x, y, result);\n}\n\nCoplanarPolygonGeometryLibrary.createProjectPointsTo2DFunction = function (\n  center,\n  axis1,\n  axis2,\n) {\n  return function (positions) {\n    const positionResults = new Array(positions.length);\n    for (let i = 0; i < positions.length; i++) {\n      positionResults[i] = projectTo2D(positions[i], center, axis1, axis2);\n    }\n\n    return positionResults;\n  };\n};\n\nCoplanarPolygonGeometryLibrary.createProjectPointTo2DFunction = function (\n  center,\n  axis1,\n  axis2,\n) {\n  return function (position, result) {\n    return projectTo2D(position, center, axis1, axis2, result);\n  };\n};\nexport default CoplanarPolygonGeometryLibrary;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}