{"ast":null,"code":"import knockout from \"./ThirdParty/knockout.js\";\n\n/**\n * Subscribe to a Knockout observable ES5 property, and immediately fire\n * the callback with the current value of the property.\n *\n * @private\n *\n * @function subscribeAndEvaluate\n *\n * @param {object} owner The object containing the observable property.\n * @param {string} observablePropertyName The name of the observable property.\n * @param {Function} callback The callback function.\n * @param {object} [target] The value of this in the callback function.\n * @param {string} [event='change'] The name of the event to receive notification for.\n * @returns The subscription object from Knockout which can be used to dispose the subscription later.\n */\nfunction subscribeAndEvaluate(owner, observablePropertyName, callback, target, event) {\n  callback.call(target, owner[observablePropertyName]);\n  return knockout.getObservable(owner, observablePropertyName).subscribe(callback, target, event);\n}\nexport default subscribeAndEvaluate;","map":{"version":3,"names":["knockout","subscribeAndEvaluate","owner","observablePropertyName","callback","target","event","call","getObservable","subscribe"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/widgets/Source/subscribeAndEvaluate.js"],"sourcesContent":["import knockout from \"./ThirdParty/knockout.js\";\n\n/**\n * Subscribe to a Knockout observable ES5 property, and immediately fire\n * the callback with the current value of the property.\n *\n * @private\n *\n * @function subscribeAndEvaluate\n *\n * @param {object} owner The object containing the observable property.\n * @param {string} observablePropertyName The name of the observable property.\n * @param {Function} callback The callback function.\n * @param {object} [target] The value of this in the callback function.\n * @param {string} [event='change'] The name of the event to receive notification for.\n * @returns The subscription object from Knockout which can be used to dispose the subscription later.\n */\nfunction subscribeAndEvaluate(\n  owner,\n  observablePropertyName,\n  callback,\n  target,\n  event,\n) {\n  callback.call(target, owner[observablePropertyName]);\n  return knockout\n    .getObservable(owner, observablePropertyName)\n    .subscribe(callback, target, event);\n}\nexport default subscribeAndEvaluate;\n"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,0BAA0B;;AAE/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,oBAAoBA,CAC3BC,KAAK,EACLC,sBAAsB,EACtBC,QAAQ,EACRC,MAAM,EACNC,KAAK,EACL;EACAF,QAAQ,CAACG,IAAI,CAACF,MAAM,EAAEH,KAAK,CAACC,sBAAsB,CAAC,CAAC;EACpD,OAAOH,QAAQ,CACZQ,aAAa,CAACN,KAAK,EAAEC,sBAAsB,CAAC,CAC5CM,SAAS,CAACL,QAAQ,EAAEC,MAAM,EAAEC,KAAK,CAAC;AACvC;AACA,eAAeL,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}