{"ast":null,"code":"import BlendEquation from \"./BlendEquation.js\";\nimport BlendFunction from \"./BlendFunction.js\";\n\n/**\n * The blending state combines {@link BlendEquation} and {@link BlendFunction} and the\n * <code>enabled</code> flag to define the full blending state for combining source and\n * destination fragments when rendering.\n * <p>\n * This is a helper when using custom render states with {@link Appearance#renderState}.\n * </p>\n *\n * @namespace\n */\nconst BlendingState = {\n  /**\n   * Blending is disabled.\n   *\n   * @type {object}\n   * @constant\n   */\n  DISABLED: Object.freeze({\n    enabled: false\n  }),\n  /**\n   * Blending is enabled using alpha blending, <code>source(source.alpha) + destination(1 - source.alpha)</code>.\n   *\n   * @type {object}\n   * @constant\n   */\n  ALPHA_BLEND: Object.freeze({\n    enabled: true,\n    equationRgb: BlendEquation.ADD,\n    equationAlpha: BlendEquation.ADD,\n    functionSourceRgb: BlendFunction.SOURCE_ALPHA,\n    functionSourceAlpha: BlendFunction.ONE,\n    functionDestinationRgb: BlendFunction.ONE_MINUS_SOURCE_ALPHA,\n    functionDestinationAlpha: BlendFunction.ONE_MINUS_SOURCE_ALPHA\n  }),\n  /**\n   * Blending is enabled using alpha blending with premultiplied alpha, <code>source + destination(1 - source.alpha)</code>.\n   *\n   * @type {object}\n   * @constant\n   */\n  PRE_MULTIPLIED_ALPHA_BLEND: Object.freeze({\n    enabled: true,\n    equationRgb: BlendEquation.ADD,\n    equationAlpha: BlendEquation.ADD,\n    functionSourceRgb: BlendFunction.ONE,\n    functionSourceAlpha: BlendFunction.ONE,\n    functionDestinationRgb: BlendFunction.ONE_MINUS_SOURCE_ALPHA,\n    functionDestinationAlpha: BlendFunction.ONE_MINUS_SOURCE_ALPHA\n  }),\n  /**\n   * Blending is enabled using additive blending, <code>source(source.alpha) + destination</code>.\n   *\n   * @type {object}\n   * @constant\n   */\n  ADDITIVE_BLEND: Object.freeze({\n    enabled: true,\n    equationRgb: BlendEquation.ADD,\n    equationAlpha: BlendEquation.ADD,\n    functionSourceRgb: BlendFunction.SOURCE_ALPHA,\n    functionSourceAlpha: BlendFunction.ONE,\n    functionDestinationRgb: BlendFunction.ONE,\n    functionDestinationAlpha: BlendFunction.ONE\n  })\n};\nexport default Object.freeze(BlendingState);","map":{"version":3,"names":["BlendEquation","BlendFunction","BlendingState","DISABLED","Object","freeze","enabled","ALPHA_BLEND","equationRgb","ADD","equationAlpha","functionSourceRgb","SOURCE_ALPHA","functionSourceAlpha","ONE","functionDestinationRgb","ONE_MINUS_SOURCE_ALPHA","functionDestinationAlpha","PRE_MULTIPLIED_ALPHA_BLEND","ADDITIVE_BLEND"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/engine/Source/Scene/BlendingState.js"],"sourcesContent":["import BlendEquation from \"./BlendEquation.js\";\nimport BlendFunction from \"./BlendFunction.js\";\n\n/**\n * The blending state combines {@link BlendEquation} and {@link BlendFunction} and the\n * <code>enabled</code> flag to define the full blending state for combining source and\n * destination fragments when rendering.\n * <p>\n * This is a helper when using custom render states with {@link Appearance#renderState}.\n * </p>\n *\n * @namespace\n */\nconst BlendingState = {\n  /**\n   * Blending is disabled.\n   *\n   * @type {object}\n   * @constant\n   */\n  DISABLED: Object.freeze({\n    enabled: false,\n  }),\n\n  /**\n   * Blending is enabled using alpha blending, <code>source(source.alpha) + destination(1 - source.alpha)</code>.\n   *\n   * @type {object}\n   * @constant\n   */\n  ALPHA_BLEND: Object.freeze({\n    enabled: true,\n    equationRgb: BlendEquation.ADD,\n    equationAlpha: BlendEquation.ADD,\n    functionSourceRgb: BlendFunction.SOURCE_ALPHA,\n    functionSourceAlpha: BlendFunction.ONE,\n    functionDestinationRgb: BlendFunction.ONE_MINUS_SOURCE_ALPHA,\n    functionDestinationAlpha: BlendFunction.ONE_MINUS_SOURCE_ALPHA,\n  }),\n\n  /**\n   * Blending is enabled using alpha blending with premultiplied alpha, <code>source + destination(1 - source.alpha)</code>.\n   *\n   * @type {object}\n   * @constant\n   */\n  PRE_MULTIPLIED_ALPHA_BLEND: Object.freeze({\n    enabled: true,\n    equationRgb: BlendEquation.ADD,\n    equationAlpha: BlendEquation.ADD,\n    functionSourceRgb: BlendFunction.ONE,\n    functionSourceAlpha: BlendFunction.ONE,\n    functionDestinationRgb: BlendFunction.ONE_MINUS_SOURCE_ALPHA,\n    functionDestinationAlpha: BlendFunction.ONE_MINUS_SOURCE_ALPHA,\n  }),\n\n  /**\n   * Blending is enabled using additive blending, <code>source(source.alpha) + destination</code>.\n   *\n   * @type {object}\n   * @constant\n   */\n  ADDITIVE_BLEND: Object.freeze({\n    enabled: true,\n    equationRgb: BlendEquation.ADD,\n    equationAlpha: BlendEquation.ADD,\n    functionSourceRgb: BlendFunction.SOURCE_ALPHA,\n    functionSourceAlpha: BlendFunction.ONE,\n    functionDestinationRgb: BlendFunction.ONE,\n    functionDestinationAlpha: BlendFunction.ONE,\n  }),\n};\nexport default Object.freeze(BlendingState);\n"],"mappings":"AAAA,OAAOA,aAAa,MAAM,oBAAoB;AAC9C,OAAOC,aAAa,MAAM,oBAAoB;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,aAAa,GAAG;EACpB;AACF;AACA;AACA;AACA;AACA;EACEC,QAAQ,EAAEC,MAAM,CAACC,MAAM,CAAC;IACtBC,OAAO,EAAE;EACX,CAAC,CAAC;EAEF;AACF;AACA;AACA;AACA;AACA;EACEC,WAAW,EAAEH,MAAM,CAACC,MAAM,CAAC;IACzBC,OAAO,EAAE,IAAI;IACbE,WAAW,EAAER,aAAa,CAACS,GAAG;IAC9BC,aAAa,EAAEV,aAAa,CAACS,GAAG;IAChCE,iBAAiB,EAAEV,aAAa,CAACW,YAAY;IAC7CC,mBAAmB,EAAEZ,aAAa,CAACa,GAAG;IACtCC,sBAAsB,EAAEd,aAAa,CAACe,sBAAsB;IAC5DC,wBAAwB,EAAEhB,aAAa,CAACe;EAC1C,CAAC,CAAC;EAEF;AACF;AACA;AACA;AACA;AACA;EACEE,0BAA0B,EAAEd,MAAM,CAACC,MAAM,CAAC;IACxCC,OAAO,EAAE,IAAI;IACbE,WAAW,EAAER,aAAa,CAACS,GAAG;IAC9BC,aAAa,EAAEV,aAAa,CAACS,GAAG;IAChCE,iBAAiB,EAAEV,aAAa,CAACa,GAAG;IACpCD,mBAAmB,EAAEZ,aAAa,CAACa,GAAG;IACtCC,sBAAsB,EAAEd,aAAa,CAACe,sBAAsB;IAC5DC,wBAAwB,EAAEhB,aAAa,CAACe;EAC1C,CAAC,CAAC;EAEF;AACF;AACA;AACA;AACA;AACA;EACEG,cAAc,EAAEf,MAAM,CAACC,MAAM,CAAC;IAC5BC,OAAO,EAAE,IAAI;IACbE,WAAW,EAAER,aAAa,CAACS,GAAG;IAC9BC,aAAa,EAAEV,aAAa,CAACS,GAAG;IAChCE,iBAAiB,EAAEV,aAAa,CAACW,YAAY;IAC7CC,mBAAmB,EAAEZ,aAAa,CAACa,GAAG;IACtCC,sBAAsB,EAAEd,aAAa,CAACa,GAAG;IACzCG,wBAAwB,EAAEhB,aAAa,CAACa;EAC1C,CAAC;AACH,CAAC;AACD,eAAeV,MAAM,CAACC,MAAM,CAACH,aAAa,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}