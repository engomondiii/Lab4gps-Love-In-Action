{"ast":null,"code":"//This file is automatically rebuilt by the Cesium build process.\nexport default \"vec2 computeSt(float featureId)\\n\\\n{\\n\\\n    float stepX = model_textureStep.x;\\n\\\n    float centerX = model_textureStep.y;\\n\\\n\\n\\\n    #ifdef MULTILINE_BATCH_TEXTURE\\n\\\n    float stepY = model_textureStep.z;\\n\\\n    float centerY = model_textureStep.w;\\n\\\n\\n\\\n    float xId = mod(featureId, model_textureDimensions.x); \\n\\\n    float yId = floor(featureId / model_textureDimensions.x);\\n\\\n    \\n\\\n    return vec2(centerX + (xId * stepX), centerY + (yId * stepY));\\n\\\n    #else\\n\\\n    return vec2(centerX + (featureId * stepX), 0.5);\\n\\\n    #endif\\n\\\n}\\n\\\n\\n\\\nvoid selectedFeatureIdStage(out SelectedFeature feature, FeatureIds featureIds)\\n\\\n{   \\n\\\n    int featureId = featureIds.SELECTED_FEATURE_ID;\\n\\\n\\n\\\n\\n\\\n    if (featureId < model_featuresLength)\\n\\\n    {\\n\\\n        vec2 featureSt = computeSt(float(featureId));\\n\\\n\\n\\\n        feature.id = featureId;\\n\\\n        feature.st = featureSt;\\n\\\n        feature.color = texture(model_batchTexture, featureSt);\\n\\\n    }\\n\\\n    // Floating point comparisons can be unreliable in GLSL, so we\\n\\\n    // increment the feature ID to make sure it's always greater\\n\\\n    // then the model_featuresLength - a condition we check for in the\\n\\\n    // pick ID, to avoid sampling the pick texture if the feature ID is\\n\\\n    // greater than the number of features.\\n\\\n    else\\n\\\n    {\\n\\\n        feature.id = model_featuresLength + 1;\\n\\\n        feature.st = vec2(0.0);\\n\\\n        feature.color = vec4(1.0);\\n\\\n    }\\n\\\n\\n\\\n    #ifdef HAS_NULL_FEATURE_ID\\n\\\n    if (featureId == model_nullFeatureId) {\\n\\\n        feature.id = featureId;\\n\\\n        feature.st = vec2(0.0);\\n\\\n        feature.color = vec4(1.0);\\n\\\n    }\\n\\\n    #endif\\n\\\n}\\n\\\n\";","map":{"version":3,"names":[],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/engine/Source/Shaders/Model/SelectedFeatureIdStageCommon.js"],"sourcesContent":["//This file is automatically rebuilt by the Cesium build process.\nexport default \"vec2 computeSt(float featureId)\\n\\\n{\\n\\\n    float stepX = model_textureStep.x;\\n\\\n    float centerX = model_textureStep.y;\\n\\\n\\n\\\n    #ifdef MULTILINE_BATCH_TEXTURE\\n\\\n    float stepY = model_textureStep.z;\\n\\\n    float centerY = model_textureStep.w;\\n\\\n\\n\\\n    float xId = mod(featureId, model_textureDimensions.x); \\n\\\n    float yId = floor(featureId / model_textureDimensions.x);\\n\\\n    \\n\\\n    return vec2(centerX + (xId * stepX), centerY + (yId * stepY));\\n\\\n    #else\\n\\\n    return vec2(centerX + (featureId * stepX), 0.5);\\n\\\n    #endif\\n\\\n}\\n\\\n\\n\\\nvoid selectedFeatureIdStage(out SelectedFeature feature, FeatureIds featureIds)\\n\\\n{   \\n\\\n    int featureId = featureIds.SELECTED_FEATURE_ID;\\n\\\n\\n\\\n\\n\\\n    if (featureId < model_featuresLength)\\n\\\n    {\\n\\\n        vec2 featureSt = computeSt(float(featureId));\\n\\\n\\n\\\n        feature.id = featureId;\\n\\\n        feature.st = featureSt;\\n\\\n        feature.color = texture(model_batchTexture, featureSt);\\n\\\n    }\\n\\\n    // Floating point comparisons can be unreliable in GLSL, so we\\n\\\n    // increment the feature ID to make sure it's always greater\\n\\\n    // then the model_featuresLength - a condition we check for in the\\n\\\n    // pick ID, to avoid sampling the pick texture if the feature ID is\\n\\\n    // greater than the number of features.\\n\\\n    else\\n\\\n    {\\n\\\n        feature.id = model_featuresLength + 1;\\n\\\n        feature.st = vec2(0.0);\\n\\\n        feature.color = vec4(1.0);\\n\\\n    }\\n\\\n\\n\\\n    #ifdef HAS_NULL_FEATURE_ID\\n\\\n    if (featureId == model_nullFeatureId) {\\n\\\n        feature.id = featureId;\\n\\\n        feature.st = vec2(0.0);\\n\\\n        feature.color = vec4(1.0);\\n\\\n    }\\n\\\n    #endif\\n\\\n}\\n\\\n\";\n"],"mappings":"AAAA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}