{"ast":null,"code":"import defined from \"../Core/defined.js\";\nimport I3SDataProvider from \"./I3SDataProvider.js\";\nimport Resource from \"../Core/Resource.js\";\n\n/**\n * This class implements an I3S statistics for Building Scene Layer.\n * <p>\n * Do not construct this directly, instead access statistics through {@link I3SDataProvider}.\n * </p>\n * @alias I3SStatistics\n * @internalConstructor\n */\nfunction I3SStatistics(dataProvider, uri) {\n  this._dataProvider = dataProvider;\n  this._resource = new Resource({\n    url: uri\n  });\n  this._resource.setQueryParameters(dataProvider.resource.queryParameters);\n  this._resource.appendForwardSlash();\n}\nObject.defineProperties(I3SStatistics.prototype, {\n  /**\n   * Gets the resource for the statistics\n   * @memberof I3SStatistics.prototype\n   * @type {Resource}\n   * @readonly\n   */\n  resource: {\n    get: function () {\n      return this._resource;\n    }\n  },\n  /**\n   * Gets the I3S data for this object.\n   * @memberof I3SStatistics.prototype\n   * @type {object}\n   * @readonly\n   */\n  data: {\n    get: function () {\n      return this._data;\n    }\n  },\n  /**\n   * Gets the collection of attribute names.\n   * @memberof I3SStatistics.prototype\n   * @type {string[]}\n   * @readonly\n   */\n  names: {\n    get: function () {\n      const names = [];\n      const summary = this._data.summary;\n      if (defined(summary)) {\n        for (let i = 0; i < summary.length; ++i) {\n          names.push(summary[i].fieldName);\n        }\n      }\n      return names;\n    }\n  }\n});\n\n/**\n * Loads the content.\n * @returns {Promise<object>} A promise that is resolved when the data of the I3S statistics is loaded\n * @private\n */\nI3SStatistics.prototype.load = async function () {\n  this._data = await I3SDataProvider.loadJson(this._resource);\n  return this._data;\n};\n\n/**\n * @private\n */\nI3SStatistics.prototype._getValues = function (attributeName) {\n  const summary = this._data.summary;\n  if (defined(summary)) {\n    for (let i = 0; i < summary.length; ++i) {\n      const attribute = summary[i];\n      if (attribute.fieldName === attributeName) {\n        if (defined(attribute.mostFrequentValues)) {\n          return [...attribute.mostFrequentValues];\n        }\n        return [];\n      }\n    }\n  }\n};\nexport default I3SStatistics;","map":{"version":3,"names":["defined","I3SDataProvider","Resource","I3SStatistics","dataProvider","uri","_dataProvider","_resource","url","setQueryParameters","resource","queryParameters","appendForwardSlash","Object","defineProperties","prototype","get","data","_data","names","summary","i","length","push","fieldName","load","loadJson","_getValues","attributeName","attribute","mostFrequentValues"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/engine/Source/Scene/I3SStatistics.js"],"sourcesContent":["import defined from \"../Core/defined.js\";\nimport I3SDataProvider from \"./I3SDataProvider.js\";\nimport Resource from \"../Core/Resource.js\";\n\n/**\n * This class implements an I3S statistics for Building Scene Layer.\n * <p>\n * Do not construct this directly, instead access statistics through {@link I3SDataProvider}.\n * </p>\n * @alias I3SStatistics\n * @internalConstructor\n */\nfunction I3SStatistics(dataProvider, uri) {\n  this._dataProvider = dataProvider;\n\n  this._resource = new Resource({ url: uri });\n  this._resource.setQueryParameters(dataProvider.resource.queryParameters);\n  this._resource.appendForwardSlash();\n}\n\nObject.defineProperties(I3SStatistics.prototype, {\n  /**\n   * Gets the resource for the statistics\n   * @memberof I3SStatistics.prototype\n   * @type {Resource}\n   * @readonly\n   */\n  resource: {\n    get: function () {\n      return this._resource;\n    },\n  },\n\n  /**\n   * Gets the I3S data for this object.\n   * @memberof I3SStatistics.prototype\n   * @type {object}\n   * @readonly\n   */\n  data: {\n    get: function () {\n      return this._data;\n    },\n  },\n\n  /**\n   * Gets the collection of attribute names.\n   * @memberof I3SStatistics.prototype\n   * @type {string[]}\n   * @readonly\n   */\n  names: {\n    get: function () {\n      const names = [];\n      const summary = this._data.summary;\n      if (defined(summary)) {\n        for (let i = 0; i < summary.length; ++i) {\n          names.push(summary[i].fieldName);\n        }\n      }\n      return names;\n    },\n  },\n});\n\n/**\n * Loads the content.\n * @returns {Promise<object>} A promise that is resolved when the data of the I3S statistics is loaded\n * @private\n */\nI3SStatistics.prototype.load = async function () {\n  this._data = await I3SDataProvider.loadJson(this._resource);\n  return this._data;\n};\n\n/**\n * @private\n */\nI3SStatistics.prototype._getValues = function (attributeName) {\n  const summary = this._data.summary;\n  if (defined(summary)) {\n    for (let i = 0; i < summary.length; ++i) {\n      const attribute = summary[i];\n      if (attribute.fieldName === attributeName) {\n        if (defined(attribute.mostFrequentValues)) {\n          return [...attribute.mostFrequentValues];\n        }\n        return [];\n      }\n    }\n  }\n};\n\nexport default I3SStatistics;\n"],"mappings":"AAAA,OAAOA,OAAO,MAAM,oBAAoB;AACxC,OAAOC,eAAe,MAAM,sBAAsB;AAClD,OAAOC,QAAQ,MAAM,qBAAqB;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,aAAaA,CAACC,YAAY,EAAEC,GAAG,EAAE;EACxC,IAAI,CAACC,aAAa,GAAGF,YAAY;EAEjC,IAAI,CAACG,SAAS,GAAG,IAAIL,QAAQ,CAAC;IAAEM,GAAG,EAAEH;EAAI,CAAC,CAAC;EAC3C,IAAI,CAACE,SAAS,CAACE,kBAAkB,CAACL,YAAY,CAACM,QAAQ,CAACC,eAAe,CAAC;EACxE,IAAI,CAACJ,SAAS,CAACK,kBAAkB,CAAC,CAAC;AACrC;AAEAC,MAAM,CAACC,gBAAgB,CAACX,aAAa,CAACY,SAAS,EAAE;EAC/C;AACF;AACA;AACA;AACA;AACA;EACEL,QAAQ,EAAE;IACRM,GAAG,EAAE,SAAAA,CAAA,EAAY;MACf,OAAO,IAAI,CAACT,SAAS;IACvB;EACF,CAAC;EAED;AACF;AACA;AACA;AACA;AACA;EACEU,IAAI,EAAE;IACJD,GAAG,EAAE,SAAAA,CAAA,EAAY;MACf,OAAO,IAAI,CAACE,KAAK;IACnB;EACF,CAAC;EAED;AACF;AACA;AACA;AACA;AACA;EACEC,KAAK,EAAE;IACLH,GAAG,EAAE,SAAAA,CAAA,EAAY;MACf,MAAMG,KAAK,GAAG,EAAE;MAChB,MAAMC,OAAO,GAAG,IAAI,CAACF,KAAK,CAACE,OAAO;MAClC,IAAIpB,OAAO,CAACoB,OAAO,CAAC,EAAE;QACpB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,OAAO,CAACE,MAAM,EAAE,EAAED,CAAC,EAAE;UACvCF,KAAK,CAACI,IAAI,CAACH,OAAO,CAACC,CAAC,CAAC,CAACG,SAAS,CAAC;QAClC;MACF;MACA,OAAOL,KAAK;IACd;EACF;AACF,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACAhB,aAAa,CAACY,SAAS,CAACU,IAAI,GAAG,kBAAkB;EAC/C,IAAI,CAACP,KAAK,GAAG,MAAMjB,eAAe,CAACyB,QAAQ,CAAC,IAAI,CAACnB,SAAS,CAAC;EAC3D,OAAO,IAAI,CAACW,KAAK;AACnB,CAAC;;AAED;AACA;AACA;AACAf,aAAa,CAACY,SAAS,CAACY,UAAU,GAAG,UAAUC,aAAa,EAAE;EAC5D,MAAMR,OAAO,GAAG,IAAI,CAACF,KAAK,CAACE,OAAO;EAClC,IAAIpB,OAAO,CAACoB,OAAO,CAAC,EAAE;IACpB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,OAAO,CAACE,MAAM,EAAE,EAAED,CAAC,EAAE;MACvC,MAAMQ,SAAS,GAAGT,OAAO,CAACC,CAAC,CAAC;MAC5B,IAAIQ,SAAS,CAACL,SAAS,KAAKI,aAAa,EAAE;QACzC,IAAI5B,OAAO,CAAC6B,SAAS,CAACC,kBAAkB,CAAC,EAAE;UACzC,OAAO,CAAC,GAAGD,SAAS,CAACC,kBAAkB,CAAC;QAC1C;QACA,OAAO,EAAE;MACX;IACF;EACF;AACF,CAAC;AAED,eAAe3B,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}