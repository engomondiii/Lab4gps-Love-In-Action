{"ast":null,"code":"//This file is automatically rebuilt by the Cesium build process.\nexport default \"/**\\n\\\n * A wrapper around the texture (WebGL2) / textureCube (WebGL1)\\n\\\n * function to allow for WebGL 1 support.\\n\\\n * \\n\\\n * @name czm_textureCube\\n\\\n * @glslFunction\\n\\\n *\\n\\\n * @param {samplerCube} sampler The sampler.\\n\\\n * @param {vec3} p The coordinate at which to sample the texture.\\n\\\n */\\n\\\nvec4 czm_textureCube(samplerCube sampler, vec3 p) {\\n\\\n#if __VERSION__ == 300\\n\\\n    return texture(sampler, p);\\n\\\n#else\\n\\\n    return textureCube(sampler, p);\\n\\\n#endif\\n\\\n}\\n\\\n\\n\\\n/**\\n\\\n * A wrapper around the textureLod (WebGL2) / textureCube (WebGL1)\\n\\\n * function to allow for WebGL 1 support in fragment shaders.\\n\\\n *\\n\\\n * @name czm_textureCubeLod\\n\\\n * @glslFunction\\n\\\n *\\n\\\n * @param {samplerCube} sampler The sampler.\\n\\\n * @param {vec3} p The coordinate at which to sample the texture.\\n\\\n * @param {float} lod The mipmap level from which to sample.\\n\\\n */\\n\\\nvec4 czm_textureCube(samplerCube sampler, vec3 p, float lod) {\\n\\\n#if __VERSION__ == 300\\n\\\n    return textureLod(sampler, p, lod);\\n\\\n#elif defined(GL_EXT_shader_texture_lod)\\n\\\n    return textureCubeLodEXT(sampler, p, lod);\\n\\\n#endif\\n\\\n}\";","map":{"version":3,"names":[],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/engine/Source/Shaders/Builtin/Functions/textureCube.js"],"sourcesContent":["//This file is automatically rebuilt by the Cesium build process.\nexport default \"/**\\n\\\n * A wrapper around the texture (WebGL2) / textureCube (WebGL1)\\n\\\n * function to allow for WebGL 1 support.\\n\\\n * \\n\\\n * @name czm_textureCube\\n\\\n * @glslFunction\\n\\\n *\\n\\\n * @param {samplerCube} sampler The sampler.\\n\\\n * @param {vec3} p The coordinate at which to sample the texture.\\n\\\n */\\n\\\nvec4 czm_textureCube(samplerCube sampler, vec3 p) {\\n\\\n#if __VERSION__ == 300\\n\\\n    return texture(sampler, p);\\n\\\n#else\\n\\\n    return textureCube(sampler, p);\\n\\\n#endif\\n\\\n}\\n\\\n\\n\\\n/**\\n\\\n * A wrapper around the textureLod (WebGL2) / textureCube (WebGL1)\\n\\\n * function to allow for WebGL 1 support in fragment shaders.\\n\\\n *\\n\\\n * @name czm_textureCubeLod\\n\\\n * @glslFunction\\n\\\n *\\n\\\n * @param {samplerCube} sampler The sampler.\\n\\\n * @param {vec3} p The coordinate at which to sample the texture.\\n\\\n * @param {float} lod The mipmap level from which to sample.\\n\\\n */\\n\\\nvec4 czm_textureCube(samplerCube sampler, vec3 p, float lod) {\\n\\\n#if __VERSION__ == 300\\n\\\n    return textureLod(sampler, p, lod);\\n\\\n#elif defined(GL_EXT_shader_texture_lod)\\n\\\n    return textureCubeLodEXT(sampler, p, lod);\\n\\\n#endif\\n\\\n}\";\n"],"mappings":"AAAA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}