{"ast":null,"code":"import Cartesian2 from \"../Core/Cartesian2.js\";\nimport Color from \"../Core/Color.js\";\nimport defined from \"../Core/defined.js\";\nimport destroyObject from \"../Core/destroyObject.js\";\nimport PrimitiveType from \"../Core/PrimitiveType.js\";\nimport ClearCommand from \"../Renderer/ClearCommand.js\";\nimport DrawCommand from \"../Renderer/DrawCommand.js\";\nimport FramebufferManager from \"../Renderer/FramebufferManager.js\";\nimport Pass from \"../Renderer/Pass.js\";\nimport RenderState from \"../Renderer/RenderState.js\";\nimport ShaderSource from \"../Renderer/ShaderSource.js\";\nimport BlendingState from \"../Scene/BlendingState.js\";\nimport StencilConstants from \"../Scene/StencilConstants.js\";\nimport PointCloudEyeDomeLightingShader from \"../Shaders/PostProcessStages/PointCloudEyeDomeLighting.js\";\n\n/**\n * Eye dome lighting. Does not support points with per-point translucency, but does allow translucent styling against the globe.\n * Requires support for EXT_frag_depth and WEBGL_draw_buffers extensions in WebGL 1.0.\n *\n * @private\n */\nfunction PointCloudEyeDomeLighting() {\n  this._framebuffer = new FramebufferManager({\n    colorAttachmentsLength: 2,\n    depth: true,\n    supportsDepthTexture: true\n  });\n  this._drawCommand = undefined;\n  this._clearCommand = undefined;\n  this._strength = 1.0;\n  this._radius = 1.0;\n}\nObject.defineProperties(PointCloudEyeDomeLighting.prototype, {\n  framebuffer: {\n    get: function () {\n      return this._framebuffer.framebuffer;\n    }\n  },\n  colorGBuffer: {\n    get: function () {\n      return this._framebuffer.getColorTexture(0);\n    }\n  },\n  depthGBuffer: {\n    get: function () {\n      return this._framebuffer.getColorTexture(1);\n    }\n  }\n});\nfunction destroyFramebuffer(processor) {\n  processor._framebuffer.destroy();\n  processor._drawCommand = undefined;\n  processor._clearCommand = undefined;\n}\nconst distanceAndEdlStrengthScratch = new Cartesian2();\nfunction createCommands(processor, context) {\n  const blendFS = new ShaderSource({\n    defines: [\"LOG_DEPTH_WRITE\"],\n    sources: [PointCloudEyeDomeLightingShader]\n  });\n  const blendUniformMap = {\n    u_pointCloud_colorGBuffer: function () {\n      return processor.colorGBuffer;\n    },\n    u_pointCloud_depthGBuffer: function () {\n      return processor.depthGBuffer;\n    },\n    u_distanceAndEdlStrength: function () {\n      distanceAndEdlStrengthScratch.x = processor._radius;\n      distanceAndEdlStrengthScratch.y = processor._strength;\n      return distanceAndEdlStrengthScratch;\n    }\n  };\n  const blendRenderState = RenderState.fromCache({\n    blending: BlendingState.ALPHA_BLEND,\n    depthMask: true,\n    depthTest: {\n      enabled: true\n    },\n    stencilTest: StencilConstants.setCesium3DTileBit(),\n    stencilMask: StencilConstants.CESIUM_3D_TILE_MASK\n  });\n  processor._drawCommand = context.createViewportQuadCommand(blendFS, {\n    uniformMap: blendUniformMap,\n    renderState: blendRenderState,\n    pass: Pass.CESIUM_3D_TILE,\n    owner: processor\n  });\n  processor._clearCommand = new ClearCommand({\n    framebuffer: processor.framebuffer,\n    color: new Color(0.0, 0.0, 0.0, 0.0),\n    depth: 1.0,\n    renderState: RenderState.fromCache(),\n    pass: Pass.CESIUM_3D_TILE,\n    owner: processor\n  });\n}\nfunction createResources(processor, context) {\n  const width = context.drawingBufferWidth;\n  const height = context.drawingBufferHeight;\n  processor._framebuffer.update(context, width, height);\n  createCommands(processor, context);\n}\nfunction isSupported(context) {\n  return context.drawBuffers && context.fragmentDepth;\n}\nPointCloudEyeDomeLighting.isSupported = isSupported;\nfunction getECShaderProgram(context, shaderProgram) {\n  let shader = context.shaderCache.getDerivedShaderProgram(shaderProgram, \"EC\");\n  if (!defined(shader)) {\n    const attributeLocations = shaderProgram._attributeLocations;\n    const fs = shaderProgram.fragmentShaderSource.clone();\n    fs.sources.splice(0, 0, `layout (location = 0) out vec4 out_FragData_0;\\nlayout (location = 1) out vec4 out_FragData_1;`);\n    fs.sources = fs.sources.map(function (source) {\n      source = ShaderSource.replaceMain(source, \"czm_point_cloud_post_process_main\");\n      source = source.replaceAll(/out_FragColor/g, \"out_FragData_0\");\n      return source;\n    });\n    fs.sources.push(\"void main() \\n\" + \"{ \\n\" + \"    czm_point_cloud_post_process_main(); \\n\" + \"#ifdef LOG_DEPTH\\n\" + \"    czm_writeLogDepth();\\n\" + \"    out_FragData_1 = czm_packDepth(gl_FragDepth); \\n\" + \"#else\\n\" + \"    out_FragData_1 = czm_packDepth(gl_FragCoord.z);\\n\" + \"#endif\\n\" + \"}\");\n    shader = context.shaderCache.createDerivedShaderProgram(shaderProgram, \"EC\", {\n      vertexShaderSource: shaderProgram.vertexShaderSource,\n      fragmentShaderSource: fs,\n      attributeLocations: attributeLocations\n    });\n  }\n  return shader;\n}\nPointCloudEyeDomeLighting.prototype.update = function (frameState, commandStart, pointCloudShading, boundingVolume) {\n  if (!isSupported(frameState.context)) {\n    return;\n  }\n  this._strength = pointCloudShading.eyeDomeLightingStrength;\n  this._radius = pointCloudShading.eyeDomeLightingRadius * frameState.pixelRatio;\n  createResources(this, frameState.context);\n\n  // Hijack existing point commands to render into an offscreen FBO.\n  let i;\n  const commandList = frameState.commandList;\n  const commandEnd = commandList.length;\n  for (i = commandStart; i < commandEnd; ++i) {\n    const command = commandList[i];\n    if (command.primitiveType !== PrimitiveType.POINTS || command.pass === Pass.TRANSLUCENT) {\n      continue;\n    }\n    let derivedCommand;\n    let originalShaderProgram;\n    let derivedCommandObject = command.derivedCommands.pointCloudProcessor;\n    if (defined(derivedCommandObject)) {\n      derivedCommand = derivedCommandObject.command;\n      originalShaderProgram = derivedCommandObject.originalShaderProgram;\n    }\n    if (!defined(derivedCommand) || command.dirty || originalShaderProgram !== command.shaderProgram || derivedCommand.framebuffer !== this.framebuffer) {\n      // Prevent crash when tiles out-of-view come in-view during context size change or\n      // when the underlying shader changes while EDL is disabled\n      derivedCommand = DrawCommand.shallowClone(command, derivedCommand);\n      derivedCommand.framebuffer = this.framebuffer;\n      derivedCommand.shaderProgram = getECShaderProgram(frameState.context, command.shaderProgram);\n      derivedCommand.castShadows = false;\n      derivedCommand.receiveShadows = false;\n      if (!defined(derivedCommandObject)) {\n        derivedCommandObject = {\n          command: derivedCommand,\n          originalShaderProgram: command.shaderProgram\n        };\n        command.derivedCommands.pointCloudProcessor = derivedCommandObject;\n      }\n      derivedCommandObject.originalShaderProgram = command.shaderProgram;\n    }\n    commandList[i] = derivedCommand;\n  }\n  const clearCommand = this._clearCommand;\n  const blendCommand = this._drawCommand;\n  blendCommand.boundingVolume = boundingVolume;\n\n  // Blend EDL into the main FBO\n  commandList.push(blendCommand);\n  commandList.push(clearCommand);\n};\n\n/**\n * Returns true if this object was destroyed; otherwise, false.\n * <br /><br />\n * If this object was destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.\n *\n * @returns {boolean} <code>true</code> if this object was destroyed; otherwise, <code>false</code>.\n *\n * @see PointCloudEyeDomeLighting#destroy\n */\nPointCloudEyeDomeLighting.prototype.isDestroyed = function () {\n  return false;\n};\n\n/**\n * Destroys the WebGL resources held by this object.  Destroying an object allows for deterministic\n * release of WebGL resources, instead of relying on the garbage collector to destroy this object.\n * <br /><br />\n * Once an object is destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.  Therefore,\n * assign the return value (<code>undefined</code>) to the object as done in the example.\n *\n * @exception {DeveloperError} This object was destroyed, i.e., destroy() was called.\n *\n * @example\n * processor = processor && processor.destroy();\n *\n * @see PointCloudEyeDomeLighting#isDestroyed\n */\nPointCloudEyeDomeLighting.prototype.destroy = function () {\n  destroyFramebuffer(this);\n  return destroyObject(this);\n};\nexport default PointCloudEyeDomeLighting;","map":{"version":3,"names":["Cartesian2","Color","defined","destroyObject","PrimitiveType","ClearCommand","DrawCommand","FramebufferManager","Pass","RenderState","ShaderSource","BlendingState","StencilConstants","PointCloudEyeDomeLightingShader","PointCloudEyeDomeLighting","_framebuffer","colorAttachmentsLength","depth","supportsDepthTexture","_drawCommand","undefined","_clearCommand","_strength","_radius","Object","defineProperties","prototype","framebuffer","get","colorGBuffer","getColorTexture","depthGBuffer","destroyFramebuffer","processor","destroy","distanceAndEdlStrengthScratch","createCommands","context","blendFS","defines","sources","blendUniformMap","u_pointCloud_colorGBuffer","u_pointCloud_depthGBuffer","u_distanceAndEdlStrength","x","y","blendRenderState","fromCache","blending","ALPHA_BLEND","depthMask","depthTest","enabled","stencilTest","setCesium3DTileBit","stencilMask","CESIUM_3D_TILE_MASK","createViewportQuadCommand","uniformMap","renderState","pass","CESIUM_3D_TILE","owner","color","createResources","width","drawingBufferWidth","height","drawingBufferHeight","update","isSupported","drawBuffers","fragmentDepth","getECShaderProgram","shaderProgram","shader","shaderCache","getDerivedShaderProgram","attributeLocations","_attributeLocations","fs","fragmentShaderSource","clone","splice","map","source","replaceMain","replaceAll","push","createDerivedShaderProgram","vertexShaderSource","frameState","commandStart","pointCloudShading","boundingVolume","eyeDomeLightingStrength","eyeDomeLightingRadius","pixelRatio","i","commandList","commandEnd","length","command","primitiveType","POINTS","TRANSLUCENT","derivedCommand","originalShaderProgram","derivedCommandObject","derivedCommands","pointCloudProcessor","dirty","shallowClone","castShadows","receiveShadows","clearCommand","blendCommand","isDestroyed"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/engine/Source/Scene/PointCloudEyeDomeLighting.js"],"sourcesContent":["import Cartesian2 from \"../Core/Cartesian2.js\";\nimport Color from \"../Core/Color.js\";\nimport defined from \"../Core/defined.js\";\nimport destroyObject from \"../Core/destroyObject.js\";\nimport PrimitiveType from \"../Core/PrimitiveType.js\";\nimport ClearCommand from \"../Renderer/ClearCommand.js\";\nimport DrawCommand from \"../Renderer/DrawCommand.js\";\nimport FramebufferManager from \"../Renderer/FramebufferManager.js\";\nimport Pass from \"../Renderer/Pass.js\";\nimport RenderState from \"../Renderer/RenderState.js\";\nimport ShaderSource from \"../Renderer/ShaderSource.js\";\nimport BlendingState from \"../Scene/BlendingState.js\";\nimport StencilConstants from \"../Scene/StencilConstants.js\";\nimport PointCloudEyeDomeLightingShader from \"../Shaders/PostProcessStages/PointCloudEyeDomeLighting.js\";\n\n/**\n * Eye dome lighting. Does not support points with per-point translucency, but does allow translucent styling against the globe.\n * Requires support for EXT_frag_depth and WEBGL_draw_buffers extensions in WebGL 1.0.\n *\n * @private\n */\nfunction PointCloudEyeDomeLighting() {\n  this._framebuffer = new FramebufferManager({\n    colorAttachmentsLength: 2,\n    depth: true,\n    supportsDepthTexture: true,\n  });\n\n  this._drawCommand = undefined;\n  this._clearCommand = undefined;\n\n  this._strength = 1.0;\n  this._radius = 1.0;\n}\n\nObject.defineProperties(PointCloudEyeDomeLighting.prototype, {\n  framebuffer: {\n    get: function () {\n      return this._framebuffer.framebuffer;\n    },\n  },\n  colorGBuffer: {\n    get: function () {\n      return this._framebuffer.getColorTexture(0);\n    },\n  },\n  depthGBuffer: {\n    get: function () {\n      return this._framebuffer.getColorTexture(1);\n    },\n  },\n});\n\nfunction destroyFramebuffer(processor) {\n  processor._framebuffer.destroy();\n  processor._drawCommand = undefined;\n  processor._clearCommand = undefined;\n}\n\nconst distanceAndEdlStrengthScratch = new Cartesian2();\n\nfunction createCommands(processor, context) {\n  const blendFS = new ShaderSource({\n    defines: [\"LOG_DEPTH_WRITE\"],\n    sources: [PointCloudEyeDomeLightingShader],\n  });\n\n  const blendUniformMap = {\n    u_pointCloud_colorGBuffer: function () {\n      return processor.colorGBuffer;\n    },\n    u_pointCloud_depthGBuffer: function () {\n      return processor.depthGBuffer;\n    },\n    u_distanceAndEdlStrength: function () {\n      distanceAndEdlStrengthScratch.x = processor._radius;\n      distanceAndEdlStrengthScratch.y = processor._strength;\n      return distanceAndEdlStrengthScratch;\n    },\n  };\n\n  const blendRenderState = RenderState.fromCache({\n    blending: BlendingState.ALPHA_BLEND,\n    depthMask: true,\n    depthTest: {\n      enabled: true,\n    },\n    stencilTest: StencilConstants.setCesium3DTileBit(),\n    stencilMask: StencilConstants.CESIUM_3D_TILE_MASK,\n  });\n\n  processor._drawCommand = context.createViewportQuadCommand(blendFS, {\n    uniformMap: blendUniformMap,\n    renderState: blendRenderState,\n    pass: Pass.CESIUM_3D_TILE,\n    owner: processor,\n  });\n\n  processor._clearCommand = new ClearCommand({\n    framebuffer: processor.framebuffer,\n    color: new Color(0.0, 0.0, 0.0, 0.0),\n    depth: 1.0,\n    renderState: RenderState.fromCache(),\n    pass: Pass.CESIUM_3D_TILE,\n    owner: processor,\n  });\n}\n\nfunction createResources(processor, context) {\n  const width = context.drawingBufferWidth;\n  const height = context.drawingBufferHeight;\n  processor._framebuffer.update(context, width, height);\n  createCommands(processor, context);\n}\n\nfunction isSupported(context) {\n  return context.drawBuffers && context.fragmentDepth;\n}\n\nPointCloudEyeDomeLighting.isSupported = isSupported;\n\nfunction getECShaderProgram(context, shaderProgram) {\n  let shader = context.shaderCache.getDerivedShaderProgram(shaderProgram, \"EC\");\n  if (!defined(shader)) {\n    const attributeLocations = shaderProgram._attributeLocations;\n\n    const fs = shaderProgram.fragmentShaderSource.clone();\n\n    fs.sources.splice(\n      0,\n      0,\n      `layout (location = 0) out vec4 out_FragData_0;\\nlayout (location = 1) out vec4 out_FragData_1;`,\n    );\n\n    fs.sources = fs.sources.map(function (source) {\n      source = ShaderSource.replaceMain(\n        source,\n        \"czm_point_cloud_post_process_main\",\n      );\n      source = source.replaceAll(/out_FragColor/g, \"out_FragData_0\");\n      return source;\n    });\n\n    fs.sources.push(\n      \"void main() \\n\" +\n        \"{ \\n\" +\n        \"    czm_point_cloud_post_process_main(); \\n\" +\n        \"#ifdef LOG_DEPTH\\n\" +\n        \"    czm_writeLogDepth();\\n\" +\n        \"    out_FragData_1 = czm_packDepth(gl_FragDepth); \\n\" +\n        \"#else\\n\" +\n        \"    out_FragData_1 = czm_packDepth(gl_FragCoord.z);\\n\" +\n        \"#endif\\n\" +\n        \"}\",\n    );\n\n    shader = context.shaderCache.createDerivedShaderProgram(\n      shaderProgram,\n      \"EC\",\n      {\n        vertexShaderSource: shaderProgram.vertexShaderSource,\n        fragmentShaderSource: fs,\n        attributeLocations: attributeLocations,\n      },\n    );\n  }\n\n  return shader;\n}\n\nPointCloudEyeDomeLighting.prototype.update = function (\n  frameState,\n  commandStart,\n  pointCloudShading,\n  boundingVolume,\n) {\n  if (!isSupported(frameState.context)) {\n    return;\n  }\n\n  this._strength = pointCloudShading.eyeDomeLightingStrength;\n  this._radius =\n    pointCloudShading.eyeDomeLightingRadius * frameState.pixelRatio;\n\n  createResources(this, frameState.context);\n\n  // Hijack existing point commands to render into an offscreen FBO.\n  let i;\n  const commandList = frameState.commandList;\n  const commandEnd = commandList.length;\n\n  for (i = commandStart; i < commandEnd; ++i) {\n    const command = commandList[i];\n    if (\n      command.primitiveType !== PrimitiveType.POINTS ||\n      command.pass === Pass.TRANSLUCENT\n    ) {\n      continue;\n    }\n\n    let derivedCommand;\n    let originalShaderProgram;\n\n    let derivedCommandObject = command.derivedCommands.pointCloudProcessor;\n    if (defined(derivedCommandObject)) {\n      derivedCommand = derivedCommandObject.command;\n      originalShaderProgram = derivedCommandObject.originalShaderProgram;\n    }\n\n    if (\n      !defined(derivedCommand) ||\n      command.dirty ||\n      originalShaderProgram !== command.shaderProgram ||\n      derivedCommand.framebuffer !== this.framebuffer\n    ) {\n      // Prevent crash when tiles out-of-view come in-view during context size change or\n      // when the underlying shader changes while EDL is disabled\n      derivedCommand = DrawCommand.shallowClone(command, derivedCommand);\n      derivedCommand.framebuffer = this.framebuffer;\n      derivedCommand.shaderProgram = getECShaderProgram(\n        frameState.context,\n        command.shaderProgram,\n      );\n      derivedCommand.castShadows = false;\n      derivedCommand.receiveShadows = false;\n\n      if (!defined(derivedCommandObject)) {\n        derivedCommandObject = {\n          command: derivedCommand,\n          originalShaderProgram: command.shaderProgram,\n        };\n        command.derivedCommands.pointCloudProcessor = derivedCommandObject;\n      }\n\n      derivedCommandObject.originalShaderProgram = command.shaderProgram;\n    }\n\n    commandList[i] = derivedCommand;\n  }\n\n  const clearCommand = this._clearCommand;\n  const blendCommand = this._drawCommand;\n\n  blendCommand.boundingVolume = boundingVolume;\n\n  // Blend EDL into the main FBO\n  commandList.push(blendCommand);\n  commandList.push(clearCommand);\n};\n\n/**\n * Returns true if this object was destroyed; otherwise, false.\n * <br /><br />\n * If this object was destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.\n *\n * @returns {boolean} <code>true</code> if this object was destroyed; otherwise, <code>false</code>.\n *\n * @see PointCloudEyeDomeLighting#destroy\n */\nPointCloudEyeDomeLighting.prototype.isDestroyed = function () {\n  return false;\n};\n\n/**\n * Destroys the WebGL resources held by this object.  Destroying an object allows for deterministic\n * release of WebGL resources, instead of relying on the garbage collector to destroy this object.\n * <br /><br />\n * Once an object is destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.  Therefore,\n * assign the return value (<code>undefined</code>) to the object as done in the example.\n *\n * @exception {DeveloperError} This object was destroyed, i.e., destroy() was called.\n *\n * @example\n * processor = processor && processor.destroy();\n *\n * @see PointCloudEyeDomeLighting#isDestroyed\n */\nPointCloudEyeDomeLighting.prototype.destroy = function () {\n  destroyFramebuffer(this);\n  return destroyObject(this);\n};\nexport default PointCloudEyeDomeLighting;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}