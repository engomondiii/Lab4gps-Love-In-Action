{"ast":null,"code":"import DeveloperError from \"../Core/DeveloperError.js\";\n\n/**\n * The content of a tile in a {@link Cesium3DTileset}.\n * <p>\n * Derived classes of this interface provide access to individual features in the tile.\n * Access derived objects through {@link Cesium3DTile#content}.\n * </p>\n * <p>\n * This type describes an interface and is not intended to be instantiated directly.\n * </p>\n *\n * @alias Cesium3DTileContent\n * @constructor\n */\nfunction Cesium3DTileContent() {\n  /**\n   * Gets or sets if any feature's property changed.  Used to\n   * optimized applying a style when a feature's property changed.\n   * <p>\n   * This is used to implement the <code>Cesium3DTileContent</code> interface, but is\n   * not part of the public Cesium API.\n   * </p>\n   *\n   * @type {boolean}\n   *\n   * @private\n   */\n  this.featurePropertiesDirty = false;\n}\nObject.defineProperties(Cesium3DTileContent.prototype, {\n  /**\n   * Gets the number of features in the tile.\n   *\n   * @memberof Cesium3DTileContent.prototype\n   *\n   * @type {number}\n   * @readonly\n   */\n  featuresLength: {\n    // eslint-disable-next-line getter-return\n    get: function () {\n      DeveloperError.throwInstantiationError();\n    }\n  },\n  /**\n   * Gets the number of points in the tile.\n   * <p>\n   * Only applicable for tiles with Point Cloud content. This is different than {@link Cesium3DTileContent#featuresLength} which\n   * equals the number of groups of points as distinguished by the <code>BATCH_ID</code> feature table semantic.\n   * </p>\n   *\n   * @see {@link https://github.com/CesiumGS/3d-tiles/tree/main/specification/TileFormats/PointCloud#batched-points}\n   *\n   * @memberof Cesium3DTileContent.prototype\n   *\n   * @type {number}\n   * @readonly\n   */\n  pointsLength: {\n    // eslint-disable-next-line getter-return\n    get: function () {\n      DeveloperError.throwInstantiationError();\n    }\n  },\n  /**\n   * Gets the number of triangles in the tile.\n   *\n   * @memberof Cesium3DTileContent.prototype\n   *\n   * @type {number}\n   * @readonly\n   */\n  trianglesLength: {\n    // eslint-disable-next-line getter-return\n    get: function () {\n      DeveloperError.throwInstantiationError();\n    }\n  },\n  /**\n   * Gets the tile's geometry memory in bytes.\n   *\n   * @memberof Cesium3DTileContent.prototype\n   *\n   * @type {number}\n   * @readonly\n   */\n  geometryByteLength: {\n    // eslint-disable-next-line getter-return\n    get: function () {\n      DeveloperError.throwInstantiationError();\n    }\n  },\n  /**\n   * Gets the tile's texture memory in bytes.\n   *\n   * @memberof Cesium3DTileContent.prototype\n   *\n   * @type {number}\n   * @readonly\n   */\n  texturesByteLength: {\n    // eslint-disable-next-line getter-return\n    get: function () {\n      DeveloperError.throwInstantiationError();\n    }\n  },\n  /**\n   * Gets the amount of memory used by the batch table textures and any binary\n   * metadata properties not accounted for in geometryByteLength or\n   * texturesByteLength\n   *\n   * @memberof Cesium3DTileContent.prototype\n   *\n   * @type {number}\n   * @readonly\n   */\n  batchTableByteLength: {\n    // eslint-disable-next-line getter-return\n    get: function () {\n      DeveloperError.throwInstantiationError();\n    }\n  },\n  /**\n   * Gets the array of {@link Cesium3DTileContent} objects for contents that contain other contents, such as composite tiles. The inner contents may in turn have inner contents, such as a composite tile that contains a composite tile.\n   *\n   * @see {@link https://github.com/CesiumGS/3d-tiles/tree/main/specification/TileFormats/Composite|Composite specification}\n   *\n   * @memberof Cesium3DTileContent.prototype\n   *\n   * @type {Array}\n   * @readonly\n   */\n  innerContents: {\n    // eslint-disable-next-line getter-return\n    get: function () {\n      DeveloperError.throwInstantiationError();\n    }\n  },\n  /**\n   * Returns true when the tile's content is ready to render; otherwise false\n   *\n   * @memberof Cesium3DTileContent.prototype\n   *\n   * @type {boolean}\n   * @readonly\n   */\n  ready: {\n    // eslint-disable-next-line getter-return\n    get: function () {\n      DeveloperError.throwInstantiationError();\n    }\n  },\n  /**\n   * Gets the tileset for this tile.\n   *\n   * @memberof Cesium3DTileContent.prototype\n   *\n   * @type {Cesium3DTileset}\n   * @readonly\n   */\n  tileset: {\n    // eslint-disable-next-line getter-return\n    get: function () {\n      DeveloperError.throwInstantiationError();\n    }\n  },\n  /**\n   * Gets the tile containing this content.\n   *\n   * @memberof Cesium3DTileContent.prototype\n   *\n   * @type {Cesium3DTile}\n   * @readonly\n   */\n  tile: {\n    // eslint-disable-next-line getter-return\n    get: function () {\n      DeveloperError.throwInstantiationError();\n    }\n  },\n  /**\n   * Gets the url of the tile's content.\n   * @memberof Cesium3DTileContent.prototype\n   *\n   * @type {string}\n   * @readonly\n   */\n  url: {\n    // eslint-disable-next-line getter-return\n    get: function () {\n      DeveloperError.throwInstantiationError();\n    }\n  },\n  /**\n   * Gets the batch table for this content.\n   * <p>\n   * This is used to implement the <code>Cesium3DTileContent</code> interface, but is\n   * not part of the public Cesium API.\n   * </p>\n   *\n   * @type {Cesium3DTileBatchTable}\n   * @readonly\n   *\n   * @private\n   */\n  batchTable: {\n    // eslint-disable-next-line getter-return\n    get: function () {\n      DeveloperError.throwInstantiationError();\n    }\n  },\n  /**\n   * Gets the metadata for this content, whether it is available explicitly or via\n   * implicit tiling. If there is no metadata, this property should be undefined.\n   * <p>\n   * This is used to implement the <code>Cesium3DTileContent</code> interface, but is\n   * not part of the public Cesium API.\n   * </p>\n   *\n   * @type {ImplicitMetadataView|undefined}\n   *\n   * @private\n   * @experimental This feature is using part of the 3D Tiles spec that is not final and is subject to change without Cesium's standard deprecation policy.\n   */\n  metadata: {\n    // eslint-disable-next-line getter-return\n    get: function () {\n      DeveloperError.throwInstantiationError();\n    },\n    set: function (value) {\n      DeveloperError.throwInstantiationError();\n    }\n  },\n  /**\n   * Gets the group for this content if the content has metadata (3D Tiles 1.1) or\n   * if it uses the <code>3DTILES_metadata</code> extension. If neither are present,\n   * this property should be undefined.\n   * <p>\n   * This is used to implement the <code>Cesium3DTileContent</code> interface, but is\n   * not part of the public Cesium API.\n   * </p>\n   *\n   * @type {Cesium3DTileContentGroup|undefined}\n   *\n   * @private\n   * @experimental This feature is using part of the 3D Tiles spec that is not final and is subject to change without Cesium's standard deprecation policy.\n   */\n  group: {\n    // eslint-disable-next-line getter-return\n    get: function () {\n      DeveloperError.throwInstantiationError();\n    },\n    set: function (value) {\n      DeveloperError.throwInstantiationError();\n    }\n  }\n});\n\n/**\n * Returns whether the feature has this property.\n *\n * @param {number} batchId The batchId for the feature.\n * @param {string} name The case-sensitive name of the property.\n * @returns {boolean} <code>true</code> if the feature has this property; otherwise, <code>false</code>.\n */\nCesium3DTileContent.prototype.hasProperty = function (batchId, name) {\n  DeveloperError.throwInstantiationError();\n};\n\n/**\n * Returns the {@link Cesium3DTileFeature} object for the feature with the\n * given <code>batchId</code>.  This object is used to get and modify the\n * feature's properties.\n * <p>\n * Features in a tile are ordered by <code>batchId</code>, an index used to retrieve their metadata from the batch table.\n * </p>\n *\n * @see {@link https://github.com/CesiumGS/3d-tiles/tree/main/specification/TileFormats/BatchTable}.\n *\n * @param {number} batchId The batchId for the feature.\n * @returns {Cesium3DTileFeature} The corresponding {@link Cesium3DTileFeature} object.\n *\n * @exception {DeveloperError} batchId must be between zero and {@link Cesium3DTileContent#featuresLength} - 1.\n */\nCesium3DTileContent.prototype.getFeature = function (batchId) {\n  DeveloperError.throwInstantiationError();\n};\n\n/**\n     * Called when {@link Cesium3DTileset#debugColorizeTiles} changes.\n     * <p>\n     * This is used to implement the <code>Cesium3DTileContent</code> interface, but is\n     * not part of the public Cesium API.\n     * </p>\n     *\n     * @param {boolean} enabled Whether to enable or disable debug settings.\n     * @returns {Cesium3DTileFeature} The corresponding {@link Cesium3DTileFeature} object.\n\n     * @private\n     */\nCesium3DTileContent.prototype.applyDebugSettings = function (enabled, color) {\n  DeveloperError.throwInstantiationError();\n};\n\n/**\n * Apply a style to the content\n * <p>\n * This is used to implement the <code>Cesium3DTileContent</code> interface, but is\n * not part of the public Cesium API.\n * </p>\n *\n * @param {Cesium3DTileStyle} style The style.\n *\n * @private\n */\nCesium3DTileContent.prototype.applyStyle = function (style) {\n  DeveloperError.throwInstantiationError();\n};\n\n/**\n * Called by the tile during tileset traversal to get the draw commands needed to render this content.\n * When the tile's content is in the PROCESSING state, this creates WebGL resources to ultimately\n * move to the READY state.\n * <p>\n * This is used to implement the <code>Cesium3DTileContent</code> interface, but is\n * not part of the public Cesium API.\n * </p>\n *\n * @param {Cesium3DTileset} tileset The tileset containing this tile.\n * @param {FrameState} frameState The frame state.\n *\n * @private\n */\nCesium3DTileContent.prototype.update = function (tileset, frameState) {\n  DeveloperError.throwInstantiationError();\n};\n\n/**\n * Find an intersection between a ray and the tile content surface that was rendered. The ray must be given in world coordinates.\n *\n * @param {Ray} ray The ray to test for intersection.\n * @param {FrameState} frameState The frame state.\n * @param {Cartesian3|undefined} [result] The intersection or <code>undefined</code> if none was found.\n * @returns {Cartesian3|undefined} The intersection or <code>undefined</code> if none was found.\n *\n * @private\n */\nCesium3DTileContent.prototype.pick = function (ray, frameState, result) {\n  DeveloperError.throwInstantiationError();\n};\n\n/**\n * Returns true if this object was destroyed; otherwise, false.\n * <br /><br />\n * If this object was destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.\n * <p>\n * This is used to implement the <code>Cesium3DTileContent</code> interface, but is\n * not part of the public Cesium API.\n * </p>\n *\n * @returns {boolean} <code>true</code> if this object was destroyed; otherwise, <code>false</code>.\n *\n * @see Cesium3DTileContent#destroy\n *\n * @private\n */\nCesium3DTileContent.prototype.isDestroyed = function () {\n  DeveloperError.throwInstantiationError();\n};\n\n/**\n * Destroys the WebGL resources held by this object.  Destroying an object allows for deterministic\n * release of WebGL resources, instead of relying on the garbage collector to destroy this object.\n * <br /><br />\n * Once an object is destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.  Therefore,\n * assign the return value (<code>undefined</code>) to the object as done in the example.\n * <p>\n * This is used to implement the <code>Cesium3DTileContent</code> interface, but is\n * not part of the public Cesium API.\n * </p>\n *\n * @exception {DeveloperError} This object was destroyed, i.e., destroy() was called.\n *\n * @example\n * content = content && content.destroy();\n *\n * @see Cesium3DTileContent#isDestroyed\n *\n * @private\n */\nCesium3DTileContent.prototype.destroy = function () {\n  DeveloperError.throwInstantiationError();\n};\nexport default Cesium3DTileContent;","map":{"version":3,"names":["DeveloperError","Cesium3DTileContent","featurePropertiesDirty","Object","defineProperties","prototype","featuresLength","get","throwInstantiationError","pointsLength","trianglesLength","geometryByteLength","texturesByteLength","batchTableByteLength","innerContents","ready","tileset","tile","url","batchTable","metadata","set","value","group","hasProperty","batchId","name","getFeature","applyDebugSettings","enabled","color","applyStyle","style","update","frameState","pick","ray","result","isDestroyed","destroy"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/engine/Source/Scene/Cesium3DTileContent.js"],"sourcesContent":["import DeveloperError from \"../Core/DeveloperError.js\";\n\n/**\n * The content of a tile in a {@link Cesium3DTileset}.\n * <p>\n * Derived classes of this interface provide access to individual features in the tile.\n * Access derived objects through {@link Cesium3DTile#content}.\n * </p>\n * <p>\n * This type describes an interface and is not intended to be instantiated directly.\n * </p>\n *\n * @alias Cesium3DTileContent\n * @constructor\n */\nfunction Cesium3DTileContent() {\n  /**\n   * Gets or sets if any feature's property changed.  Used to\n   * optimized applying a style when a feature's property changed.\n   * <p>\n   * This is used to implement the <code>Cesium3DTileContent</code> interface, but is\n   * not part of the public Cesium API.\n   * </p>\n   *\n   * @type {boolean}\n   *\n   * @private\n   */\n  this.featurePropertiesDirty = false;\n}\n\nObject.defineProperties(Cesium3DTileContent.prototype, {\n  /**\n   * Gets the number of features in the tile.\n   *\n   * @memberof Cesium3DTileContent.prototype\n   *\n   * @type {number}\n   * @readonly\n   */\n  featuresLength: {\n    // eslint-disable-next-line getter-return\n    get: function () {\n      DeveloperError.throwInstantiationError();\n    },\n  },\n\n  /**\n   * Gets the number of points in the tile.\n   * <p>\n   * Only applicable for tiles with Point Cloud content. This is different than {@link Cesium3DTileContent#featuresLength} which\n   * equals the number of groups of points as distinguished by the <code>BATCH_ID</code> feature table semantic.\n   * </p>\n   *\n   * @see {@link https://github.com/CesiumGS/3d-tiles/tree/main/specification/TileFormats/PointCloud#batched-points}\n   *\n   * @memberof Cesium3DTileContent.prototype\n   *\n   * @type {number}\n   * @readonly\n   */\n  pointsLength: {\n    // eslint-disable-next-line getter-return\n    get: function () {\n      DeveloperError.throwInstantiationError();\n    },\n  },\n\n  /**\n   * Gets the number of triangles in the tile.\n   *\n   * @memberof Cesium3DTileContent.prototype\n   *\n   * @type {number}\n   * @readonly\n   */\n  trianglesLength: {\n    // eslint-disable-next-line getter-return\n    get: function () {\n      DeveloperError.throwInstantiationError();\n    },\n  },\n\n  /**\n   * Gets the tile's geometry memory in bytes.\n   *\n   * @memberof Cesium3DTileContent.prototype\n   *\n   * @type {number}\n   * @readonly\n   */\n  geometryByteLength: {\n    // eslint-disable-next-line getter-return\n    get: function () {\n      DeveloperError.throwInstantiationError();\n    },\n  },\n\n  /**\n   * Gets the tile's texture memory in bytes.\n   *\n   * @memberof Cesium3DTileContent.prototype\n   *\n   * @type {number}\n   * @readonly\n   */\n  texturesByteLength: {\n    // eslint-disable-next-line getter-return\n    get: function () {\n      DeveloperError.throwInstantiationError();\n    },\n  },\n\n  /**\n   * Gets the amount of memory used by the batch table textures and any binary\n   * metadata properties not accounted for in geometryByteLength or\n   * texturesByteLength\n   *\n   * @memberof Cesium3DTileContent.prototype\n   *\n   * @type {number}\n   * @readonly\n   */\n  batchTableByteLength: {\n    // eslint-disable-next-line getter-return\n    get: function () {\n      DeveloperError.throwInstantiationError();\n    },\n  },\n\n  /**\n   * Gets the array of {@link Cesium3DTileContent} objects for contents that contain other contents, such as composite tiles. The inner contents may in turn have inner contents, such as a composite tile that contains a composite tile.\n   *\n   * @see {@link https://github.com/CesiumGS/3d-tiles/tree/main/specification/TileFormats/Composite|Composite specification}\n   *\n   * @memberof Cesium3DTileContent.prototype\n   *\n   * @type {Array}\n   * @readonly\n   */\n  innerContents: {\n    // eslint-disable-next-line getter-return\n    get: function () {\n      DeveloperError.throwInstantiationError();\n    },\n  },\n\n  /**\n   * Returns true when the tile's content is ready to render; otherwise false\n   *\n   * @memberof Cesium3DTileContent.prototype\n   *\n   * @type {boolean}\n   * @readonly\n   */\n  ready: {\n    // eslint-disable-next-line getter-return\n    get: function () {\n      DeveloperError.throwInstantiationError();\n    },\n  },\n\n  /**\n   * Gets the tileset for this tile.\n   *\n   * @memberof Cesium3DTileContent.prototype\n   *\n   * @type {Cesium3DTileset}\n   * @readonly\n   */\n  tileset: {\n    // eslint-disable-next-line getter-return\n    get: function () {\n      DeveloperError.throwInstantiationError();\n    },\n  },\n\n  /**\n   * Gets the tile containing this content.\n   *\n   * @memberof Cesium3DTileContent.prototype\n   *\n   * @type {Cesium3DTile}\n   * @readonly\n   */\n  tile: {\n    // eslint-disable-next-line getter-return\n    get: function () {\n      DeveloperError.throwInstantiationError();\n    },\n  },\n\n  /**\n   * Gets the url of the tile's content.\n   * @memberof Cesium3DTileContent.prototype\n   *\n   * @type {string}\n   * @readonly\n   */\n  url: {\n    // eslint-disable-next-line getter-return\n    get: function () {\n      DeveloperError.throwInstantiationError();\n    },\n  },\n\n  /**\n   * Gets the batch table for this content.\n   * <p>\n   * This is used to implement the <code>Cesium3DTileContent</code> interface, but is\n   * not part of the public Cesium API.\n   * </p>\n   *\n   * @type {Cesium3DTileBatchTable}\n   * @readonly\n   *\n   * @private\n   */\n  batchTable: {\n    // eslint-disable-next-line getter-return\n    get: function () {\n      DeveloperError.throwInstantiationError();\n    },\n  },\n\n  /**\n   * Gets the metadata for this content, whether it is available explicitly or via\n   * implicit tiling. If there is no metadata, this property should be undefined.\n   * <p>\n   * This is used to implement the <code>Cesium3DTileContent</code> interface, but is\n   * not part of the public Cesium API.\n   * </p>\n   *\n   * @type {ImplicitMetadataView|undefined}\n   *\n   * @private\n   * @experimental This feature is using part of the 3D Tiles spec that is not final and is subject to change without Cesium's standard deprecation policy.\n   */\n  metadata: {\n    // eslint-disable-next-line getter-return\n    get: function () {\n      DeveloperError.throwInstantiationError();\n    },\n    set: function (value) {\n      DeveloperError.throwInstantiationError();\n    },\n  },\n\n  /**\n   * Gets the group for this content if the content has metadata (3D Tiles 1.1) or\n   * if it uses the <code>3DTILES_metadata</code> extension. If neither are present,\n   * this property should be undefined.\n   * <p>\n   * This is used to implement the <code>Cesium3DTileContent</code> interface, but is\n   * not part of the public Cesium API.\n   * </p>\n   *\n   * @type {Cesium3DTileContentGroup|undefined}\n   *\n   * @private\n   * @experimental This feature is using part of the 3D Tiles spec that is not final and is subject to change without Cesium's standard deprecation policy.\n   */\n  group: {\n    // eslint-disable-next-line getter-return\n    get: function () {\n      DeveloperError.throwInstantiationError();\n    },\n    set: function (value) {\n      DeveloperError.throwInstantiationError();\n    },\n  },\n});\n\n/**\n * Returns whether the feature has this property.\n *\n * @param {number} batchId The batchId for the feature.\n * @param {string} name The case-sensitive name of the property.\n * @returns {boolean} <code>true</code> if the feature has this property; otherwise, <code>false</code>.\n */\nCesium3DTileContent.prototype.hasProperty = function (batchId, name) {\n  DeveloperError.throwInstantiationError();\n};\n\n/**\n * Returns the {@link Cesium3DTileFeature} object for the feature with the\n * given <code>batchId</code>.  This object is used to get and modify the\n * feature's properties.\n * <p>\n * Features in a tile are ordered by <code>batchId</code>, an index used to retrieve their metadata from the batch table.\n * </p>\n *\n * @see {@link https://github.com/CesiumGS/3d-tiles/tree/main/specification/TileFormats/BatchTable}.\n *\n * @param {number} batchId The batchId for the feature.\n * @returns {Cesium3DTileFeature} The corresponding {@link Cesium3DTileFeature} object.\n *\n * @exception {DeveloperError} batchId must be between zero and {@link Cesium3DTileContent#featuresLength} - 1.\n */\nCesium3DTileContent.prototype.getFeature = function (batchId) {\n  DeveloperError.throwInstantiationError();\n};\n\n/**\n     * Called when {@link Cesium3DTileset#debugColorizeTiles} changes.\n     * <p>\n     * This is used to implement the <code>Cesium3DTileContent</code> interface, but is\n     * not part of the public Cesium API.\n     * </p>\n     *\n     * @param {boolean} enabled Whether to enable or disable debug settings.\n     * @returns {Cesium3DTileFeature} The corresponding {@link Cesium3DTileFeature} object.\n\n     * @private\n     */\nCesium3DTileContent.prototype.applyDebugSettings = function (enabled, color) {\n  DeveloperError.throwInstantiationError();\n};\n\n/**\n * Apply a style to the content\n * <p>\n * This is used to implement the <code>Cesium3DTileContent</code> interface, but is\n * not part of the public Cesium API.\n * </p>\n *\n * @param {Cesium3DTileStyle} style The style.\n *\n * @private\n */\nCesium3DTileContent.prototype.applyStyle = function (style) {\n  DeveloperError.throwInstantiationError();\n};\n\n/**\n * Called by the tile during tileset traversal to get the draw commands needed to render this content.\n * When the tile's content is in the PROCESSING state, this creates WebGL resources to ultimately\n * move to the READY state.\n * <p>\n * This is used to implement the <code>Cesium3DTileContent</code> interface, but is\n * not part of the public Cesium API.\n * </p>\n *\n * @param {Cesium3DTileset} tileset The tileset containing this tile.\n * @param {FrameState} frameState The frame state.\n *\n * @private\n */\nCesium3DTileContent.prototype.update = function (tileset, frameState) {\n  DeveloperError.throwInstantiationError();\n};\n\n/**\n * Find an intersection between a ray and the tile content surface that was rendered. The ray must be given in world coordinates.\n *\n * @param {Ray} ray The ray to test for intersection.\n * @param {FrameState} frameState The frame state.\n * @param {Cartesian3|undefined} [result] The intersection or <code>undefined</code> if none was found.\n * @returns {Cartesian3|undefined} The intersection or <code>undefined</code> if none was found.\n *\n * @private\n */\nCesium3DTileContent.prototype.pick = function (ray, frameState, result) {\n  DeveloperError.throwInstantiationError();\n};\n\n/**\n * Returns true if this object was destroyed; otherwise, false.\n * <br /><br />\n * If this object was destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.\n * <p>\n * This is used to implement the <code>Cesium3DTileContent</code> interface, but is\n * not part of the public Cesium API.\n * </p>\n *\n * @returns {boolean} <code>true</code> if this object was destroyed; otherwise, <code>false</code>.\n *\n * @see Cesium3DTileContent#destroy\n *\n * @private\n */\nCesium3DTileContent.prototype.isDestroyed = function () {\n  DeveloperError.throwInstantiationError();\n};\n\n/**\n * Destroys the WebGL resources held by this object.  Destroying an object allows for deterministic\n * release of WebGL resources, instead of relying on the garbage collector to destroy this object.\n * <br /><br />\n * Once an object is destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.  Therefore,\n * assign the return value (<code>undefined</code>) to the object as done in the example.\n * <p>\n * This is used to implement the <code>Cesium3DTileContent</code> interface, but is\n * not part of the public Cesium API.\n * </p>\n *\n * @exception {DeveloperError} This object was destroyed, i.e., destroy() was called.\n *\n * @example\n * content = content && content.destroy();\n *\n * @see Cesium3DTileContent#isDestroyed\n *\n * @private\n */\nCesium3DTileContent.prototype.destroy = function () {\n  DeveloperError.throwInstantiationError();\n};\nexport default Cesium3DTileContent;\n"],"mappings":"AAAA,OAAOA,cAAc,MAAM,2BAA2B;;AAEtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,mBAAmBA,CAAA,EAAG;EAC7B;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,IAAI,CAACC,sBAAsB,GAAG,KAAK;AACrC;AAEAC,MAAM,CAACC,gBAAgB,CAACH,mBAAmB,CAACI,SAAS,EAAE;EACrD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACEC,cAAc,EAAE;IACd;IACAC,GAAG,EAAE,SAAAA,CAAA,EAAY;MACfP,cAAc,CAACQ,uBAAuB,CAAC,CAAC;IAC1C;EACF,CAAC;EAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEC,YAAY,EAAE;IACZ;IACAF,GAAG,EAAE,SAAAA,CAAA,EAAY;MACfP,cAAc,CAACQ,uBAAuB,CAAC,CAAC;IAC1C;EACF,CAAC;EAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACEE,eAAe,EAAE;IACf;IACAH,GAAG,EAAE,SAAAA,CAAA,EAAY;MACfP,cAAc,CAACQ,uBAAuB,CAAC,CAAC;IAC1C;EACF,CAAC;EAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACEG,kBAAkB,EAAE;IAClB;IACAJ,GAAG,EAAE,SAAAA,CAAA,EAAY;MACfP,cAAc,CAACQ,uBAAuB,CAAC,CAAC;IAC1C;EACF,CAAC;EAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACEI,kBAAkB,EAAE;IAClB;IACAL,GAAG,EAAE,SAAAA,CAAA,EAAY;MACfP,cAAc,CAACQ,uBAAuB,CAAC,CAAC;IAC1C;EACF,CAAC;EAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEK,oBAAoB,EAAE;IACpB;IACAN,GAAG,EAAE,SAAAA,CAAA,EAAY;MACfP,cAAc,CAACQ,uBAAuB,CAAC,CAAC;IAC1C;EACF,CAAC;EAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEM,aAAa,EAAE;IACb;IACAP,GAAG,EAAE,SAAAA,CAAA,EAAY;MACfP,cAAc,CAACQ,uBAAuB,CAAC,CAAC;IAC1C;EACF,CAAC;EAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACEO,KAAK,EAAE;IACL;IACAR,GAAG,EAAE,SAAAA,CAAA,EAAY;MACfP,cAAc,CAACQ,uBAAuB,CAAC,CAAC;IAC1C;EACF,CAAC;EAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACEQ,OAAO,EAAE;IACP;IACAT,GAAG,EAAE,SAAAA,CAAA,EAAY;MACfP,cAAc,CAACQ,uBAAuB,CAAC,CAAC;IAC1C;EACF,CAAC;EAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACES,IAAI,EAAE;IACJ;IACAV,GAAG,EAAE,SAAAA,CAAA,EAAY;MACfP,cAAc,CAACQ,uBAAuB,CAAC,CAAC;IAC1C;EACF,CAAC;EAED;AACF;AACA;AACA;AACA;AACA;AACA;EACEU,GAAG,EAAE;IACH;IACAX,GAAG,EAAE,SAAAA,CAAA,EAAY;MACfP,cAAc,CAACQ,uBAAuB,CAAC,CAAC;IAC1C;EACF,CAAC;EAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEW,UAAU,EAAE;IACV;IACAZ,GAAG,EAAE,SAAAA,CAAA,EAAY;MACfP,cAAc,CAACQ,uBAAuB,CAAC,CAAC;IAC1C;EACF,CAAC;EAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEY,QAAQ,EAAE;IACR;IACAb,GAAG,EAAE,SAAAA,CAAA,EAAY;MACfP,cAAc,CAACQ,uBAAuB,CAAC,CAAC;IAC1C,CAAC;IACDa,GAAG,EAAE,SAAAA,CAAUC,KAAK,EAAE;MACpBtB,cAAc,CAACQ,uBAAuB,CAAC,CAAC;IAC1C;EACF,CAAC;EAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEe,KAAK,EAAE;IACL;IACAhB,GAAG,EAAE,SAAAA,CAAA,EAAY;MACfP,cAAc,CAACQ,uBAAuB,CAAC,CAAC;IAC1C,CAAC;IACDa,GAAG,EAAE,SAAAA,CAAUC,KAAK,EAAE;MACpBtB,cAAc,CAACQ,uBAAuB,CAAC,CAAC;IAC1C;EACF;AACF,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACAP,mBAAmB,CAACI,SAAS,CAACmB,WAAW,GAAG,UAAUC,OAAO,EAAEC,IAAI,EAAE;EACnE1B,cAAc,CAACQ,uBAAuB,CAAC,CAAC;AAC1C,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAP,mBAAmB,CAACI,SAAS,CAACsB,UAAU,GAAG,UAAUF,OAAO,EAAE;EAC5DzB,cAAc,CAACQ,uBAAuB,CAAC,CAAC;AAC1C,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAP,mBAAmB,CAACI,SAAS,CAACuB,kBAAkB,GAAG,UAAUC,OAAO,EAAEC,KAAK,EAAE;EAC3E9B,cAAc,CAACQ,uBAAuB,CAAC,CAAC;AAC1C,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAP,mBAAmB,CAACI,SAAS,CAAC0B,UAAU,GAAG,UAAUC,KAAK,EAAE;EAC1DhC,cAAc,CAACQ,uBAAuB,CAAC,CAAC;AAC1C,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAP,mBAAmB,CAACI,SAAS,CAAC4B,MAAM,GAAG,UAAUjB,OAAO,EAAEkB,UAAU,EAAE;EACpElC,cAAc,CAACQ,uBAAuB,CAAC,CAAC;AAC1C,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAP,mBAAmB,CAACI,SAAS,CAAC8B,IAAI,GAAG,UAAUC,GAAG,EAAEF,UAAU,EAAEG,MAAM,EAAE;EACtErC,cAAc,CAACQ,uBAAuB,CAAC,CAAC;AAC1C,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAP,mBAAmB,CAACI,SAAS,CAACiC,WAAW,GAAG,YAAY;EACtDtC,cAAc,CAACQ,uBAAuB,CAAC,CAAC;AAC1C,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAP,mBAAmB,CAACI,SAAS,CAACkC,OAAO,GAAG,YAAY;EAClDvC,cAAc,CAACQ,uBAAuB,CAAC,CAAC;AAC1C,CAAC;AACD,eAAeP,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}