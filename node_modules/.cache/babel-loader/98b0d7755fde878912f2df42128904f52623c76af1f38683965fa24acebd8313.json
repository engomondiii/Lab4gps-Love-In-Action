{"ast":null,"code":"import defined from \"./defined.js\";\nimport DeveloperError from \"./DeveloperError.js\";\n\n/**\n * Subdivides an array into a number of smaller, equal sized arrays.\n *\n * @function subdivideArray\n *\n * @param {Array} array The array to divide.\n * @param {number} numberOfArrays The number of arrays to divide the provided array into.\n *\n * @exception {DeveloperError} numberOfArrays must be greater than 0.\n */\nfunction subdivideArray(array, numberOfArrays) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(array)) {\n    throw new DeveloperError(\"array is required.\");\n  }\n  if (!defined(numberOfArrays) || numberOfArrays < 1) {\n    throw new DeveloperError(\"numberOfArrays must be greater than 0.\");\n  }\n  //>>includeEnd('debug');\n\n  const result = [];\n  const len = array.length;\n  let i = 0;\n  while (i < len) {\n    const size = Math.ceil((len - i) / numberOfArrays--);\n    result.push(array.slice(i, i + size));\n    i += size;\n  }\n  return result;\n}\nexport default subdivideArray;","map":{"version":3,"names":["defined","DeveloperError","subdivideArray","array","numberOfArrays","result","len","length","i","size","Math","ceil","push","slice"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/engine/Source/Core/subdivideArray.js"],"sourcesContent":["import defined from \"./defined.js\";\nimport DeveloperError from \"./DeveloperError.js\";\n\n/**\n * Subdivides an array into a number of smaller, equal sized arrays.\n *\n * @function subdivideArray\n *\n * @param {Array} array The array to divide.\n * @param {number} numberOfArrays The number of arrays to divide the provided array into.\n *\n * @exception {DeveloperError} numberOfArrays must be greater than 0.\n */\nfunction subdivideArray(array, numberOfArrays) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(array)) {\n    throw new DeveloperError(\"array is required.\");\n  }\n\n  if (!defined(numberOfArrays) || numberOfArrays < 1) {\n    throw new DeveloperError(\"numberOfArrays must be greater than 0.\");\n  }\n  //>>includeEnd('debug');\n\n  const result = [];\n  const len = array.length;\n  let i = 0;\n  while (i < len) {\n    const size = Math.ceil((len - i) / numberOfArrays--);\n    result.push(array.slice(i, i + size));\n    i += size;\n  }\n  return result;\n}\nexport default subdivideArray;\n"],"mappings":"AAAA,OAAOA,OAAO,MAAM,cAAc;AAClC,OAAOC,cAAc,MAAM,qBAAqB;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,cAAcA,CAACC,KAAK,EAAEC,cAAc,EAAE;EAC7C;EACA,IAAI,CAACJ,OAAO,CAACG,KAAK,CAAC,EAAE;IACnB,MAAM,IAAIF,cAAc,CAAC,oBAAoB,CAAC;EAChD;EAEA,IAAI,CAACD,OAAO,CAACI,cAAc,CAAC,IAAIA,cAAc,GAAG,CAAC,EAAE;IAClD,MAAM,IAAIH,cAAc,CAAC,wCAAwC,CAAC;EACpE;EACA;;EAEA,MAAMI,MAAM,GAAG,EAAE;EACjB,MAAMC,GAAG,GAAGH,KAAK,CAACI,MAAM;EACxB,IAAIC,CAAC,GAAG,CAAC;EACT,OAAOA,CAAC,GAAGF,GAAG,EAAE;IACd,MAAMG,IAAI,GAAGC,IAAI,CAACC,IAAI,CAAC,CAACL,GAAG,GAAGE,CAAC,IAAIJ,cAAc,EAAE,CAAC;IACpDC,MAAM,CAACO,IAAI,CAACT,KAAK,CAACU,KAAK,CAACL,CAAC,EAAEA,CAAC,GAAGC,IAAI,CAAC,CAAC;IACrCD,CAAC,IAAIC,IAAI;EACX;EACA,OAAOJ,MAAM;AACf;AACA,eAAeH,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}