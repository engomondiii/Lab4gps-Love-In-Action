{"ast":null,"code":"import BoundingRectangle from \"../Core/BoundingRectangle.js\";\nimport Color from \"../Core/Color.js\";\nimport defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport destroyObject from \"../Core/destroyObject.js\";\nimport FramebufferManager from \"../Renderer/FramebufferManager.js\";\nimport PassState from \"../Renderer/PassState.js\";\n\n/**\n * @private\n */\nfunction PickFramebuffer(context) {\n  // Override per-command states\n  const passState = new PassState(context);\n  passState.blendingEnabled = false;\n  passState.scissorTest = {\n    enabled: true,\n    rectangle: new BoundingRectangle()\n  };\n  passState.viewport = new BoundingRectangle();\n  this._context = context;\n  this._fb = new FramebufferManager({\n    depthStencil: true\n  });\n  this._passState = passState;\n  this._width = 0;\n  this._height = 0;\n}\nPickFramebuffer.prototype.begin = function (screenSpaceRectangle, viewport) {\n  const context = this._context;\n  const {\n    width,\n    height\n  } = viewport;\n  BoundingRectangle.clone(screenSpaceRectangle, this._passState.scissorTest.rectangle);\n\n  // Create or recreate renderbuffers and framebuffer used for picking\n  this._width = width;\n  this._height = height;\n  this._fb.update(context, width, height);\n  this._passState.framebuffer = this._fb.framebuffer;\n  this._passState.viewport.width = width;\n  this._passState.viewport.height = height;\n  return this._passState;\n};\nconst colorScratchForPickFramebuffer = new Color();\n\n/**\n * Return the picked object rendered within a given rectangle.\n *\n * @param {BoundingRectangle} screenSpaceRectangle\n * @returns {object|undefined} The object rendered in the middle of the rectangle, or undefined if nothing was rendered.\n */\nPickFramebuffer.prototype.end = function (screenSpaceRectangle) {\n  const width = defaultValue(screenSpaceRectangle.width, 1.0);\n  const height = defaultValue(screenSpaceRectangle.height, 1.0);\n  const context = this._context;\n  const pixels = context.readPixels({\n    x: screenSpaceRectangle.x,\n    y: screenSpaceRectangle.y,\n    width: width,\n    height: height,\n    framebuffer: this._fb.framebuffer\n  });\n  const max = Math.max(width, height);\n  const length = max * max;\n  const halfWidth = Math.floor(width * 0.5);\n  const halfHeight = Math.floor(height * 0.5);\n  let x = 0;\n  let y = 0;\n  let dx = 0;\n  let dy = -1;\n\n  // Spiral around the center pixel, this is a workaround until\n  // we can access the depth buffer on all browsers.\n\n  // The region does not have to square and the dimensions do not have to be odd, but\n  // loop iterations would be wasted. Prefer square regions where the size is odd.\n  for (let i = 0; i < length; ++i) {\n    if (-halfWidth <= x && x <= halfWidth && -halfHeight <= y && y <= halfHeight) {\n      const index = 4 * ((halfHeight - y) * width + x + halfWidth);\n      colorScratchForPickFramebuffer.red = Color.byteToFloat(pixels[index]);\n      colorScratchForPickFramebuffer.green = Color.byteToFloat(pixels[index + 1]);\n      colorScratchForPickFramebuffer.blue = Color.byteToFloat(pixels[index + 2]);\n      colorScratchForPickFramebuffer.alpha = Color.byteToFloat(pixels[index + 3]);\n      const object = context.getObjectByPickColor(colorScratchForPickFramebuffer);\n      if (defined(object)) {\n        return object;\n      }\n    }\n\n    // if (top right || bottom left corners) || (top left corner) || (bottom right corner + (1, 0))\n    // change spiral direction\n    if (x === y || x < 0 && -x === y || x > 0 && x === 1 - y) {\n      const temp = dx;\n      dx = -dy;\n      dy = temp;\n    }\n    x += dx;\n    y += dy;\n  }\n  return undefined;\n};\n\n/**\n * Return a typed array containing the RGBA (byte) components of the\n * pixel that is at the center of the given rectangle.\n *\n * This may, for example, be voxel tile and sample information as rendered\n * by a pickVoxel pass, within a given rectangle. Or it may be the result\n * of a metadata picking rendering pass.\n *\n * @param {BoundingRectangle} screenSpaceRectangle\n * @returns {Uint8Array} The RGBA components\n */\nPickFramebuffer.prototype.readCenterPixel = function (screenSpaceRectangle) {\n  const width = defaultValue(screenSpaceRectangle.width, 1.0);\n  const height = defaultValue(screenSpaceRectangle.height, 1.0);\n  const context = this._context;\n  const pixels = context.readPixels({\n    x: screenSpaceRectangle.x,\n    y: screenSpaceRectangle.y,\n    width: width,\n    height: height,\n    framebuffer: this._fb.framebuffer\n  });\n\n  // Read the center pixel\n  const halfWidth = Math.floor(width * 0.5);\n  const halfHeight = Math.floor(height * 0.5);\n  const index = 4 * (halfHeight * width + halfWidth);\n  return pixels.slice(index, index + 4);\n};\nPickFramebuffer.prototype.isDestroyed = function () {\n  return false;\n};\nPickFramebuffer.prototype.destroy = function () {\n  this._fb.destroy();\n  return destroyObject(this);\n};\nexport default PickFramebuffer;","map":{"version":3,"names":["BoundingRectangle","Color","defaultValue","defined","destroyObject","FramebufferManager","PassState","PickFramebuffer","context","passState","blendingEnabled","scissorTest","enabled","rectangle","viewport","_context","_fb","depthStencil","_passState","_width","_height","prototype","begin","screenSpaceRectangle","width","height","clone","update","framebuffer","colorScratchForPickFramebuffer","end","pixels","readPixels","x","y","max","Math","length","halfWidth","floor","halfHeight","dx","dy","i","index","red","byteToFloat","green","blue","alpha","object","getObjectByPickColor","temp","undefined","readCenterPixel","slice","isDestroyed","destroy"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/engine/Source/Scene/PickFramebuffer.js"],"sourcesContent":["import BoundingRectangle from \"../Core/BoundingRectangle.js\";\nimport Color from \"../Core/Color.js\";\nimport defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport destroyObject from \"../Core/destroyObject.js\";\nimport FramebufferManager from \"../Renderer/FramebufferManager.js\";\nimport PassState from \"../Renderer/PassState.js\";\n\n/**\n * @private\n */\nfunction PickFramebuffer(context) {\n  // Override per-command states\n  const passState = new PassState(context);\n  passState.blendingEnabled = false;\n  passState.scissorTest = {\n    enabled: true,\n    rectangle: new BoundingRectangle(),\n  };\n  passState.viewport = new BoundingRectangle();\n\n  this._context = context;\n  this._fb = new FramebufferManager({\n    depthStencil: true,\n  });\n  this._passState = passState;\n  this._width = 0;\n  this._height = 0;\n}\n\nPickFramebuffer.prototype.begin = function (screenSpaceRectangle, viewport) {\n  const context = this._context;\n  const { width, height } = viewport;\n\n  BoundingRectangle.clone(\n    screenSpaceRectangle,\n    this._passState.scissorTest.rectangle,\n  );\n\n  // Create or recreate renderbuffers and framebuffer used for picking\n  this._width = width;\n  this._height = height;\n  this._fb.update(context, width, height);\n  this._passState.framebuffer = this._fb.framebuffer;\n\n  this._passState.viewport.width = width;\n  this._passState.viewport.height = height;\n\n  return this._passState;\n};\n\nconst colorScratchForPickFramebuffer = new Color();\n\n/**\n * Return the picked object rendered within a given rectangle.\n *\n * @param {BoundingRectangle} screenSpaceRectangle\n * @returns {object|undefined} The object rendered in the middle of the rectangle, or undefined if nothing was rendered.\n */\nPickFramebuffer.prototype.end = function (screenSpaceRectangle) {\n  const width = defaultValue(screenSpaceRectangle.width, 1.0);\n  const height = defaultValue(screenSpaceRectangle.height, 1.0);\n\n  const context = this._context;\n  const pixels = context.readPixels({\n    x: screenSpaceRectangle.x,\n    y: screenSpaceRectangle.y,\n    width: width,\n    height: height,\n    framebuffer: this._fb.framebuffer,\n  });\n\n  const max = Math.max(width, height);\n  const length = max * max;\n  const halfWidth = Math.floor(width * 0.5);\n  const halfHeight = Math.floor(height * 0.5);\n\n  let x = 0;\n  let y = 0;\n  let dx = 0;\n  let dy = -1;\n\n  // Spiral around the center pixel, this is a workaround until\n  // we can access the depth buffer on all browsers.\n\n  // The region does not have to square and the dimensions do not have to be odd, but\n  // loop iterations would be wasted. Prefer square regions where the size is odd.\n  for (let i = 0; i < length; ++i) {\n    if (\n      -halfWidth <= x &&\n      x <= halfWidth &&\n      -halfHeight <= y &&\n      y <= halfHeight\n    ) {\n      const index = 4 * ((halfHeight - y) * width + x + halfWidth);\n\n      colorScratchForPickFramebuffer.red = Color.byteToFloat(pixels[index]);\n      colorScratchForPickFramebuffer.green = Color.byteToFloat(\n        pixels[index + 1],\n      );\n      colorScratchForPickFramebuffer.blue = Color.byteToFloat(\n        pixels[index + 2],\n      );\n      colorScratchForPickFramebuffer.alpha = Color.byteToFloat(\n        pixels[index + 3],\n      );\n\n      const object = context.getObjectByPickColor(\n        colorScratchForPickFramebuffer,\n      );\n      if (defined(object)) {\n        return object;\n      }\n    }\n\n    // if (top right || bottom left corners) || (top left corner) || (bottom right corner + (1, 0))\n    // change spiral direction\n    if (x === y || (x < 0 && -x === y) || (x > 0 && x === 1 - y)) {\n      const temp = dx;\n      dx = -dy;\n      dy = temp;\n    }\n\n    x += dx;\n    y += dy;\n  }\n\n  return undefined;\n};\n\n/**\n * Return a typed array containing the RGBA (byte) components of the\n * pixel that is at the center of the given rectangle.\n *\n * This may, for example, be voxel tile and sample information as rendered\n * by a pickVoxel pass, within a given rectangle. Or it may be the result\n * of a metadata picking rendering pass.\n *\n * @param {BoundingRectangle} screenSpaceRectangle\n * @returns {Uint8Array} The RGBA components\n */\nPickFramebuffer.prototype.readCenterPixel = function (screenSpaceRectangle) {\n  const width = defaultValue(screenSpaceRectangle.width, 1.0);\n  const height = defaultValue(screenSpaceRectangle.height, 1.0);\n\n  const context = this._context;\n  const pixels = context.readPixels({\n    x: screenSpaceRectangle.x,\n    y: screenSpaceRectangle.y,\n    width: width,\n    height: height,\n    framebuffer: this._fb.framebuffer,\n  });\n\n  // Read the center pixel\n  const halfWidth = Math.floor(width * 0.5);\n  const halfHeight = Math.floor(height * 0.5);\n  const index = 4 * (halfHeight * width + halfWidth);\n\n  return pixels.slice(index, index + 4);\n};\n\nPickFramebuffer.prototype.isDestroyed = function () {\n  return false;\n};\n\nPickFramebuffer.prototype.destroy = function () {\n  this._fb.destroy();\n  return destroyObject(this);\n};\n\nexport default PickFramebuffer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}