{"ast":null,"code":"import defaultValue from \"../Core/defaultValue.js\";\nimport IonImageryProvider from \"./IonImageryProvider.js\";\nimport IonWorldImageryStyle from \"./IonWorldImageryStyle.js\";\n\n/**\n * Creates an {@link IonImageryProvider} instance for ion's default global base imagery layer, currently Bing Maps.\n *\n * @function\n *\n * @param {Object} [options] Object with the following properties:\n * @param {IonWorldImageryStyle} [options.style=IonWorldImageryStyle] The style of base imagery, only AERIAL, AERIAL_WITH_LABELS, and ROAD are currently supported.\n * @returns {Promise<IonImageryProvider>}\n *\n * @see Ion\n *\n * @example\n * // Create a Cesium World Imagery base layer with default settings\n * try {\n *   const imageryProvider = await Cesium.createWorldImageryAsync();\n * } catch (error) {\n *   console.log(`There was an error creating world imagery: ${error}`);\n * }\n *\n * @example\n * // Create Cesium World Imagery with different style\n * try {\n *   const imageryProvider = await Cesium.createWorldImageryAsync({\n *         style: Cesium.IonWorldImageryStyle.AERIAL_WITH_LABELS\n *   });\n * } catch (error) {\n *   console.log(`There was an error creating world imagery: ${error}`);\n * }\n */\nfunction createWorldImageryAsync(options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n  const style = defaultValue(options.style, IonWorldImageryStyle.AERIAL);\n  return IonImageryProvider.fromAssetId(style);\n}\nexport default createWorldImageryAsync;","map":{"version":3,"names":["defaultValue","IonImageryProvider","IonWorldImageryStyle","createWorldImageryAsync","options","EMPTY_OBJECT","style","AERIAL","fromAssetId"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/engine/Source/Scene/createWorldImageryAsync.js"],"sourcesContent":["import defaultValue from \"../Core/defaultValue.js\";\nimport IonImageryProvider from \"./IonImageryProvider.js\";\nimport IonWorldImageryStyle from \"./IonWorldImageryStyle.js\";\n\n/**\n * Creates an {@link IonImageryProvider} instance for ion's default global base imagery layer, currently Bing Maps.\n *\n * @function\n *\n * @param {Object} [options] Object with the following properties:\n * @param {IonWorldImageryStyle} [options.style=IonWorldImageryStyle] The style of base imagery, only AERIAL, AERIAL_WITH_LABELS, and ROAD are currently supported.\n * @returns {Promise<IonImageryProvider>}\n *\n * @see Ion\n *\n * @example\n * // Create a Cesium World Imagery base layer with default settings\n * try {\n *   const imageryProvider = await Cesium.createWorldImageryAsync();\n * } catch (error) {\n *   console.log(`There was an error creating world imagery: ${error}`);\n * }\n *\n * @example\n * // Create Cesium World Imagery with different style\n * try {\n *   const imageryProvider = await Cesium.createWorldImageryAsync({\n *         style: Cesium.IonWorldImageryStyle.AERIAL_WITH_LABELS\n *   });\n * } catch (error) {\n *   console.log(`There was an error creating world imagery: ${error}`);\n * }\n */\nfunction createWorldImageryAsync(options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n  const style = defaultValue(options.style, IonWorldImageryStyle.AERIAL);\n  return IonImageryProvider.fromAssetId(style);\n}\nexport default createWorldImageryAsync;\n"],"mappings":"AAAA,OAAOA,YAAY,MAAM,yBAAyB;AAClD,OAAOC,kBAAkB,MAAM,yBAAyB;AACxD,OAAOC,oBAAoB,MAAM,2BAA2B;;AAE5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,uBAAuBA,CAACC,OAAO,EAAE;EACxCA,OAAO,GAAGJ,YAAY,CAACI,OAAO,EAAEJ,YAAY,CAACK,YAAY,CAAC;EAC1D,MAAMC,KAAK,GAAGN,YAAY,CAACI,OAAO,CAACE,KAAK,EAAEJ,oBAAoB,CAACK,MAAM,CAAC;EACtE,OAAON,kBAAkB,CAACO,WAAW,CAACF,KAAK,CAAC;AAC9C;AACA,eAAeH,uBAAuB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}