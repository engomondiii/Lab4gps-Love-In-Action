{"ast":null,"code":"//This file is automatically rebuilt by the Cesium build process.\nexport default \"vec4 geometryStage(inout ProcessedAttributes attributes, mat4 modelView, mat3 normal)\\n\\\n{\\n\\\n    vec4 computedPosition;\\n\\\n\\n\\\n    // Compute positions in different coordinate systems\\n\\\n    vec3 positionMC = attributes.positionMC;\\n\\\n    v_positionMC = positionMC;\\n\\\n    v_positionEC = (modelView * vec4(positionMC, 1.0)).xyz;\\n\\\n\\n\\\n    #if defined(USE_2D_POSITIONS) || defined(USE_2D_INSTANCING)\\n\\\n    vec3 position2D = attributes.position2D;\\n\\\n    vec3 positionEC = (u_modelView2D * vec4(position2D, 1.0)).xyz;\\n\\\n    computedPosition = czm_projection * vec4(positionEC, 1.0);\\n\\\n    #else\\n\\\n    computedPosition = czm_projection * vec4(v_positionEC, 1.0);\\n\\\n    #endif\\n\\\n\\n\\\n    // Sometimes the custom shader and/or style needs this\\n\\\n    #if defined(COMPUTE_POSITION_WC_CUSTOM_SHADER) || defined(COMPUTE_POSITION_WC_STYLE) || defined(COMPUTE_POSITION_WC_ATMOSPHERE) || defined(ENABLE_CLIPPING_POLYGONS)\\n\\\n    // Note that this is a 32-bit position which may result in jitter on small\\n\\\n    // scales.\\n\\\n    v_positionWC = (czm_model * vec4(positionMC, 1.0)).xyz;\\n\\\n    #endif\\n\\\n\\n\\\n    #ifdef HAS_NORMALS\\n\\\n    v_normalEC = normalize(normal * attributes.normalMC);\\n\\\n    #endif\\n\\\n\\n\\\n    #ifdef HAS_TANGENTS\\n\\\n    v_tangentEC = normalize(normal * attributes.tangentMC);\\n\\\n    #endif\\n\\\n\\n\\\n    #ifdef HAS_BITANGENTS\\n\\\n    v_bitangentEC = normalize(normal * attributes.bitangentMC);\\n\\\n    #endif\\n\\\n\\n\\\n    // All other varyings need to be dynamically generated in\\n\\\n    // GeometryPipelineStage\\n\\\n    setDynamicVaryings(attributes);\\n\\\n\\n\\\n    return computedPosition;\\n\\\n}\\n\\\n\";","map":{"version":3,"names":[],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/engine/Source/Shaders/Model/GeometryStageVS.js"],"sourcesContent":["//This file is automatically rebuilt by the Cesium build process.\nexport default \"vec4 geometryStage(inout ProcessedAttributes attributes, mat4 modelView, mat3 normal)\\n\\\n{\\n\\\n    vec4 computedPosition;\\n\\\n\\n\\\n    // Compute positions in different coordinate systems\\n\\\n    vec3 positionMC = attributes.positionMC;\\n\\\n    v_positionMC = positionMC;\\n\\\n    v_positionEC = (modelView * vec4(positionMC, 1.0)).xyz;\\n\\\n\\n\\\n    #if defined(USE_2D_POSITIONS) || defined(USE_2D_INSTANCING)\\n\\\n    vec3 position2D = attributes.position2D;\\n\\\n    vec3 positionEC = (u_modelView2D * vec4(position2D, 1.0)).xyz;\\n\\\n    computedPosition = czm_projection * vec4(positionEC, 1.0);\\n\\\n    #else\\n\\\n    computedPosition = czm_projection * vec4(v_positionEC, 1.0);\\n\\\n    #endif\\n\\\n\\n\\\n    // Sometimes the custom shader and/or style needs this\\n\\\n    #if defined(COMPUTE_POSITION_WC_CUSTOM_SHADER) || defined(COMPUTE_POSITION_WC_STYLE) || defined(COMPUTE_POSITION_WC_ATMOSPHERE) || defined(ENABLE_CLIPPING_POLYGONS)\\n\\\n    // Note that this is a 32-bit position which may result in jitter on small\\n\\\n    // scales.\\n\\\n    v_positionWC = (czm_model * vec4(positionMC, 1.0)).xyz;\\n\\\n    #endif\\n\\\n\\n\\\n    #ifdef HAS_NORMALS\\n\\\n    v_normalEC = normalize(normal * attributes.normalMC);\\n\\\n    #endif\\n\\\n\\n\\\n    #ifdef HAS_TANGENTS\\n\\\n    v_tangentEC = normalize(normal * attributes.tangentMC);\\n\\\n    #endif\\n\\\n\\n\\\n    #ifdef HAS_BITANGENTS\\n\\\n    v_bitangentEC = normalize(normal * attributes.bitangentMC);\\n\\\n    #endif\\n\\\n\\n\\\n    // All other varyings need to be dynamically generated in\\n\\\n    // GeometryPipelineStage\\n\\\n    setDynamicVaryings(attributes);\\n\\\n\\n\\\n    return computedPosition;\\n\\\n}\\n\\\n\";\n"],"mappings":"AAAA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}