{"ast":null,"code":"import Cartesian3 from \"../../Core/Cartesian3.js\";\nimport CesiumMath from \"../../Core/Math.js\";\nimport ShaderDestination from \"../../Renderer/ShaderDestination.js\";\nimport AtmosphereStageFS from \"../../Shaders/Model/AtmosphereStageFS.js\";\nimport AtmosphereStageVS from \"../../Shaders/Model/AtmosphereStageVS.js\";\n\n/**\n * The atmosphere pipeline stage applies all earth atmosphere effects that apply\n * to models, including fog.\n *\n * @namespace AtmospherePipelineStage\n *\n * @private\n */\nconst AtmospherePipelineStage = {\n  name: \"AtmospherePipelineStage\" // Helps with debugging\n};\n\n/**\n * @param {ModelRenderResources} modelRenderResources\n * @param {Model} model\n * @param {FrameState} frameState\n */\nAtmospherePipelineStage.process = function (modelRenderResources, model, frameState) {\n  const shaderBuilder = modelRenderResources.shaderBuilder;\n  shaderBuilder.addDefine(\"HAS_ATMOSPHERE\", undefined, ShaderDestination.BOTH);\n  shaderBuilder.addDefine(\"COMPUTE_POSITION_WC_ATMOSPHERE\", undefined, ShaderDestination.BOTH);\n  shaderBuilder.addVarying(\"vec3\", \"v_atmosphereRayleighColor\");\n  shaderBuilder.addVarying(\"vec3\", \"v_atmosphereMieColor\");\n  shaderBuilder.addVarying(\"float\", \"v_atmosphereOpacity\");\n  shaderBuilder.addVertexLines([AtmosphereStageVS]);\n  shaderBuilder.addFragmentLines([AtmosphereStageFS]);\n\n  // Add a uniform so fog is only calculated when the effect would\n  // be non-negligible. For example when the camera is in space, fog density decreases\n  // to 0 so fog shouldn't be rendered. Since this state may change rapidly if\n  // the camera is moving, this is implemented as a uniform, not a define.\n  shaderBuilder.addUniform(\"bool\", \"u_isInFog\", ShaderDestination.FRAGMENT);\n  modelRenderResources.uniformMap.u_isInFog = function () {\n    // We only need a rough measure of distance to the model, so measure\n    // from the camera to the bounding sphere center.\n    const distance = Cartesian3.distance(frameState.camera.positionWC, model.boundingSphere.center);\n    return CesiumMath.fog(distance, frameState.fog.density) > CesiumMath.EPSILON3;\n  };\n};\nexport default AtmospherePipelineStage;","map":{"version":3,"names":["Cartesian3","CesiumMath","ShaderDestination","AtmosphereStageFS","AtmosphereStageVS","AtmospherePipelineStage","name","process","modelRenderResources","model","frameState","shaderBuilder","addDefine","undefined","BOTH","addVarying","addVertexLines","addFragmentLines","addUniform","FRAGMENT","uniformMap","u_isInFog","distance","camera","positionWC","boundingSphere","center","fog","density","EPSILON3"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/engine/Source/Scene/Model/AtmospherePipelineStage.js"],"sourcesContent":["import Cartesian3 from \"../../Core/Cartesian3.js\";\nimport CesiumMath from \"../../Core/Math.js\";\nimport ShaderDestination from \"../../Renderer/ShaderDestination.js\";\nimport AtmosphereStageFS from \"../../Shaders/Model/AtmosphereStageFS.js\";\nimport AtmosphereStageVS from \"../../Shaders/Model/AtmosphereStageVS.js\";\n\n/**\n * The atmosphere pipeline stage applies all earth atmosphere effects that apply\n * to models, including fog.\n *\n * @namespace AtmospherePipelineStage\n *\n * @private\n */\nconst AtmospherePipelineStage = {\n  name: \"AtmospherePipelineStage\", // Helps with debugging\n};\n\n/**\n * @param {ModelRenderResources} modelRenderResources\n * @param {Model} model\n * @param {FrameState} frameState\n */\nAtmospherePipelineStage.process = function (\n  modelRenderResources,\n  model,\n  frameState,\n) {\n  const shaderBuilder = modelRenderResources.shaderBuilder;\n\n  shaderBuilder.addDefine(\"HAS_ATMOSPHERE\", undefined, ShaderDestination.BOTH);\n  shaderBuilder.addDefine(\n    \"COMPUTE_POSITION_WC_ATMOSPHERE\",\n    undefined,\n    ShaderDestination.BOTH,\n  );\n\n  shaderBuilder.addVarying(\"vec3\", \"v_atmosphereRayleighColor\");\n  shaderBuilder.addVarying(\"vec3\", \"v_atmosphereMieColor\");\n  shaderBuilder.addVarying(\"float\", \"v_atmosphereOpacity\");\n\n  shaderBuilder.addVertexLines([AtmosphereStageVS]);\n  shaderBuilder.addFragmentLines([AtmosphereStageFS]);\n\n  // Add a uniform so fog is only calculated when the effect would\n  // be non-negligible. For example when the camera is in space, fog density decreases\n  // to 0 so fog shouldn't be rendered. Since this state may change rapidly if\n  // the camera is moving, this is implemented as a uniform, not a define.\n  shaderBuilder.addUniform(\"bool\", \"u_isInFog\", ShaderDestination.FRAGMENT);\n  modelRenderResources.uniformMap.u_isInFog = function () {\n    // We only need a rough measure of distance to the model, so measure\n    // from the camera to the bounding sphere center.\n    const distance = Cartesian3.distance(\n      frameState.camera.positionWC,\n      model.boundingSphere.center,\n    );\n\n    return (\n      CesiumMath.fog(distance, frameState.fog.density) > CesiumMath.EPSILON3\n    );\n  };\n};\n\nexport default AtmospherePipelineStage;\n"],"mappings":"AAAA,OAAOA,UAAU,MAAM,0BAA0B;AACjD,OAAOC,UAAU,MAAM,oBAAoB;AAC3C,OAAOC,iBAAiB,MAAM,qCAAqC;AACnE,OAAOC,iBAAiB,MAAM,0CAA0C;AACxE,OAAOC,iBAAiB,MAAM,0CAA0C;;AAExE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,uBAAuB,GAAG;EAC9BC,IAAI,EAAE,yBAAyB,CAAE;AACnC,CAAC;;AAED;AACA;AACA;AACA;AACA;AACAD,uBAAuB,CAACE,OAAO,GAAG,UAChCC,oBAAoB,EACpBC,KAAK,EACLC,UAAU,EACV;EACA,MAAMC,aAAa,GAAGH,oBAAoB,CAACG,aAAa;EAExDA,aAAa,CAACC,SAAS,CAAC,gBAAgB,EAAEC,SAAS,EAAEX,iBAAiB,CAACY,IAAI,CAAC;EAC5EH,aAAa,CAACC,SAAS,CACrB,gCAAgC,EAChCC,SAAS,EACTX,iBAAiB,CAACY,IACpB,CAAC;EAEDH,aAAa,CAACI,UAAU,CAAC,MAAM,EAAE,2BAA2B,CAAC;EAC7DJ,aAAa,CAACI,UAAU,CAAC,MAAM,EAAE,sBAAsB,CAAC;EACxDJ,aAAa,CAACI,UAAU,CAAC,OAAO,EAAE,qBAAqB,CAAC;EAExDJ,aAAa,CAACK,cAAc,CAAC,CAACZ,iBAAiB,CAAC,CAAC;EACjDO,aAAa,CAACM,gBAAgB,CAAC,CAACd,iBAAiB,CAAC,CAAC;;EAEnD;EACA;EACA;EACA;EACAQ,aAAa,CAACO,UAAU,CAAC,MAAM,EAAE,WAAW,EAAEhB,iBAAiB,CAACiB,QAAQ,CAAC;EACzEX,oBAAoB,CAACY,UAAU,CAACC,SAAS,GAAG,YAAY;IACtD;IACA;IACA,MAAMC,QAAQ,GAAGtB,UAAU,CAACsB,QAAQ,CAClCZ,UAAU,CAACa,MAAM,CAACC,UAAU,EAC5Bf,KAAK,CAACgB,cAAc,CAACC,MACvB,CAAC;IAED,OACEzB,UAAU,CAAC0B,GAAG,CAACL,QAAQ,EAAEZ,UAAU,CAACiB,GAAG,CAACC,OAAO,CAAC,GAAG3B,UAAU,CAAC4B,QAAQ;EAE1E,CAAC;AACH,CAAC;AAED,eAAexB,uBAAuB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}