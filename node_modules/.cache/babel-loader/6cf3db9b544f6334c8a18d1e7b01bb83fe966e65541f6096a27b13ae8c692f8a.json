{"ast":null,"code":"import Color from \"../Core/Color.js\";\nimport defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport Event from \"../Core/Event.js\";\nimport JulianDate from \"../Core/JulianDate.js\";\nimport createPropertyDescriptor from \"./createPropertyDescriptor.js\";\nimport Property from \"./Property.js\";\nconst defaultColor = Color.WHITE;\nconst defaultOutlineColor = Color.BLACK;\nconst defaultOutlineWidth = 1.0;\n\n/**\n * A {@link MaterialProperty} that maps to polyline outline {@link Material} uniforms.\n * @alias PolylineOutlineMaterialProperty\n * @constructor\n *\n * @param {object} [options] Object with the following properties:\n * @param {Property|Color} [options.color=Color.WHITE] A Property specifying the {@link Color} of the line.\n * @param {Property|Color} [options.outlineColor=Color.BLACK] A Property specifying the {@link Color} of the outline.\n * @param {Property|number} [options.outlineWidth=1.0] A numeric Property specifying the width of the outline, in pixels.\n */\nfunction PolylineOutlineMaterialProperty(options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n  this._definitionChanged = new Event();\n  this._color = undefined;\n  this._colorSubscription = undefined;\n  this._outlineColor = undefined;\n  this._outlineColorSubscription = undefined;\n  this._outlineWidth = undefined;\n  this._outlineWidthSubscription = undefined;\n  this.color = options.color;\n  this.outlineColor = options.outlineColor;\n  this.outlineWidth = options.outlineWidth;\n}\nObject.defineProperties(PolylineOutlineMaterialProperty.prototype, {\n  /**\n   * Gets a value indicating if this property is constant.  A property is considered\n   * constant if getValue always returns the same result for the current definition.\n   * @memberof PolylineOutlineMaterialProperty.prototype\n   *\n   * @type {boolean}\n   * @readonly\n   */\n  isConstant: {\n    get: function () {\n      return Property.isConstant(this._color) && Property.isConstant(this._outlineColor) && Property.isConstant(this._outlineWidth);\n    }\n  },\n  /**\n   * Gets the event that is raised whenever the definition of this property changes.\n   * The definition is considered to have changed if a call to getValue would return\n   * a different result for the same time.\n   * @memberof PolylineOutlineMaterialProperty.prototype\n   *\n   * @type {Event}\n   * @readonly\n   */\n  definitionChanged: {\n    get: function () {\n      return this._definitionChanged;\n    }\n  },\n  /**\n   * Gets or sets the Property specifying the {@link Color} of the line.\n   * @memberof PolylineOutlineMaterialProperty.prototype\n   * @type {Property|undefined}\n   * @default Color.WHITE\n   */\n  color: createPropertyDescriptor(\"color\"),\n  /**\n   * Gets or sets the Property specifying the {@link Color} of the outline.\n   * @memberof PolylineOutlineMaterialProperty.prototype\n   * @type {Property|undefined}\n   * @default Color.BLACK\n   */\n  outlineColor: createPropertyDescriptor(\"outlineColor\"),\n  /**\n   * Gets or sets the numeric Property specifying the width of the outline.\n   * @memberof PolylineOutlineMaterialProperty.prototype\n   * @type {Property|undefined}\n   * @default 1.0\n   */\n  outlineWidth: createPropertyDescriptor(\"outlineWidth\")\n});\n\n/**\n * Gets the {@link Material} type at the provided time.\n *\n * @param {JulianDate} time The time for which to retrieve the type.\n * @returns {string} The type of material.\n */\nPolylineOutlineMaterialProperty.prototype.getType = function (time) {\n  return \"PolylineOutline\";\n};\nconst timeScratch = new JulianDate();\n\n/**\n * Gets the value of the property at the provided time.\n *\n * @param {JulianDate} [time=JulianDate.now()] The time for which to retrieve the value. If omitted, the current system time is used.\n * @param {object} [result] The object to store the value into, if omitted, a new instance is created and returned.\n * @returns {object} The modified result parameter or a new instance if the result parameter was not supplied.\n */\nPolylineOutlineMaterialProperty.prototype.getValue = function (time, result) {\n  if (!defined(time)) {\n    time = JulianDate.now(timeScratch);\n  }\n  if (!defined(result)) {\n    result = {};\n  }\n  result.color = Property.getValueOrClonedDefault(this._color, time, defaultColor, result.color);\n  result.outlineColor = Property.getValueOrClonedDefault(this._outlineColor, time, defaultOutlineColor, result.outlineColor);\n  result.outlineWidth = Property.getValueOrDefault(this._outlineWidth, time, defaultOutlineWidth);\n  return result;\n};\n\n/**\n * Compares this property to the provided property and returns\n * <code>true</code> if they are equal, <code>false</code> otherwise.\n *\n * @param {Property} [other] The other property.\n * @returns {boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\n */\nPolylineOutlineMaterialProperty.prototype.equals = function (other) {\n  return this === other ||\n  //\n  other instanceof PolylineOutlineMaterialProperty &&\n  //\n  Property.equals(this._color, other._color) &&\n  //\n  Property.equals(this._outlineColor, other._outlineColor) &&\n  //\n  Property.equals(this._outlineWidth, other._outlineWidth);\n};\nexport default PolylineOutlineMaterialProperty;","map":{"version":3,"names":["Color","defaultValue","defined","Event","JulianDate","createPropertyDescriptor","Property","defaultColor","WHITE","defaultOutlineColor","BLACK","defaultOutlineWidth","PolylineOutlineMaterialProperty","options","EMPTY_OBJECT","_definitionChanged","_color","undefined","_colorSubscription","_outlineColor","_outlineColorSubscription","_outlineWidth","_outlineWidthSubscription","color","outlineColor","outlineWidth","Object","defineProperties","prototype","isConstant","get","definitionChanged","getType","time","timeScratch","getValue","result","now","getValueOrClonedDefault","getValueOrDefault","equals","other"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/engine/Source/DataSources/PolylineOutlineMaterialProperty.js"],"sourcesContent":["import Color from \"../Core/Color.js\";\nimport defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport Event from \"../Core/Event.js\";\nimport JulianDate from \"../Core/JulianDate.js\";\nimport createPropertyDescriptor from \"./createPropertyDescriptor.js\";\nimport Property from \"./Property.js\";\n\nconst defaultColor = Color.WHITE;\nconst defaultOutlineColor = Color.BLACK;\nconst defaultOutlineWidth = 1.0;\n\n/**\n * A {@link MaterialProperty} that maps to polyline outline {@link Material} uniforms.\n * @alias PolylineOutlineMaterialProperty\n * @constructor\n *\n * @param {object} [options] Object with the following properties:\n * @param {Property|Color} [options.color=Color.WHITE] A Property specifying the {@link Color} of the line.\n * @param {Property|Color} [options.outlineColor=Color.BLACK] A Property specifying the {@link Color} of the outline.\n * @param {Property|number} [options.outlineWidth=1.0] A numeric Property specifying the width of the outline, in pixels.\n */\nfunction PolylineOutlineMaterialProperty(options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n\n  this._definitionChanged = new Event();\n  this._color = undefined;\n  this._colorSubscription = undefined;\n  this._outlineColor = undefined;\n  this._outlineColorSubscription = undefined;\n  this._outlineWidth = undefined;\n  this._outlineWidthSubscription = undefined;\n\n  this.color = options.color;\n  this.outlineColor = options.outlineColor;\n  this.outlineWidth = options.outlineWidth;\n}\n\nObject.defineProperties(PolylineOutlineMaterialProperty.prototype, {\n  /**\n   * Gets a value indicating if this property is constant.  A property is considered\n   * constant if getValue always returns the same result for the current definition.\n   * @memberof PolylineOutlineMaterialProperty.prototype\n   *\n   * @type {boolean}\n   * @readonly\n   */\n  isConstant: {\n    get: function () {\n      return (\n        Property.isConstant(this._color) &&\n        Property.isConstant(this._outlineColor) &&\n        Property.isConstant(this._outlineWidth)\n      );\n    },\n  },\n  /**\n   * Gets the event that is raised whenever the definition of this property changes.\n   * The definition is considered to have changed if a call to getValue would return\n   * a different result for the same time.\n   * @memberof PolylineOutlineMaterialProperty.prototype\n   *\n   * @type {Event}\n   * @readonly\n   */\n  definitionChanged: {\n    get: function () {\n      return this._definitionChanged;\n    },\n  },\n  /**\n   * Gets or sets the Property specifying the {@link Color} of the line.\n   * @memberof PolylineOutlineMaterialProperty.prototype\n   * @type {Property|undefined}\n   * @default Color.WHITE\n   */\n  color: createPropertyDescriptor(\"color\"),\n\n  /**\n   * Gets or sets the Property specifying the {@link Color} of the outline.\n   * @memberof PolylineOutlineMaterialProperty.prototype\n   * @type {Property|undefined}\n   * @default Color.BLACK\n   */\n  outlineColor: createPropertyDescriptor(\"outlineColor\"),\n\n  /**\n   * Gets or sets the numeric Property specifying the width of the outline.\n   * @memberof PolylineOutlineMaterialProperty.prototype\n   * @type {Property|undefined}\n   * @default 1.0\n   */\n  outlineWidth: createPropertyDescriptor(\"outlineWidth\"),\n});\n\n/**\n * Gets the {@link Material} type at the provided time.\n *\n * @param {JulianDate} time The time for which to retrieve the type.\n * @returns {string} The type of material.\n */\nPolylineOutlineMaterialProperty.prototype.getType = function (time) {\n  return \"PolylineOutline\";\n};\n\nconst timeScratch = new JulianDate();\n\n/**\n * Gets the value of the property at the provided time.\n *\n * @param {JulianDate} [time=JulianDate.now()] The time for which to retrieve the value. If omitted, the current system time is used.\n * @param {object} [result] The object to store the value into, if omitted, a new instance is created and returned.\n * @returns {object} The modified result parameter or a new instance if the result parameter was not supplied.\n */\nPolylineOutlineMaterialProperty.prototype.getValue = function (time, result) {\n  if (!defined(time)) {\n    time = JulianDate.now(timeScratch);\n  }\n  if (!defined(result)) {\n    result = {};\n  }\n  result.color = Property.getValueOrClonedDefault(\n    this._color,\n    time,\n    defaultColor,\n    result.color,\n  );\n  result.outlineColor = Property.getValueOrClonedDefault(\n    this._outlineColor,\n    time,\n    defaultOutlineColor,\n    result.outlineColor,\n  );\n  result.outlineWidth = Property.getValueOrDefault(\n    this._outlineWidth,\n    time,\n    defaultOutlineWidth,\n  );\n  return result;\n};\n\n/**\n * Compares this property to the provided property and returns\n * <code>true</code> if they are equal, <code>false</code> otherwise.\n *\n * @param {Property} [other] The other property.\n * @returns {boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\n */\nPolylineOutlineMaterialProperty.prototype.equals = function (other) {\n  return (\n    this === other || //\n    (other instanceof PolylineOutlineMaterialProperty && //\n      Property.equals(this._color, other._color) && //\n      Property.equals(this._outlineColor, other._outlineColor) && //\n      Property.equals(this._outlineWidth, other._outlineWidth))\n  );\n};\nexport default PolylineOutlineMaterialProperty;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}