{"ast":null,"code":"import WebGLConstants from \"../Core/WebGLConstants.js\";\n\n/**\n * Determines the function used to compare two depths for the depth test.\n *\n * @enum {number}\n */\nconst DepthFunction = {\n  /**\n   * The depth test never passes.\n   *\n   * @type {number}\n   * @constant\n   */\n  NEVER: WebGLConstants.NEVER,\n  /**\n   * The depth test passes if the incoming depth is less than the stored depth.\n   *\n   * @type {number}\n   * @constant\n   */\n  LESS: WebGLConstants.LESS,\n  /**\n   * The depth test passes if the incoming depth is equal to the stored depth.\n   *\n   * @type {number}\n   * @constant\n   */\n  EQUAL: WebGLConstants.EQUAL,\n  /**\n   * The depth test passes if the incoming depth is less than or equal to the stored depth.\n   *\n   * @type {number}\n   * @constant\n   */\n  LESS_OR_EQUAL: WebGLConstants.LEQUAL,\n  /**\n   * The depth test passes if the incoming depth is greater than the stored depth.\n   *\n   * @type {number}\n   * @constant\n   */\n  GREATER: WebGLConstants.GREATER,\n  /**\n   * The depth test passes if the incoming depth is not equal to the stored depth.\n   *\n   * @type {number}\n   * @constant\n   */\n  NOT_EQUAL: WebGLConstants.NOTEQUAL,\n  /**\n   * The depth test passes if the incoming depth is greater than or equal to the stored depth.\n   *\n   * @type {number}\n   * @constant\n   */\n  GREATER_OR_EQUAL: WebGLConstants.GEQUAL,\n  /**\n   * The depth test always passes.\n   *\n   * @type {number}\n   * @constant\n   */\n  ALWAYS: WebGLConstants.ALWAYS\n};\nexport default Object.freeze(DepthFunction);","map":{"version":3,"names":["WebGLConstants","DepthFunction","NEVER","LESS","EQUAL","LESS_OR_EQUAL","LEQUAL","GREATER","NOT_EQUAL","NOTEQUAL","GREATER_OR_EQUAL","GEQUAL","ALWAYS","Object","freeze"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/engine/Source/Scene/DepthFunction.js"],"sourcesContent":["import WebGLConstants from \"../Core/WebGLConstants.js\";\n\n/**\n * Determines the function used to compare two depths for the depth test.\n *\n * @enum {number}\n */\nconst DepthFunction = {\n  /**\n   * The depth test never passes.\n   *\n   * @type {number}\n   * @constant\n   */\n  NEVER: WebGLConstants.NEVER,\n\n  /**\n   * The depth test passes if the incoming depth is less than the stored depth.\n   *\n   * @type {number}\n   * @constant\n   */\n  LESS: WebGLConstants.LESS,\n\n  /**\n   * The depth test passes if the incoming depth is equal to the stored depth.\n   *\n   * @type {number}\n   * @constant\n   */\n  EQUAL: WebGLConstants.EQUAL,\n\n  /**\n   * The depth test passes if the incoming depth is less than or equal to the stored depth.\n   *\n   * @type {number}\n   * @constant\n   */\n  LESS_OR_EQUAL: WebGLConstants.LEQUAL,\n\n  /**\n   * The depth test passes if the incoming depth is greater than the stored depth.\n   *\n   * @type {number}\n   * @constant\n   */\n  GREATER: WebGLConstants.GREATER,\n\n  /**\n   * The depth test passes if the incoming depth is not equal to the stored depth.\n   *\n   * @type {number}\n   * @constant\n   */\n  NOT_EQUAL: WebGLConstants.NOTEQUAL,\n\n  /**\n   * The depth test passes if the incoming depth is greater than or equal to the stored depth.\n   *\n   * @type {number}\n   * @constant\n   */\n  GREATER_OR_EQUAL: WebGLConstants.GEQUAL,\n\n  /**\n   * The depth test always passes.\n   *\n   * @type {number}\n   * @constant\n   */\n  ALWAYS: WebGLConstants.ALWAYS,\n};\nexport default Object.freeze(DepthFunction);\n"],"mappings":"AAAA,OAAOA,cAAc,MAAM,2BAA2B;;AAEtD;AACA;AACA;AACA;AACA;AACA,MAAMC,aAAa,GAAG;EACpB;AACF;AACA;AACA;AACA;AACA;EACEC,KAAK,EAAEF,cAAc,CAACE,KAAK;EAE3B;AACF;AACA;AACA;AACA;AACA;EACEC,IAAI,EAAEH,cAAc,CAACG,IAAI;EAEzB;AACF;AACA;AACA;AACA;AACA;EACEC,KAAK,EAAEJ,cAAc,CAACI,KAAK;EAE3B;AACF;AACA;AACA;AACA;AACA;EACEC,aAAa,EAAEL,cAAc,CAACM,MAAM;EAEpC;AACF;AACA;AACA;AACA;AACA;EACEC,OAAO,EAAEP,cAAc,CAACO,OAAO;EAE/B;AACF;AACA;AACA;AACA;AACA;EACEC,SAAS,EAAER,cAAc,CAACS,QAAQ;EAElC;AACF;AACA;AACA;AACA;AACA;EACEC,gBAAgB,EAAEV,cAAc,CAACW,MAAM;EAEvC;AACF;AACA;AACA;AACA;AACA;EACEC,MAAM,EAAEZ,cAAc,CAACY;AACzB,CAAC;AACD,eAAeC,MAAM,CAACC,MAAM,CAACb,aAAa,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}