{"ast":null,"code":"/**\n * Gets a timestamp that can be used in measuring the time between events.  Timestamps\n * are expressed in milliseconds, but it is not specified what the milliseconds are\n * measured from.  This function uses performance.now() if it is available, or Date.now()\n * otherwise.\n *\n * @function getTimestamp\n *\n * @returns {number} The timestamp in milliseconds since some unspecified reference time.\n */\nlet getTimestamp;\nif (typeof performance !== \"undefined\" && typeof performance.now === \"function\" && isFinite(performance.now())) {\n  getTimestamp = function () {\n    return performance.now();\n  };\n} else {\n  getTimestamp = function () {\n    return Date.now();\n  };\n}\nexport default getTimestamp;","map":{"version":3,"names":["getTimestamp","performance","now","isFinite","Date"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/engine/Source/Core/getTimestamp.js"],"sourcesContent":["/**\n * Gets a timestamp that can be used in measuring the time between events.  Timestamps\n * are expressed in milliseconds, but it is not specified what the milliseconds are\n * measured from.  This function uses performance.now() if it is available, or Date.now()\n * otherwise.\n *\n * @function getTimestamp\n *\n * @returns {number} The timestamp in milliseconds since some unspecified reference time.\n */\nlet getTimestamp;\n\nif (\n  typeof performance !== \"undefined\" &&\n  typeof performance.now === \"function\" &&\n  isFinite(performance.now())\n) {\n  getTimestamp = function () {\n    return performance.now();\n  };\n} else {\n  getTimestamp = function () {\n    return Date.now();\n  };\n}\nexport default getTimestamp;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,YAAY;AAEhB,IACE,OAAOC,WAAW,KAAK,WAAW,IAClC,OAAOA,WAAW,CAACC,GAAG,KAAK,UAAU,IACrCC,QAAQ,CAACF,WAAW,CAACC,GAAG,CAAC,CAAC,CAAC,EAC3B;EACAF,YAAY,GAAG,SAAAA,CAAA,EAAY;IACzB,OAAOC,WAAW,CAACC,GAAG,CAAC,CAAC;EAC1B,CAAC;AACH,CAAC,MAAM;EACLF,YAAY,GAAG,SAAAA,CAAA,EAAY;IACzB,OAAOI,IAAI,CAACF,GAAG,CAAC,CAAC;EACnB,CAAC;AACH;AACA,eAAeF,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}