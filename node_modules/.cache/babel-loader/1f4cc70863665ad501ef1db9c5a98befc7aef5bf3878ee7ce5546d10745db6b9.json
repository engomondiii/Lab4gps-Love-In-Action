{"ast":null,"code":"import Check from \"../../../../Core/Check.js\";\n\n/**\n * @typedef {object} Spdcf.ConstructorOptions\n *\n * Initialization options for the Spdcf constructor\n *\n * @property {number} A The factor A, in (0, 1]\n * @property {number} alpha The alpha value, in [0, 1)\n * @property {number} beta The beta value, in [0, 10]\n * @property {number} T the tau value, in (0, +inf)\n */\n\n/**\n * Variables for a Strictly Positive-Definite Correlation Function.\n *\n * This reflects the `spdcf` definition of the\n * {@link https://nsgreg.nga.mil/csmwg.jsp|NGA_gpm_local} glTF extension.\n * Instances of this type are stored as the parameters within a\n * `CorrelationGroup`.\n *\n * Parameters (A, alpha, beta, T) describe the correlation decrease\n * between points as a function of delta time:\n * ```\n * spdcf(delta_t) = A_t * (alpha_t + ((1 - alpha_t)(1 + beta_t)) / (beta_t + e^(delta_t/T_t)))\n * ```\n *\n * @constructor\n * @param {Spdcf.ConstructorOptions} options An object describing initialization options\n * @experimental This feature is not final and is subject to change without Cesium's standard deprecation policy.\n */\nfunction Spdcf(options) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.typeOf.number.greaterThan(\"options.A\", options.A, 0.0);\n  Check.typeOf.number.lessThanOrEquals(\"options.A\", options.A, 1.0);\n  Check.typeOf.number.greaterThanOrEquals(\"options.alpha\", options.alpha, 0.0);\n  Check.typeOf.number.lessThan(\"options.alpha\", options.alpha, 1.0);\n  Check.typeOf.number.greaterThanOrEquals(\"options.beta\", options.beta, 0.0);\n  Check.typeOf.number.lessThanOrEquals(\"options.beta\", options.beta, 10.0);\n  Check.typeOf.number.greaterThan(\"options.T\", options.T, 0.0);\n  //>>includeEnd('debug');\n\n  this._A = options.A;\n  this._alpha = options.alpha;\n  this._beta = options.beta;\n  this._T = options.T;\n}\nObject.defineProperties(Spdcf.prototype, {\n  /**\n   * In (0, 1]\n   *\n   * @memberof Spdcf.prototype\n   * @type {number}\n   * @readonly\n   */\n  A: {\n    get: function () {\n      return this._A;\n    }\n  },\n  /**\n   * In [0, 1)\n   *\n   * @memberof Spdcf.prototype\n   * @type {number}\n   * @readonly\n   */\n  alpha: {\n    get: function () {\n      return this._alpha;\n    }\n  },\n  /**\n   * In [0, 10]\n   *\n   * @memberof Spdcf.prototype\n   * @type {number}\n   * @readonly\n   */\n  beta: {\n    get: function () {\n      return this._beta;\n    }\n  },\n  /**\n   * In (0, +inf)\n   *\n   * @memberof Spdcf.prototype\n   * @type {number}\n   * @readonly\n   */\n  T: {\n    get: function () {\n      return this._T;\n    }\n  }\n});\nexport default Spdcf;","map":{"version":3,"names":["Check","Spdcf","options","typeOf","number","greaterThan","A","lessThanOrEquals","greaterThanOrEquals","alpha","lessThan","beta","T","_A","_alpha","_beta","_T","Object","defineProperties","prototype","get"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/engine/Source/Scene/Model/Extensions/Gpm/Spdcf.js"],"sourcesContent":["import Check from \"../../../../Core/Check.js\";\n\n/**\n * @typedef {object} Spdcf.ConstructorOptions\n *\n * Initialization options for the Spdcf constructor\n *\n * @property {number} A The factor A, in (0, 1]\n * @property {number} alpha The alpha value, in [0, 1)\n * @property {number} beta The beta value, in [0, 10]\n * @property {number} T the tau value, in (0, +inf)\n */\n\n/**\n * Variables for a Strictly Positive-Definite Correlation Function.\n *\n * This reflects the `spdcf` definition of the\n * {@link https://nsgreg.nga.mil/csmwg.jsp|NGA_gpm_local} glTF extension.\n * Instances of this type are stored as the parameters within a\n * `CorrelationGroup`.\n *\n * Parameters (A, alpha, beta, T) describe the correlation decrease\n * between points as a function of delta time:\n * ```\n * spdcf(delta_t) = A_t * (alpha_t + ((1 - alpha_t)(1 + beta_t)) / (beta_t + e^(delta_t/T_t)))\n * ```\n *\n * @constructor\n * @param {Spdcf.ConstructorOptions} options An object describing initialization options\n * @experimental This feature is not final and is subject to change without Cesium's standard deprecation policy.\n */\nfunction Spdcf(options) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.typeOf.number.greaterThan(\"options.A\", options.A, 0.0);\n  Check.typeOf.number.lessThanOrEquals(\"options.A\", options.A, 1.0);\n  Check.typeOf.number.greaterThanOrEquals(\"options.alpha\", options.alpha, 0.0);\n  Check.typeOf.number.lessThan(\"options.alpha\", options.alpha, 1.0);\n  Check.typeOf.number.greaterThanOrEquals(\"options.beta\", options.beta, 0.0);\n  Check.typeOf.number.lessThanOrEquals(\"options.beta\", options.beta, 10.0);\n  Check.typeOf.number.greaterThan(\"options.T\", options.T, 0.0);\n  //>>includeEnd('debug');\n\n  this._A = options.A;\n  this._alpha = options.alpha;\n  this._beta = options.beta;\n  this._T = options.T;\n}\n\nObject.defineProperties(Spdcf.prototype, {\n  /**\n   * In (0, 1]\n   *\n   * @memberof Spdcf.prototype\n   * @type {number}\n   * @readonly\n   */\n  A: {\n    get: function () {\n      return this._A;\n    },\n  },\n\n  /**\n   * In [0, 1)\n   *\n   * @memberof Spdcf.prototype\n   * @type {number}\n   * @readonly\n   */\n  alpha: {\n    get: function () {\n      return this._alpha;\n    },\n  },\n\n  /**\n   * In [0, 10]\n   *\n   * @memberof Spdcf.prototype\n   * @type {number}\n   * @readonly\n   */\n  beta: {\n    get: function () {\n      return this._beta;\n    },\n  },\n\n  /**\n   * In (0, +inf)\n   *\n   * @memberof Spdcf.prototype\n   * @type {number}\n   * @readonly\n   */\n  T: {\n    get: function () {\n      return this._T;\n    },\n  },\n});\n\nexport default Spdcf;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,2BAA2B;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,KAAKA,CAACC,OAAO,EAAE;EACtB;EACAF,KAAK,CAACG,MAAM,CAACC,MAAM,CAACC,WAAW,CAAC,WAAW,EAAEH,OAAO,CAACI,CAAC,EAAE,GAAG,CAAC;EAC5DN,KAAK,CAACG,MAAM,CAACC,MAAM,CAACG,gBAAgB,CAAC,WAAW,EAAEL,OAAO,CAACI,CAAC,EAAE,GAAG,CAAC;EACjEN,KAAK,CAACG,MAAM,CAACC,MAAM,CAACI,mBAAmB,CAAC,eAAe,EAAEN,OAAO,CAACO,KAAK,EAAE,GAAG,CAAC;EAC5ET,KAAK,CAACG,MAAM,CAACC,MAAM,CAACM,QAAQ,CAAC,eAAe,EAAER,OAAO,CAACO,KAAK,EAAE,GAAG,CAAC;EACjET,KAAK,CAACG,MAAM,CAACC,MAAM,CAACI,mBAAmB,CAAC,cAAc,EAAEN,OAAO,CAACS,IAAI,EAAE,GAAG,CAAC;EAC1EX,KAAK,CAACG,MAAM,CAACC,MAAM,CAACG,gBAAgB,CAAC,cAAc,EAAEL,OAAO,CAACS,IAAI,EAAE,IAAI,CAAC;EACxEX,KAAK,CAACG,MAAM,CAACC,MAAM,CAACC,WAAW,CAAC,WAAW,EAAEH,OAAO,CAACU,CAAC,EAAE,GAAG,CAAC;EAC5D;;EAEA,IAAI,CAACC,EAAE,GAAGX,OAAO,CAACI,CAAC;EACnB,IAAI,CAACQ,MAAM,GAAGZ,OAAO,CAACO,KAAK;EAC3B,IAAI,CAACM,KAAK,GAAGb,OAAO,CAACS,IAAI;EACzB,IAAI,CAACK,EAAE,GAAGd,OAAO,CAACU,CAAC;AACrB;AAEAK,MAAM,CAACC,gBAAgB,CAACjB,KAAK,CAACkB,SAAS,EAAE;EACvC;AACF;AACA;AACA;AACA;AACA;AACA;EACEb,CAAC,EAAE;IACDc,GAAG,EAAE,SAAAA,CAAA,EAAY;MACf,OAAO,IAAI,CAACP,EAAE;IAChB;EACF,CAAC;EAED;AACF;AACA;AACA;AACA;AACA;AACA;EACEJ,KAAK,EAAE;IACLW,GAAG,EAAE,SAAAA,CAAA,EAAY;MACf,OAAO,IAAI,CAACN,MAAM;IACpB;EACF,CAAC;EAED;AACF;AACA;AACA;AACA;AACA;AACA;EACEH,IAAI,EAAE;IACJS,GAAG,EAAE,SAAAA,CAAA,EAAY;MACf,OAAO,IAAI,CAACL,KAAK;IACnB;EACF,CAAC;EAED;AACF;AACA;AACA;AACA;AACA;AACA;EACEH,CAAC,EAAE;IACDQ,GAAG,EAAE,SAAAA,CAAA,EAAY;MACf,OAAO,IAAI,CAACJ,EAAE;IAChB;EACF;AACF,CAAC,CAAC;AAEF,eAAef,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}