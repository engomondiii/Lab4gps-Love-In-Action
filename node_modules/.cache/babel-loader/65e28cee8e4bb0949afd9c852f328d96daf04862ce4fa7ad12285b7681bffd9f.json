{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/src/components/Globe/Globe.js\",\n  _s = $RefreshSig$();\n/* global Cesium */\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useLang } from '../Context/LangContext'; // Import your global language context\nimport '../styles/Globe.css'; // Import the separate style file\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Globe = () => {\n  _s();\n  const globeRef = useRef(null);\n  const viewerRef = useRef(null);\n  const animationIdRef = useRef(null);\n\n  // Use the global language context to determine if text should be English or Korean\n  const {\n    language\n  } = useLang();\n\n  // Inline dictionary for multi-language support\n  const text = {\n    en: {\n      stopRotation: \"Stop Rotation\",\n      fullView: \"View in Full\",\n      exitFullView: \"Exit Full View\"\n    },\n    ko: {\n      stopRotation: \"회전 중지\",\n      fullView: \"전체 화면\",\n      exitFullView: \"전체 화면 종료\"\n    }\n  };\n\n  // Helper function to return the correct text based on the current language\n  const t = key => text[language][key];\n\n  // State to track full-view mode\n  const [isFullView, setIsFullView] = useState(false);\n  useEffect(() => {\n    Cesium.Ion.defaultAccessToken = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJkMWY1MGUyNC0wNjFkLTQ1YWMtYTBhNi1mYTRkMTAzNWYzOGEiLCJpZCI6MjYzODA1LCJpYXQiOjE3MzQ2Nzk0ODd9.OvjRSddy3Mt1P1rOGIFKOQQcxIqTX2i7sM1Ha4s7_qs';\n\n    // Initialize Cesium Viewer if not done yet\n    if (globeRef.current && !viewerRef.current) {\n      try {\n        viewerRef.current = new Cesium.Viewer(globeRef.current, {\n          imageryProvider: new Cesium.IonImageryProvider({\n            assetId: 2\n          }),\n          baseLayerPicker: false,\n          geocoder: false,\n          homeButton: false,\n          infoBox: false,\n          navigationHelpButton: false,\n          sceneModePicker: false,\n          timeline: false,\n          animation: false,\n          requestRenderMode: true,\n          maximumRenderTimeChange: Infinity\n        });\n\n        // Set initial camera view (top-down perspective)\n        viewerRef.current.scene.camera.setView({\n          destination: Cesium.Cartesian3.fromDegrees(-74.0707383, 40.7117244, 10000000),\n          orientation: {\n            heading: Cesium.Math.toRadians(0),\n            pitch: Cesium.Math.toRadians(-90),\n            roll: 0.0\n          }\n        });\n\n        // Continuous rotation\n        const rotateEarth = () => {\n          const spinRate = 0.01;\n          const delta = spinRate / 60; // 60 FPS assumption\n          viewerRef.current.scene.camera.rotate(Cesium.Cartesian3.UNIT_Z, -delta);\n          animationIdRef.current = requestAnimationFrame(rotateEarth);\n        };\n        rotateEarth(); // Start rotation immediately\n\n        // Scene interactions to stop / start rotation on user actions\n        viewerRef.current.scene.screenSpaceCameraController.inertiaSpin = 0;\n        viewerRef.current.scene.screenSpaceCameraController.inertiaTranslate = 0;\n        viewerRef.current.scene.screenSpaceCameraController.inertiaZoom = 0;\n        const stopRotation = () => {\n          if (animationIdRef.current) {\n            cancelAnimationFrame(animationIdRef.current);\n            animationIdRef.current = null;\n          }\n        };\n        const startRotation = () => {\n          if (!animationIdRef.current) {\n            rotateEarth();\n          }\n        };\n\n        // Listen for pointer/wheel events to stop or resume rotation\n        viewerRef.current.canvas.addEventListener('pointerdown', stopRotation);\n        viewerRef.current.canvas.addEventListener('pointerup', startRotation);\n        viewerRef.current.canvas.addEventListener('wheel', stopRotation, {\n          passive: true\n        });\n        viewerRef.current.canvas.addEventListener('wheel', startRotation, {\n          passive: true,\n          delay: 1000\n        });\n      } catch (error) {\n        console.error('Failed to initialize Cesium viewer:', error);\n      }\n    }\n    return () => {\n      // Cleanup if component unmounts\n      if (viewerRef.current) {\n        viewerRef.current.destroy();\n        viewerRef.current = null;\n      }\n    };\n  }, []);\n\n  // Manual stop rotation button\n  const handleStopRotationClick = () => {\n    if (animationIdRef.current) {\n      cancelAnimationFrame(animationIdRef.current);\n      animationIdRef.current = null;\n    }\n  };\n\n  // Toggle Full View\n  const handleToggleFullView = () => {\n    // Toggle the state\n    setIsFullView(!isFullView);\n\n    // Hide or show other page elements like Navbar, Footer, etc.\n    const displayValue = !isFullView ? 'none' : ''; // 'none' to hide, '' to restore\n    // You can customize the selector for elements you want to hide\n    document.querySelectorAll('.navbar, .footer').forEach(elem => elem.style.display = displayValue);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stop-rotation-button-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"stop-rotation-button\",\n        onClick: handleStopRotationClick,\n        children: t(\"stopRotation\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stop-rotation-button-container\",\n      style: {\n        top: '60px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"stop-rotation-button\",\n        onClick: handleToggleFullView,\n        children: isFullView ? t(\"exitFullView\") : t(\"fullView\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: globeRef,\n      id: \"cesiumContainer\",\n      style: {\n        height: '100vh',\n        width: '100vw'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Globe, \"n5yNkIeCjlwWAPbGMxWZYUJK3fU=\", false, function () {\n  return [useLang];\n});\n_c = Globe;\nexport default Globe;\nvar _c;\n$RefreshReg$(_c, \"Globe\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useLang","jsxDEV","_jsxDEV","Fragment","_Fragment","Globe","_s","globeRef","viewerRef","animationIdRef","language","text","en","stopRotation","fullView","exitFullView","ko","t","key","isFullView","setIsFullView","Cesium","Ion","defaultAccessToken","current","Viewer","imageryProvider","IonImageryProvider","assetId","baseLayerPicker","geocoder","homeButton","infoBox","navigationHelpButton","sceneModePicker","timeline","animation","requestRenderMode","maximumRenderTimeChange","Infinity","scene","camera","setView","destination","Cartesian3","fromDegrees","orientation","heading","Math","toRadians","pitch","roll","rotateEarth","spinRate","delta","rotate","UNIT_Z","requestAnimationFrame","screenSpaceCameraController","inertiaSpin","inertiaTranslate","inertiaZoom","cancelAnimationFrame","startRotation","canvas","addEventListener","passive","delay","error","console","destroy","handleStopRotationClick","handleToggleFullView","displayValue","document","querySelectorAll","forEach","elem","style","display","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","top","ref","id","height","width","_c","$RefreshReg$"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/src/components/Globe/Globe.js"],"sourcesContent":["/* global Cesium */\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useLang } from '../Context/LangContext'; // Import your global language context\nimport '../styles/Globe.css'; // Import the separate style file\n\nconst Globe = () => {\n  const globeRef = useRef(null);\n  const viewerRef = useRef(null);\n  const animationIdRef = useRef(null);\n\n  // Use the global language context to determine if text should be English or Korean\n  const { language } = useLang();\n\n  // Inline dictionary for multi-language support\n  const text = {\n    en: {\n      stopRotation: \"Stop Rotation\",\n      fullView: \"View in Full\",\n      exitFullView: \"Exit Full View\"\n    },\n    ko: {\n      stopRotation: \"회전 중지\",\n      fullView: \"전체 화면\",\n      exitFullView: \"전체 화면 종료\"\n    },\n  };\n\n  // Helper function to return the correct text based on the current language\n  const t = (key) => text[language][key];\n\n  // State to track full-view mode\n  const [isFullView, setIsFullView] = useState(false);\n\n  useEffect(() => {\n    Cesium.Ion.defaultAccessToken =\n      'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJkMWY1MGUyNC0wNjFkLTQ1YWMtYTBhNi1mYTRkMTAzNWYzOGEiLCJpZCI6MjYzODA1LCJpYXQiOjE3MzQ2Nzk0ODd9.OvjRSddy3Mt1P1rOGIFKOQQcxIqTX2i7sM1Ha4s7_qs';\n\n    // Initialize Cesium Viewer if not done yet\n    if (globeRef.current && !viewerRef.current) {\n      try {\n        viewerRef.current = new Cesium.Viewer(globeRef.current, {\n          imageryProvider: new Cesium.IonImageryProvider({ assetId: 2 }),\n          baseLayerPicker: false,\n          geocoder: false,\n          homeButton: false,\n          infoBox: false,\n          navigationHelpButton: false,\n          sceneModePicker: false,\n          timeline: false,\n          animation: false,\n          requestRenderMode: true,\n          maximumRenderTimeChange: Infinity,\n        });\n\n        // Set initial camera view (top-down perspective)\n        viewerRef.current.scene.camera.setView({\n          destination: Cesium.Cartesian3.fromDegrees(\n            -74.0707383,\n            40.7117244,\n            10000000\n          ),\n          orientation: {\n            heading: Cesium.Math.toRadians(0),\n            pitch: Cesium.Math.toRadians(-90),\n            roll: 0.0,\n          },\n        });\n\n        // Continuous rotation\n        const rotateEarth = () => {\n          const spinRate = 0.01;\n          const delta = spinRate / 60; // 60 FPS assumption\n          viewerRef.current.scene.camera.rotate(Cesium.Cartesian3.UNIT_Z, -delta);\n          animationIdRef.current = requestAnimationFrame(rotateEarth);\n        };\n\n        rotateEarth(); // Start rotation immediately\n\n        // Scene interactions to stop / start rotation on user actions\n        viewerRef.current.scene.screenSpaceCameraController.inertiaSpin = 0;\n        viewerRef.current.scene.screenSpaceCameraController.inertiaTranslate = 0;\n        viewerRef.current.scene.screenSpaceCameraController.inertiaZoom = 0;\n\n        const stopRotation = () => {\n          if (animationIdRef.current) {\n            cancelAnimationFrame(animationIdRef.current);\n            animationIdRef.current = null;\n          }\n        };\n\n        const startRotation = () => {\n          if (!animationIdRef.current) {\n            rotateEarth();\n          }\n        };\n\n        // Listen for pointer/wheel events to stop or resume rotation\n        viewerRef.current.canvas.addEventListener('pointerdown', stopRotation);\n        viewerRef.current.canvas.addEventListener('pointerup', startRotation);\n        viewerRef.current.canvas.addEventListener('wheel', stopRotation, { passive: true });\n        viewerRef.current.canvas.addEventListener('wheel', startRotation, { passive: true, delay: 1000 });\n\n      } catch (error) {\n        console.error('Failed to initialize Cesium viewer:', error);\n      }\n    }\n\n    return () => {\n      // Cleanup if component unmounts\n      if (viewerRef.current) {\n        viewerRef.current.destroy();\n        viewerRef.current = null;\n      }\n    };\n  }, []);\n\n  // Manual stop rotation button\n  const handleStopRotationClick = () => {\n    if (animationIdRef.current) {\n      cancelAnimationFrame(animationIdRef.current);\n      animationIdRef.current = null;\n    }\n  };\n\n  // Toggle Full View\n  const handleToggleFullView = () => {\n    // Toggle the state\n    setIsFullView(!isFullView);\n\n    // Hide or show other page elements like Navbar, Footer, etc.\n    const displayValue = !isFullView ? 'none' : ''; // 'none' to hide, '' to restore\n    // You can customize the selector for elements you want to hide\n    document\n      .querySelectorAll('.navbar, .footer')\n      .forEach((elem) => (elem.style.display = displayValue));\n  };\n\n  return (\n    <>\n      {/* Stop Rotation Button */}\n      <div className=\"stop-rotation-button-container\">\n        <button className=\"stop-rotation-button\" onClick={handleStopRotationClick}>\n          {t(\"stopRotation\")}\n        </button>\n      </div>\n\n      {/* Toggle Full View Button */}\n      <div className=\"stop-rotation-button-container\" style={{ top: '60px' }}>\n        <button className=\"stop-rotation-button\" onClick={handleToggleFullView}>\n          {isFullView ? t(\"exitFullView\") : t(\"fullView\")}\n        </button>\n      </div>\n\n      <div\n        ref={globeRef}\n        id=\"cesiumContainer\"\n        style={{ height: '100vh', width: '100vw' }}\n      />\n    </>\n  );\n};\n\nexport default Globe;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}