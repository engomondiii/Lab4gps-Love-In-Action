{"ast":null,"code":"/**\n * Represents the position relative to the terrain.\n *\n * @enum {number}\n */\nconst HeightReference = {\n  /**\n   * The position is absolute.\n   * @type {number}\n   * @constant\n   */\n  NONE: 0,\n  /**\n   * The position is clamped to the terrain and 3D Tiles.\n   * @type {number}\n   * @constant\n   */\n  CLAMP_TO_GROUND: 1,\n  /**\n   * The position height is the height above the terrain and 3D Tiles.\n   * @type {number}\n   * @constant\n   */\n  RELATIVE_TO_GROUND: 2,\n  /**\n   * The position is clamped to terain.\n   * @type {number}\n   * @constant\n   */\n  CLAMP_TO_TERRAIN: 3,\n  /**\n   * The position height is the height above terrain.\n   * @type {number}\n   * @constant\n   */\n  RELATIVE_TO_TERRAIN: 4,\n  /**\n   * The position is clamped to 3D Tiles.\n   * @type {number}\n   * @constant\n   */\n  CLAMP_TO_3D_TILE: 5,\n  /**\n   * The position height is the height above 3D Tiles.\n   * @type {number}\n   * @constant\n   */\n  RELATIVE_TO_3D_TILE: 6\n};\nexport default Object.freeze(HeightReference);\n\n/**\n * Returns true if the height should be clamped to the surface\n * @param {HeightReference} heightReference\n * @returns true if the height should be clamped to the surface\n * @private\n */\nexport function isHeightReferenceClamp(heightReference) {\n  return heightReference === HeightReference.CLAMP_TO_GROUND || heightReference === HeightReference.CLAMP_TO_3D_TILE || heightReference === HeightReference.CLAMP_TO_TERRAIN;\n}\n\n/**\n * Returns true if the height should be offset relative to the surface\n * @param {HeightReference} heightReference\n * @returns true if the height should be offset relative to the surface\n * @private\n */\nexport function isHeightReferenceRelative(heightReference) {\n  return heightReference === HeightReference.RELATIVE_TO_GROUND || heightReference === HeightReference.RELATIVE_TO_3D_TILE || heightReference === HeightReference.RELATIVE_TO_TERRAIN;\n}","map":{"version":3,"names":["HeightReference","NONE","CLAMP_TO_GROUND","RELATIVE_TO_GROUND","CLAMP_TO_TERRAIN","RELATIVE_TO_TERRAIN","CLAMP_TO_3D_TILE","RELATIVE_TO_3D_TILE","Object","freeze","isHeightReferenceClamp","heightReference","isHeightReferenceRelative"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/engine/Source/Scene/HeightReference.js"],"sourcesContent":["/**\n * Represents the position relative to the terrain.\n *\n * @enum {number}\n */\nconst HeightReference = {\n  /**\n   * The position is absolute.\n   * @type {number}\n   * @constant\n   */\n  NONE: 0,\n\n  /**\n   * The position is clamped to the terrain and 3D Tiles.\n   * @type {number}\n   * @constant\n   */\n  CLAMP_TO_GROUND: 1,\n\n  /**\n   * The position height is the height above the terrain and 3D Tiles.\n   * @type {number}\n   * @constant\n   */\n  RELATIVE_TO_GROUND: 2,\n\n  /**\n   * The position is clamped to terain.\n   * @type {number}\n   * @constant\n   */\n  CLAMP_TO_TERRAIN: 3,\n\n  /**\n   * The position height is the height above terrain.\n   * @type {number}\n   * @constant\n   */\n  RELATIVE_TO_TERRAIN: 4,\n\n  /**\n   * The position is clamped to 3D Tiles.\n   * @type {number}\n   * @constant\n   */\n  CLAMP_TO_3D_TILE: 5,\n\n  /**\n   * The position height is the height above 3D Tiles.\n   * @type {number}\n   * @constant\n   */\n  RELATIVE_TO_3D_TILE: 6,\n};\n\nexport default Object.freeze(HeightReference);\n\n/**\n * Returns true if the height should be clamped to the surface\n * @param {HeightReference} heightReference\n * @returns true if the height should be clamped to the surface\n * @private\n */\nexport function isHeightReferenceClamp(heightReference) {\n  return (\n    heightReference === HeightReference.CLAMP_TO_GROUND ||\n    heightReference === HeightReference.CLAMP_TO_3D_TILE ||\n    heightReference === HeightReference.CLAMP_TO_TERRAIN\n  );\n}\n\n/**\n * Returns true if the height should be offset relative to the surface\n * @param {HeightReference} heightReference\n * @returns true if the height should be offset relative to the surface\n * @private\n */\nexport function isHeightReferenceRelative(heightReference) {\n  return (\n    heightReference === HeightReference.RELATIVE_TO_GROUND ||\n    heightReference === HeightReference.RELATIVE_TO_3D_TILE ||\n    heightReference === HeightReference.RELATIVE_TO_TERRAIN\n  );\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,MAAMA,eAAe,GAAG;EACtB;AACF;AACA;AACA;AACA;EACEC,IAAI,EAAE,CAAC;EAEP;AACF;AACA;AACA;AACA;EACEC,eAAe,EAAE,CAAC;EAElB;AACF;AACA;AACA;AACA;EACEC,kBAAkB,EAAE,CAAC;EAErB;AACF;AACA;AACA;AACA;EACEC,gBAAgB,EAAE,CAAC;EAEnB;AACF;AACA;AACA;AACA;EACEC,mBAAmB,EAAE,CAAC;EAEtB;AACF;AACA;AACA;AACA;EACEC,gBAAgB,EAAE,CAAC;EAEnB;AACF;AACA;AACA;AACA;EACEC,mBAAmB,EAAE;AACvB,CAAC;AAED,eAAeC,MAAM,CAACC,MAAM,CAACT,eAAe,CAAC;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASU,sBAAsBA,CAACC,eAAe,EAAE;EACtD,OACEA,eAAe,KAAKX,eAAe,CAACE,eAAe,IACnDS,eAAe,KAAKX,eAAe,CAACM,gBAAgB,IACpDK,eAAe,KAAKX,eAAe,CAACI,gBAAgB;AAExD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASQ,yBAAyBA,CAACD,eAAe,EAAE;EACzD,OACEA,eAAe,KAAKX,eAAe,CAACG,kBAAkB,IACtDQ,eAAe,KAAKX,eAAe,CAACO,mBAAmB,IACvDI,eAAe,KAAKX,eAAe,CAACK,mBAAmB;AAE3D","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}