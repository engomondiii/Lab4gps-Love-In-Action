{"ast":null,"code":"import defined from \"../Core/defined.js\";\nimport Event from \"../Core/Event.js\";\n/**\n * Describes a KmlTour, which uses KmlTourFlyTo, and KmlTourWait to\n * guide the camera to a specified destinations on given time intervals.\n *\n * @alias KmlTour\n * @constructor\n *\n * @param {string} name name parsed from KML\n * @param {string} id id parsed from KML\n * @param {Array} playlist array with KmlTourFlyTos and KmlTourWaits\n *\n * @see KmlTourFlyTo\n * @see KmlTourWait\n *\n * @demo {@link https://sandcastle.cesium.com/?src=KML%20Tours.html|KML Tours}\n */\nfunction KmlTour(name, id) {\n  /**\n   * Id of kml gx:Tour entry\n   * @type {string}\n   */\n  this.id = id;\n  /**\n   * Tour name\n   * @type {string}\n   */\n  this.name = name;\n  /**\n   * Index of current entry from playlist\n   * @type {number}\n   */\n  this.playlistIndex = 0;\n  /**\n   * Array of playlist entries\n   * @type {Array}\n   */\n  this.playlist = [];\n  /**\n   * Event will be called when tour starts to play,\n   * before any playlist entry starts to play.\n   * @type Event\n   */\n  this.tourStart = new Event();\n  /**\n   * Event will be called when all playlist entries are\n   * played, or tour playback being canceled.\n   *\n   * If tour playback was terminated, event callback will\n   * be called with terminated=true parameter.\n   * @type Event\n   */\n  this.tourEnd = new Event();\n  /**\n   * Event will be called when entry from playlist starts to play.\n   *\n   * Event callback will be called with curent entry as first parameter.\n   * @type Event\n   */\n  this.entryStart = new Event();\n  /**\n   * Event will be called when entry from playlist ends to play.\n   *\n   * Event callback will be called with following parameters:\n   * 1. entry - entry\n   * 2. terminated - true if playback was terminated by calling {@link KmlTour#stop}\n   * @type Event\n   */\n  this.entryEnd = new Event();\n  this._activeEntries = [];\n}\n\n/**\n * Add entry to this tour playlist.\n *\n * @param {KmlTourFlyTo|KmlTourWait} entry an entry to add to the playlist.\n */\nKmlTour.prototype.addPlaylistEntry = function (entry) {\n  this.playlist.push(entry);\n};\n\n/**\n * Play this tour.\n *\n * @param {CesiumWidget} widget The widget.\n * @param {object} [cameraOptions] these options will be merged with {@link Camera#flyTo}\n * options for FlyTo playlist entries.\n */\nKmlTour.prototype.play = function (widget, cameraOptions) {\n  this.tourStart.raiseEvent();\n  const tour = this;\n  playEntry.call(this, widget, cameraOptions, function (terminated) {\n    tour.playlistIndex = 0;\n    // Stop nonblocking entries\n    if (!terminated) {\n      cancelAllEntries(tour._activeEntries);\n    }\n    tour.tourEnd.raiseEvent(terminated);\n  });\n};\n\n/**\n * Stop curently playing tour.\n */\nKmlTour.prototype.stop = function () {\n  cancelAllEntries(this._activeEntries);\n};\n\n// Stop all activeEntries.\nfunction cancelAllEntries(activeEntries) {\n  for (let entry = activeEntries.pop(); entry !== undefined; entry = activeEntries.pop()) {\n    entry.stop();\n  }\n}\n\n// Play playlist entry.\n// This function is called recursevly with playNext and iterates over all entries from playlist.\nfunction playEntry(widget, cameraOptions, allDone) {\n  const entry = this.playlist[this.playlistIndex];\n  if (entry) {\n    const _playNext = playNext.bind(this, widget, cameraOptions, allDone);\n    this._activeEntries.push(entry);\n    this.entryStart.raiseEvent(entry);\n    if (entry.blocking) {\n      entry.play(_playNext, widget.scene.camera, cameraOptions);\n    } else {\n      const tour = this;\n      entry.play(function () {\n        tour.entryEnd.raiseEvent(entry);\n        const indx = tour._activeEntries.indexOf(entry);\n        if (indx >= 0) {\n          tour._activeEntries.splice(indx, 1);\n        }\n      });\n      _playNext(widget, cameraOptions, allDone);\n    }\n  } else if (defined(allDone)) {\n    allDone(false);\n  }\n}\n\n// Increment playlistIndex and call playEntry if terminated isn't true.\nfunction playNext(widget, cameraOptions, allDone, terminated) {\n  const entry = this.playlist[this.playlistIndex];\n  this.entryEnd.raiseEvent(entry, terminated);\n  if (terminated) {\n    allDone(terminated);\n  } else {\n    const indx = this._activeEntries.indexOf(entry);\n    if (indx >= 0) {\n      this._activeEntries.splice(indx, 1);\n    }\n    this.playlistIndex++;\n    playEntry.call(this, widget, cameraOptions, allDone);\n  }\n}\nexport default KmlTour;","map":{"version":3,"names":["defined","Event","KmlTour","name","id","playlistIndex","playlist","tourStart","tourEnd","entryStart","entryEnd","_activeEntries","prototype","addPlaylistEntry","entry","push","play","widget","cameraOptions","raiseEvent","tour","playEntry","call","terminated","cancelAllEntries","stop","activeEntries","pop","undefined","allDone","_playNext","playNext","bind","blocking","scene","camera","indx","indexOf","splice"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/engine/Source/DataSources/KmlTour.js"],"sourcesContent":["import defined from \"../Core/defined.js\";\nimport Event from \"../Core/Event.js\";\n/**\n * Describes a KmlTour, which uses KmlTourFlyTo, and KmlTourWait to\n * guide the camera to a specified destinations on given time intervals.\n *\n * @alias KmlTour\n * @constructor\n *\n * @param {string} name name parsed from KML\n * @param {string} id id parsed from KML\n * @param {Array} playlist array with KmlTourFlyTos and KmlTourWaits\n *\n * @see KmlTourFlyTo\n * @see KmlTourWait\n *\n * @demo {@link https://sandcastle.cesium.com/?src=KML%20Tours.html|KML Tours}\n */\nfunction KmlTour(name, id) {\n  /**\n   * Id of kml gx:Tour entry\n   * @type {string}\n   */\n  this.id = id;\n  /**\n   * Tour name\n   * @type {string}\n   */\n  this.name = name;\n  /**\n   * Index of current entry from playlist\n   * @type {number}\n   */\n  this.playlistIndex = 0;\n  /**\n   * Array of playlist entries\n   * @type {Array}\n   */\n  this.playlist = [];\n  /**\n   * Event will be called when tour starts to play,\n   * before any playlist entry starts to play.\n   * @type Event\n   */\n  this.tourStart = new Event();\n  /**\n   * Event will be called when all playlist entries are\n   * played, or tour playback being canceled.\n   *\n   * If tour playback was terminated, event callback will\n   * be called with terminated=true parameter.\n   * @type Event\n   */\n  this.tourEnd = new Event();\n  /**\n   * Event will be called when entry from playlist starts to play.\n   *\n   * Event callback will be called with curent entry as first parameter.\n   * @type Event\n   */\n  this.entryStart = new Event();\n  /**\n   * Event will be called when entry from playlist ends to play.\n   *\n   * Event callback will be called with following parameters:\n   * 1. entry - entry\n   * 2. terminated - true if playback was terminated by calling {@link KmlTour#stop}\n   * @type Event\n   */\n  this.entryEnd = new Event();\n\n  this._activeEntries = [];\n}\n\n/**\n * Add entry to this tour playlist.\n *\n * @param {KmlTourFlyTo|KmlTourWait} entry an entry to add to the playlist.\n */\nKmlTour.prototype.addPlaylistEntry = function (entry) {\n  this.playlist.push(entry);\n};\n\n/**\n * Play this tour.\n *\n * @param {CesiumWidget} widget The widget.\n * @param {object} [cameraOptions] these options will be merged with {@link Camera#flyTo}\n * options for FlyTo playlist entries.\n */\nKmlTour.prototype.play = function (widget, cameraOptions) {\n  this.tourStart.raiseEvent();\n\n  const tour = this;\n  playEntry.call(this, widget, cameraOptions, function (terminated) {\n    tour.playlistIndex = 0;\n    // Stop nonblocking entries\n    if (!terminated) {\n      cancelAllEntries(tour._activeEntries);\n    }\n    tour.tourEnd.raiseEvent(terminated);\n  });\n};\n\n/**\n * Stop curently playing tour.\n */\nKmlTour.prototype.stop = function () {\n  cancelAllEntries(this._activeEntries);\n};\n\n// Stop all activeEntries.\nfunction cancelAllEntries(activeEntries) {\n  for (\n    let entry = activeEntries.pop();\n    entry !== undefined;\n    entry = activeEntries.pop()\n  ) {\n    entry.stop();\n  }\n}\n\n// Play playlist entry.\n// This function is called recursevly with playNext and iterates over all entries from playlist.\nfunction playEntry(widget, cameraOptions, allDone) {\n  const entry = this.playlist[this.playlistIndex];\n  if (entry) {\n    const _playNext = playNext.bind(this, widget, cameraOptions, allDone);\n    this._activeEntries.push(entry);\n    this.entryStart.raiseEvent(entry);\n    if (entry.blocking) {\n      entry.play(_playNext, widget.scene.camera, cameraOptions);\n    } else {\n      const tour = this;\n      entry.play(function () {\n        tour.entryEnd.raiseEvent(entry);\n        const indx = tour._activeEntries.indexOf(entry);\n        if (indx >= 0) {\n          tour._activeEntries.splice(indx, 1);\n        }\n      });\n      _playNext(widget, cameraOptions, allDone);\n    }\n  } else if (defined(allDone)) {\n    allDone(false);\n  }\n}\n\n// Increment playlistIndex and call playEntry if terminated isn't true.\nfunction playNext(widget, cameraOptions, allDone, terminated) {\n  const entry = this.playlist[this.playlistIndex];\n  this.entryEnd.raiseEvent(entry, terminated);\n\n  if (terminated) {\n    allDone(terminated);\n  } else {\n    const indx = this._activeEntries.indexOf(entry);\n    if (indx >= 0) {\n      this._activeEntries.splice(indx, 1);\n    }\n    this.playlistIndex++;\n    playEntry.call(this, widget, cameraOptions, allDone);\n  }\n}\nexport default KmlTour;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}