{"ast":null,"code":"import BoundingSphere from \"../Core/BoundingSphere.js\";\nimport combine from \"../Core/combine.js\";\nimport defined from \"../Core/defined.js\";\nimport EasingFunction from \"../Core/EasingFunction.js\";\n/**\n * Transitions the KmlTour to the next destination. This transition is facilitated\n * using a specified flyToMode over a given number of seconds.\n *\n * @alias KmlTourFlyTo\n * @constructor\n *\n * @param {number} duration entry duration\n * @param {string} flyToMode KML fly to mode: bounce, smooth, etc\n * @param {KmlCamera|KmlLookAt} view KmlCamera or KmlLookAt\n *\n * @see KmlTour\n * @see KmlTourWait\n */\nfunction KmlTourFlyTo(duration, flyToMode, view) {\n  this.type = \"KmlTourFlyTo\";\n  this.blocking = true;\n  this.activeCamera = null;\n  this.activeCallback = null;\n  this.duration = duration;\n  this.view = view;\n  this.flyToMode = flyToMode;\n}\n\n/**\n * Play this playlist entry\n *\n * @param {KmlTourFlyTo.DoneCallback} done function which will be called when playback ends\n * @param {Camera} camera Cesium camera\n * @param {object} [cameraOptions] which will be merged with camera flyTo options. See {@link Camera#flyTo}\n */\nKmlTourFlyTo.prototype.play = function (done, camera, cameraOptions) {\n  this.activeCamera = camera;\n  if (defined(done) && done !== null) {\n    const self = this;\n    this.activeCallback = function (terminated) {\n      delete self.activeCallback;\n      delete self.activeCamera;\n      done(defined(terminated) ? false : terminated);\n    };\n  }\n  const options = this.getCameraOptions(cameraOptions);\n  if (this.view.headingPitchRoll) {\n    camera.flyTo(options);\n  } else if (this.view.headingPitchRange) {\n    const target = new BoundingSphere(this.view.position);\n    camera.flyToBoundingSphere(target, options);\n  }\n};\n\n/**\n * Stop execution of curent entry. Cancel camera flyTo\n */\nKmlTourFlyTo.prototype.stop = function () {\n  if (defined(this.activeCamera)) {\n    this.activeCamera.cancelFlight();\n  }\n  if (defined(this.activeCallback)) {\n    this.activeCallback(true);\n  }\n};\n\n/**\n * Returns options for {@link Camera#flyTo} or {@link Camera#flyToBoundingSphere}\n * depends on this.view type.\n *\n * @param {object} cameraOptions options to merge with generated. See {@link Camera#flyTo}\n * @returns {object} {@link Camera#flyTo} or {@link Camera#flyToBoundingSphere} options\n */\nKmlTourFlyTo.prototype.getCameraOptions = function (cameraOptions) {\n  let options = {\n    duration: this.duration\n  };\n  if (defined(this.activeCallback)) {\n    options.complete = this.activeCallback;\n  }\n  if (this.flyToMode === \"smooth\") {\n    options.easingFunction = EasingFunction.LINEAR_NONE;\n  }\n  if (this.view.headingPitchRoll) {\n    options.destination = this.view.position;\n    options.orientation = this.view.headingPitchRoll;\n  } else if (this.view.headingPitchRange) {\n    options.offset = this.view.headingPitchRange;\n  }\n  if (defined(cameraOptions)) {\n    options = combine(options, cameraOptions);\n  }\n  return options;\n};\n\n/**\n * A function that will be executed when the flight completes.\n * @callback KmlTourFlyTo.DoneCallback\n *\n * @param {boolean} terminated true if {@link KmlTourFlyTo#stop} was\n * called before entry done playback.\n */\nexport default KmlTourFlyTo;","map":{"version":3,"names":["BoundingSphere","combine","defined","EasingFunction","KmlTourFlyTo","duration","flyToMode","view","type","blocking","activeCamera","activeCallback","prototype","play","done","camera","cameraOptions","self","terminated","options","getCameraOptions","headingPitchRoll","flyTo","headingPitchRange","target","position","flyToBoundingSphere","stop","cancelFlight","complete","easingFunction","LINEAR_NONE","destination","orientation","offset"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/engine/Source/DataSources/KmlTourFlyTo.js"],"sourcesContent":["import BoundingSphere from \"../Core/BoundingSphere.js\";\nimport combine from \"../Core/combine.js\";\nimport defined from \"../Core/defined.js\";\nimport EasingFunction from \"../Core/EasingFunction.js\";\n/**\n * Transitions the KmlTour to the next destination. This transition is facilitated\n * using a specified flyToMode over a given number of seconds.\n *\n * @alias KmlTourFlyTo\n * @constructor\n *\n * @param {number} duration entry duration\n * @param {string} flyToMode KML fly to mode: bounce, smooth, etc\n * @param {KmlCamera|KmlLookAt} view KmlCamera or KmlLookAt\n *\n * @see KmlTour\n * @see KmlTourWait\n */\nfunction KmlTourFlyTo(duration, flyToMode, view) {\n  this.type = \"KmlTourFlyTo\";\n  this.blocking = true;\n  this.activeCamera = null;\n  this.activeCallback = null;\n\n  this.duration = duration;\n  this.view = view;\n  this.flyToMode = flyToMode;\n}\n\n/**\n * Play this playlist entry\n *\n * @param {KmlTourFlyTo.DoneCallback} done function which will be called when playback ends\n * @param {Camera} camera Cesium camera\n * @param {object} [cameraOptions] which will be merged with camera flyTo options. See {@link Camera#flyTo}\n */\nKmlTourFlyTo.prototype.play = function (done, camera, cameraOptions) {\n  this.activeCamera = camera;\n  if (defined(done) && done !== null) {\n    const self = this;\n    this.activeCallback = function (terminated) {\n      delete self.activeCallback;\n      delete self.activeCamera;\n      done(defined(terminated) ? false : terminated);\n    };\n  }\n\n  const options = this.getCameraOptions(cameraOptions);\n  if (this.view.headingPitchRoll) {\n    camera.flyTo(options);\n  } else if (this.view.headingPitchRange) {\n    const target = new BoundingSphere(this.view.position);\n    camera.flyToBoundingSphere(target, options);\n  }\n};\n\n/**\n * Stop execution of curent entry. Cancel camera flyTo\n */\nKmlTourFlyTo.prototype.stop = function () {\n  if (defined(this.activeCamera)) {\n    this.activeCamera.cancelFlight();\n  }\n  if (defined(this.activeCallback)) {\n    this.activeCallback(true);\n  }\n};\n\n/**\n * Returns options for {@link Camera#flyTo} or {@link Camera#flyToBoundingSphere}\n * depends on this.view type.\n *\n * @param {object} cameraOptions options to merge with generated. See {@link Camera#flyTo}\n * @returns {object} {@link Camera#flyTo} or {@link Camera#flyToBoundingSphere} options\n */\nKmlTourFlyTo.prototype.getCameraOptions = function (cameraOptions) {\n  let options = {\n    duration: this.duration,\n  };\n\n  if (defined(this.activeCallback)) {\n    options.complete = this.activeCallback;\n  }\n\n  if (this.flyToMode === \"smooth\") {\n    options.easingFunction = EasingFunction.LINEAR_NONE;\n  }\n\n  if (this.view.headingPitchRoll) {\n    options.destination = this.view.position;\n    options.orientation = this.view.headingPitchRoll;\n  } else if (this.view.headingPitchRange) {\n    options.offset = this.view.headingPitchRange;\n  }\n\n  if (defined(cameraOptions)) {\n    options = combine(options, cameraOptions);\n  }\n  return options;\n};\n\n/**\n * A function that will be executed when the flight completes.\n * @callback KmlTourFlyTo.DoneCallback\n *\n * @param {boolean} terminated true if {@link KmlTourFlyTo#stop} was\n * called before entry done playback.\n */\nexport default KmlTourFlyTo;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}