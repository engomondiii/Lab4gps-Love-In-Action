{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/src/components/Globe/Globe.js\",\n  _s = $RefreshSig$();\n/* global Cesium */\nimport React, { useEffect, useRef } from 'react';\nimport '../styles/Globe.css'; // Import the separate style file\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Globe = () => {\n  _s();\n  const globeRef = useRef(null);\n  const viewerRef = useRef(null);\n  const animationIdRef = useRef(null); // To store the animation frame ID\n\n  useEffect(() => {\n    Cesium.Ion.defaultAccessToken = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJkMWY1MGUyNC0wNjFkLTQ1YWMtYTBhNi1mYTRkMTAzNWYzOGEiLCJpZCI6MjYzODA1LCJpYXQiOjE3MzQ2Nzk0ODd9.OvjRSddy3Mt1P1rOGIFKOQQcxIqTX2i7sM1Ha4s7_qs';\n    if (globeRef.current && !viewerRef.current) {\n      try {\n        viewerRef.current = new Cesium.Viewer(globeRef.current, {\n          imageryProvider: new Cesium.IonImageryProvider({\n            assetId: 2\n          }),\n          baseLayerPicker: false,\n          geocoder: false,\n          homeButton: false,\n          infoBox: false,\n          navigationHelpButton: false,\n          sceneModePicker: false,\n          timeline: false,\n          animation: false,\n          requestRenderMode: true,\n          maximumRenderTimeChange: Infinity\n        });\n\n        // Set initial view\n        viewerRef.current.scene.camera.setView({\n          destination: Cesium.Cartesian3.fromDegrees(-74.0707383, 40.7117244, 10000000),\n          // Keep original altitude\n          orientation: {\n            heading: Cesium.Math.toRadians(0),\n            // North-aligned\n            pitch: Cesium.Math.toRadians(-90),\n            // Directly top-down view\n            roll: 0.0\n          }\n        });\n\n        // Continuous rotation\n        const rotateEarth = () => {\n          const spinRate = 0.01;\n          const delta = spinRate / 60; // Assuming 60 FPS for rotation rate\n          viewerRef.current.scene.camera.rotate(Cesium.Cartesian3.UNIT_Z, -delta);\n          animationIdRef.current = requestAnimationFrame(rotateEarth);\n        };\n        rotateEarth();\n\n        // Event handlers to stop/start rotation on user interaction\n        viewerRef.current.scene.screenSpaceCameraController.inertiaSpin = 0;\n        viewerRef.current.scene.screenSpaceCameraController.inertiaTranslate = 0;\n        viewerRef.current.scene.screenSpaceCameraController.inertiaZoom = 0;\n        const stopRotation = () => {\n          if (animationIdRef.current) {\n            cancelAnimationFrame(animationIdRef.current);\n            animationIdRef.current = null;\n          }\n        };\n        const startRotation = () => {\n          if (!animationIdRef.current) {\n            rotateEarth();\n          }\n        };\n\n        // Listen for start and stop events\n        viewerRef.current.canvas.addEventListener('pointerdown', stopRotation);\n        viewerRef.current.canvas.addEventListener('pointerup', startRotation);\n        viewerRef.current.canvas.addEventListener('wheel', stopRotation, {\n          passive: true\n        });\n        viewerRef.current.canvas.addEventListener('wheel', startRotation, {\n          passive: true,\n          delay: 1000\n        });\n      } catch (error) {\n        console.error('Failed to initialize Cesium viewer:', error);\n      }\n    }\n    return () => {\n      if (viewerRef.current) {\n        viewerRef.current.destroy();\n        viewerRef.current = null;\n      }\n    };\n  }, []);\n\n  // A button to manually stop rotation\n  const handleStopRotationClick = () => {\n    if (animationIdRef.current) {\n      cancelAnimationFrame(animationIdRef.current);\n      animationIdRef.current = null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stop-rotation-button-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"stop-rotation-button\",\n        onClick: handleStopRotationClick,\n        children: \"Stop Rotation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: globeRef,\n      id: \"cesiumContainer\",\n      style: {\n        height: \"100vh\",\n        width: \"100vw\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Globe, \"nmzBG2ukVyLJNwDCoUlVXClLNtY=\");\n_c = Globe;\nexport default Globe;\nvar _c;\n$RefreshReg$(_c, \"Globe\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","Globe","_s","globeRef","viewerRef","animationIdRef","Cesium","Ion","defaultAccessToken","current","Viewer","imageryProvider","IonImageryProvider","assetId","baseLayerPicker","geocoder","homeButton","infoBox","navigationHelpButton","sceneModePicker","timeline","animation","requestRenderMode","maximumRenderTimeChange","Infinity","scene","camera","setView","destination","Cartesian3","fromDegrees","orientation","heading","Math","toRadians","pitch","roll","rotateEarth","spinRate","delta","rotate","UNIT_Z","requestAnimationFrame","screenSpaceCameraController","inertiaSpin","inertiaTranslate","inertiaZoom","stopRotation","cancelAnimationFrame","startRotation","canvas","addEventListener","passive","delay","error","console","destroy","handleStopRotationClick","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ref","id","style","height","width","_c","$RefreshReg$"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/src/components/Globe/Globe.js"],"sourcesContent":["/* global Cesium */\nimport React, { useEffect, useRef } from 'react';\nimport '../styles/Globe.css'; // Import the separate style file\n\nconst Globe = () => {\n    const globeRef = useRef(null);\n    const viewerRef = useRef(null);\n    const animationIdRef = useRef(null);  // To store the animation frame ID\n\n    useEffect(() => {\n        Cesium.Ion.defaultAccessToken = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJkMWY1MGUyNC0wNjFkLTQ1YWMtYTBhNi1mYTRkMTAzNWYzOGEiLCJpZCI6MjYzODA1LCJpYXQiOjE3MzQ2Nzk0ODd9.OvjRSddy3Mt1P1rOGIFKOQQcxIqTX2i7sM1Ha4s7_qs';\n\n        if (globeRef.current && !viewerRef.current) {\n            try {\n                viewerRef.current = new Cesium.Viewer(globeRef.current, {\n                    imageryProvider: new Cesium.IonImageryProvider({ assetId: 2 }),\n                    baseLayerPicker: false,\n                    geocoder: false,\n                    homeButton: false,\n                    infoBox: false,\n                    navigationHelpButton: false,\n                    sceneModePicker: false,\n                    timeline: false,\n                    animation: false,\n                    requestRenderMode: true,\n                    maximumRenderTimeChange: Infinity,\n                });\n\n                // Set initial view\n                viewerRef.current.scene.camera.setView({\n                    destination: Cesium.Cartesian3.fromDegrees(-74.0707383, 40.7117244, 10000000), // Keep original altitude\n                    orientation: {\n                        heading: Cesium.Math.toRadians(0),  // North-aligned\n                        pitch: Cesium.Math.toRadians(-90),  // Directly top-down view\n                        roll: 0.0\n                    }\n                });\n\n                // Continuous rotation\n                const rotateEarth = () => {\n                    const spinRate = 0.01;\n                    const delta = spinRate / 60;  // Assuming 60 FPS for rotation rate\n                    viewerRef.current.scene.camera.rotate(Cesium.Cartesian3.UNIT_Z, -delta);\n                    animationIdRef.current = requestAnimationFrame(rotateEarth);\n                };\n\n                rotateEarth();\n\n                // Event handlers to stop/start rotation on user interaction\n                viewerRef.current.scene.screenSpaceCameraController.inertiaSpin = 0;\n                viewerRef.current.scene.screenSpaceCameraController.inertiaTranslate = 0;\n                viewerRef.current.scene.screenSpaceCameraController.inertiaZoom = 0;\n\n                const stopRotation = () => {\n                    if (animationIdRef.current) {\n                        cancelAnimationFrame(animationIdRef.current);\n                        animationIdRef.current = null;\n                    }\n                };\n\n                const startRotation = () => {\n                    if (!animationIdRef.current) {\n                        rotateEarth();\n                    }\n                };\n\n                // Listen for start and stop events\n                viewerRef.current.canvas.addEventListener('pointerdown', stopRotation);\n                viewerRef.current.canvas.addEventListener('pointerup', startRotation);\n                viewerRef.current.canvas.addEventListener('wheel', stopRotation, { passive: true });\n                viewerRef.current.canvas.addEventListener('wheel', startRotation, { passive: true, delay: 1000 });\n\n            } catch (error) {\n                console.error('Failed to initialize Cesium viewer:', error);\n            }\n        }\n\n        return () => {\n            if (viewerRef.current) {\n                viewerRef.current.destroy();\n                viewerRef.current = null;\n            }\n        };\n    }, []);\n\n    // A button to manually stop rotation\n    const handleStopRotationClick = () => {\n        if (animationIdRef.current) {\n            cancelAnimationFrame(animationIdRef.current);\n            animationIdRef.current = null;\n        }\n    };\n\n    return (\n        <>\n            {/* Button to manually stop rotation */}\n            <div className=\"stop-rotation-button-container\">\n                <button className=\"stop-rotation-button\" onClick={handleStopRotationClick}>\n                    Stop Rotation\n                </button>\n            </div>\n\n            <div\n                ref={globeRef}\n                id=\"cesiumContainer\"\n                style={{ height: \"100vh\", width: \"100vw\" }}\n            />\n        </>\n    );\n};\n\nexport default Globe;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}