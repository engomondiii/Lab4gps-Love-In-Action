{"ast":null,"code":"import defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\n\n/**\n * The interface for all properties, which represent a value that can optionally vary over time.\n * This type defines an interface and cannot be instantiated directly.\n *\n * @alias Property\n * @constructor\n * @abstract\n *\n * @see CompositeProperty\n * @see ConstantProperty\n * @see SampledProperty\n * @see TimeIntervalCollectionProperty\n * @see MaterialProperty\n * @see PositionProperty\n * @see ReferenceProperty\n */\nfunction Property() {\n  DeveloperError.throwInstantiationError();\n}\nObject.defineProperties(Property.prototype, {\n  /**\n   * Gets a value indicating if this property is constant.  A property is considered\n   * constant if getValue always returns the same result for the current definition.\n   * @memberof Property.prototype\n   *\n   * @type {boolean}\n   * @readonly\n   */\n  isConstant: {\n    get: DeveloperError.throwInstantiationError\n  },\n  /**\n   * Gets the event that is raised whenever the definition of this property changes.\n   * The definition is considered to have changed if a call to getValue would return\n   * a different result for the same time.\n   * @memberof Property.prototype\n   *\n   * @type {Event}\n   * @readonly\n   */\n  definitionChanged: {\n    get: DeveloperError.throwInstantiationError\n  }\n});\n\n/**\n * Gets the value of the property at the provided time.\n * @function\n *\n * @param {JulianDate} [time=JulianDate.now()] The time for which to retrieve the value. If omitted, the current system time is used.\n * @param {object} [result] The object to store the value into, if omitted, a new instance is created and returned.\n * @returns {object} The modified result parameter or a new instance if the result parameter was not supplied.\n */\nProperty.prototype.getValue = DeveloperError.throwInstantiationError;\n\n/**\n * Compares this property to the provided property and returns\n * <code>true</code> if they are equal, <code>false</code> otherwise.\n * @function\n *\n * @param {Property} [other] The other property.\n * @returns {boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\n */\nProperty.prototype.equals = DeveloperError.throwInstantiationError;\n\n/**\n * @private\n */\nProperty.equals = function (left, right) {\n  return left === right || defined(left) && left.equals(right);\n};\n\n/**\n * @private\n */\nProperty.arrayEquals = function (left, right) {\n  if (left === right) {\n    return true;\n  }\n  if (!defined(left) || !defined(right) || left.length !== right.length) {\n    return false;\n  }\n  const length = left.length;\n  for (let i = 0; i < length; i++) {\n    if (!Property.equals(left[i], right[i])) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * @private\n */\nProperty.isConstant = function (property) {\n  return !defined(property) || property.isConstant;\n};\n\n/**\n * @private\n */\nProperty.getValueOrUndefined = function (property, time, result) {\n  return defined(property) ? property.getValue(time, result) : undefined;\n};\n\n/**\n * @private\n */\nProperty.getValueOrDefault = function (property, time, valueDefault, result) {\n  return defined(property) ? defaultValue(property.getValue(time, result), valueDefault) : valueDefault;\n};\n\n/**\n * @private\n */\nProperty.getValueOrClonedDefault = function (property, time, valueDefault, result) {\n  let value;\n  if (defined(property)) {\n    value = property.getValue(time, result);\n  }\n  if (!defined(value)) {\n    value = valueDefault.clone(value);\n  }\n  return value;\n};\nexport default Property;","map":{"version":3,"names":["defaultValue","defined","DeveloperError","Property","throwInstantiationError","Object","defineProperties","prototype","isConstant","get","definitionChanged","getValue","equals","left","right","arrayEquals","length","i","property","getValueOrUndefined","time","result","undefined","getValueOrDefault","valueDefault","getValueOrClonedDefault","value","clone"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/engine/Source/DataSources/Property.js"],"sourcesContent":["import defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\n\n/**\n * The interface for all properties, which represent a value that can optionally vary over time.\n * This type defines an interface and cannot be instantiated directly.\n *\n * @alias Property\n * @constructor\n * @abstract\n *\n * @see CompositeProperty\n * @see ConstantProperty\n * @see SampledProperty\n * @see TimeIntervalCollectionProperty\n * @see MaterialProperty\n * @see PositionProperty\n * @see ReferenceProperty\n */\nfunction Property() {\n  DeveloperError.throwInstantiationError();\n}\n\nObject.defineProperties(Property.prototype, {\n  /**\n   * Gets a value indicating if this property is constant.  A property is considered\n   * constant if getValue always returns the same result for the current definition.\n   * @memberof Property.prototype\n   *\n   * @type {boolean}\n   * @readonly\n   */\n  isConstant: {\n    get: DeveloperError.throwInstantiationError,\n  },\n  /**\n   * Gets the event that is raised whenever the definition of this property changes.\n   * The definition is considered to have changed if a call to getValue would return\n   * a different result for the same time.\n   * @memberof Property.prototype\n   *\n   * @type {Event}\n   * @readonly\n   */\n  definitionChanged: {\n    get: DeveloperError.throwInstantiationError,\n  },\n});\n\n/**\n * Gets the value of the property at the provided time.\n * @function\n *\n * @param {JulianDate} [time=JulianDate.now()] The time for which to retrieve the value. If omitted, the current system time is used.\n * @param {object} [result] The object to store the value into, if omitted, a new instance is created and returned.\n * @returns {object} The modified result parameter or a new instance if the result parameter was not supplied.\n */\nProperty.prototype.getValue = DeveloperError.throwInstantiationError;\n\n/**\n * Compares this property to the provided property and returns\n * <code>true</code> if they are equal, <code>false</code> otherwise.\n * @function\n *\n * @param {Property} [other] The other property.\n * @returns {boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\n */\nProperty.prototype.equals = DeveloperError.throwInstantiationError;\n\n/**\n * @private\n */\nProperty.equals = function (left, right) {\n  return left === right || (defined(left) && left.equals(right));\n};\n\n/**\n * @private\n */\nProperty.arrayEquals = function (left, right) {\n  if (left === right) {\n    return true;\n  }\n  if (!defined(left) || !defined(right) || left.length !== right.length) {\n    return false;\n  }\n  const length = left.length;\n  for (let i = 0; i < length; i++) {\n    if (!Property.equals(left[i], right[i])) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * @private\n */\nProperty.isConstant = function (property) {\n  return !defined(property) || property.isConstant;\n};\n\n/**\n * @private\n */\nProperty.getValueOrUndefined = function (property, time, result) {\n  return defined(property) ? property.getValue(time, result) : undefined;\n};\n\n/**\n * @private\n */\nProperty.getValueOrDefault = function (property, time, valueDefault, result) {\n  return defined(property)\n    ? defaultValue(property.getValue(time, result), valueDefault)\n    : valueDefault;\n};\n\n/**\n * @private\n */\nProperty.getValueOrClonedDefault = function (\n  property,\n  time,\n  valueDefault,\n  result,\n) {\n  let value;\n  if (defined(property)) {\n    value = property.getValue(time, result);\n  }\n  if (!defined(value)) {\n    value = valueDefault.clone(value);\n  }\n  return value;\n};\nexport default Property;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}