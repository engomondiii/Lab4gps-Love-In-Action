{"ast":null,"code":"import defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport Event from \"../Core/Event.js\";\nimport createPropertyDescriptor from \"./createPropertyDescriptor.js\";\n\n/**\n * @typedef {object} LabelGraphics.ConstructorOptions\n *\n * Initialization options for the LabelGraphics constructor\n *\n * @property {Property | boolean} [show=true] A boolean Property specifying the visibility of the label.\n * @property {Property | string} [text] A Property specifying the text. Explicit newlines '\\n' are supported.\n * @property {Property | string} [font='30px sans-serif'] A Property specifying the CSS font.\n * @property {Property | LabelStyle} [style=LabelStyle.FILL] A Property specifying the {@link LabelStyle}.\n * @property {Property | number} [scale=1.0] A numeric Property specifying the scale to apply to the text.\n * @property {Property | boolean} [showBackground=false] A boolean Property specifying the visibility of the background behind the label.\n * @property {Property | Color} [backgroundColor=new Color(0.165, 0.165, 0.165, 0.8)] A Property specifying the background {@link Color}.\n * @property {Property | Cartesian2} [backgroundPadding=new Cartesian2(7, 5)] A {@link Cartesian2} Property specifying the horizontal and vertical background padding in pixels.\n * @property {Property | Cartesian2} [pixelOffset=Cartesian2.ZERO] A {@link Cartesian2} Property specifying the pixel offset.\n * @property {Property | Cartesian3} [eyeOffset=Cartesian3.ZERO] A {@link Cartesian3} Property specifying the eye offset.\n * @property {Property | HorizontalOrigin} [horizontalOrigin=HorizontalOrigin.CENTER] A Property specifying the {@link HorizontalOrigin}.\n * @property {Property | VerticalOrigin} [verticalOrigin=VerticalOrigin.CENTER] A Property specifying the {@link VerticalOrigin}.\n * @property {Property | HeightReference} [heightReference=HeightReference.NONE] A Property specifying what the height is relative to.\n * @property {Property | Color} [fillColor=Color.WHITE] A Property specifying the fill {@link Color}.\n * @property {Property | Color} [outlineColor=Color.BLACK] A Property specifying the outline {@link Color}.\n * @property {Property | number} [outlineWidth=1.0] A numeric Property specifying the outline width.\n * @property {Property | NearFarScalar} [translucencyByDistance] A {@link NearFarScalar} Property used to set translucency based on distance from the camera.\n * @property {Property | NearFarScalar} [pixelOffsetScaleByDistance] A {@link NearFarScalar} Property used to set pixelOffset based on distance from the camera.\n * @property {Property | NearFarScalar} [scaleByDistance] A {@link NearFarScalar} Property used to set scale based on distance from the camera.\n * @property {Property | DistanceDisplayCondition} [distanceDisplayCondition] A Property specifying at what distance from the camera that this label will be displayed.\n * @property {Property | number} [disableDepthTestDistance] A Property specifying the distance from the camera at which to disable the depth test to.\n */\n\n/**\n * Describes a two dimensional label located at the position of the containing {@link Entity}.\n * <p>\n * <div align='center'>\n * <img src='Images/Label.png' width='400' height='300' /><br />\n * Example labels\n * </div>\n * </p>\n *\n * @alias LabelGraphics\n * @constructor\n *\n * @param {LabelGraphics.ConstructorOptions} [options] Object describing initialization options\n *\n * @demo {@link https://sandcastle.cesium.com/index.html?src=Labels.html|Cesium Sandcastle Labels Demo}\n */\nfunction LabelGraphics(options) {\n  this._definitionChanged = new Event();\n  this._show = undefined;\n  this._showSubscription = undefined;\n  this._text = undefined;\n  this._textSubscription = undefined;\n  this._font = undefined;\n  this._fontSubscription = undefined;\n  this._style = undefined;\n  this._styleSubscription = undefined;\n  this._scale = undefined;\n  this._scaleSubscription = undefined;\n  this._showBackground = undefined;\n  this._showBackgroundSubscription = undefined;\n  this._backgroundColor = undefined;\n  this._backgroundColorSubscription = undefined;\n  this._backgroundPadding = undefined;\n  this._backgroundPaddingSubscription = undefined;\n  this._pixelOffset = undefined;\n  this._pixelOffsetSubscription = undefined;\n  this._eyeOffset = undefined;\n  this._eyeOffsetSubscription = undefined;\n  this._horizontalOrigin = undefined;\n  this._horizontalOriginSubscription = undefined;\n  this._verticalOrigin = undefined;\n  this._verticalOriginSubscription = undefined;\n  this._heightReference = undefined;\n  this._heightReferenceSubscription = undefined;\n  this._fillColor = undefined;\n  this._fillColorSubscription = undefined;\n  this._outlineColor = undefined;\n  this._outlineColorSubscription = undefined;\n  this._outlineWidth = undefined;\n  this._outlineWidthSubscription = undefined;\n  this._translucencyByDistance = undefined;\n  this._translucencyByDistanceSubscription = undefined;\n  this._pixelOffsetScaleByDistance = undefined;\n  this._pixelOffsetScaleByDistanceSubscription = undefined;\n  this._scaleByDistance = undefined;\n  this._scaleByDistanceSubscription = undefined;\n  this._distanceDisplayCondition = undefined;\n  this._distanceDisplayConditionSubscription = undefined;\n  this._disableDepthTestDistance = undefined;\n  this._disableDepthTestDistanceSubscription = undefined;\n  this.merge(defaultValue(options, defaultValue.EMPTY_OBJECT));\n}\nObject.defineProperties(LabelGraphics.prototype, {\n  /**\n   * Gets the event that is raised whenever a property or sub-property is changed or modified.\n   * @memberof LabelGraphics.prototype\n   *\n   * @type {Event}\n   * @readonly\n   */\n  definitionChanged: {\n    get: function () {\n      return this._definitionChanged;\n    }\n  },\n  /**\n   * Gets or sets the boolean Property specifying the visibility of the label.\n   * @memberof LabelGraphics.prototype\n   * @type {Property|undefined}\n   */\n  show: createPropertyDescriptor(\"show\"),\n  /**\n   * Gets or sets the string Property specifying the text of the label.\n   * Explicit newlines '\\n' are supported.\n   * @memberof LabelGraphics.prototype\n   * @type {Property|undefined}\n   */\n  text: createPropertyDescriptor(\"text\"),\n  /**\n   * Gets or sets the string Property specifying the font in CSS syntax.\n   * @memberof LabelGraphics.prototype\n   * @type {Property|undefined}\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/CSS/font|CSS font on MDN}\n   */\n  font: createPropertyDescriptor(\"font\"),\n  /**\n   * Gets or sets the Property specifying the {@link LabelStyle}.\n   * @memberof LabelGraphics.prototype\n   * @type {Property|undefined}\n   */\n  style: createPropertyDescriptor(\"style\"),\n  /**\n   * Gets or sets the numeric Property specifying the uniform scale to apply to the image.\n   * A scale greater than <code>1.0</code> enlarges the label while a scale less than <code>1.0</code> shrinks it.\n   * <p>\n   * <div align='center'>\n   * <img src='Images/Label.setScale.png' width='400' height='300' /><br/>\n   * From left to right in the above image, the scales are <code>0.5</code>, <code>1.0</code>,\n   * and <code>2.0</code>.\n   * </div>\n   * </p>\n   * @memberof LabelGraphics.prototype\n   * @type {Property|undefined}\n   * @default 1.0\n   */\n  scale: createPropertyDescriptor(\"scale\"),\n  /**\n   * Gets or sets the boolean Property specifying the visibility of the background behind the label.\n   * @memberof LabelGraphics.prototype\n   * @type {Property|undefined}\n   * @default false\n   */\n  showBackground: createPropertyDescriptor(\"showBackground\"),\n  /**\n   * Gets or sets the Property specifying the background {@link Color}.\n   * @memberof LabelGraphics.prototype\n   * @type {Property|undefined}\n   * @default new Color(0.165, 0.165, 0.165, 0.8)\n   */\n  backgroundColor: createPropertyDescriptor(\"backgroundColor\"),\n  /**\n   * Gets or sets the {@link Cartesian2} Property specifying the label's horizontal and vertical\n   * background padding in pixels.\n   * @memberof LabelGraphics.prototype\n   * @type {Property|undefined}\n   * @default new Cartesian2(7, 5)\n   */\n  backgroundPadding: createPropertyDescriptor(\"backgroundPadding\"),\n  /**\n   * Gets or sets the {@link Cartesian2} Property specifying the label's pixel offset in screen space\n   * from the origin of this label.  This is commonly used to align multiple labels and labels at\n   * the same position, e.g., an image and text.  The screen space origin is the top, left corner of the\n   * canvas; <code>x</code> increases from left to right, and <code>y</code> increases from top to bottom.\n   * <p>\n   * <div align='center'>\n   * <table border='0' cellpadding='5'><tr>\n   * <td align='center'><code>default</code><br/><img src='Images/Label.setPixelOffset.default.png' width='250' height='188' /></td>\n   * <td align='center'><code>l.pixeloffset = new Cartesian2(25, 75);</code><br/><img src='Images/Label.setPixelOffset.x50y-25.png' width='250' height='188' /></td>\n   * </tr></table>\n   * The label's origin is indicated by the yellow point.\n   * </div>\n   * </p>\n   * @memberof LabelGraphics.prototype\n   * @type {Property|undefined}\n   * @default Cartesian2.ZERO\n   */\n  pixelOffset: createPropertyDescriptor(\"pixelOffset\"),\n  /**\n   * Gets or sets the {@link Cartesian3} Property specifying the label's offset in eye coordinates.\n   * Eye coordinates is a left-handed coordinate system, where <code>x</code> points towards the viewer's\n   * right, <code>y</code> points up, and <code>z</code> points into the screen.\n   * <p>\n   * An eye offset is commonly used to arrange multiple labels or objects at the same position, e.g., to\n   * arrange a label above its corresponding 3D model.\n   * </p>\n   * Below, the label is positioned at the center of the Earth but an eye offset makes it always\n   * appear on top of the Earth regardless of the viewer's or Earth's orientation.\n   * <p>\n   * <div align='center'>\n   * <table border='0' cellpadding='5'><tr>\n   * <td align='center'><img src='Images/Billboard.setEyeOffset.one.png' width='250' height='188' /></td>\n   * <td align='center'><img src='Images/Billboard.setEyeOffset.two.png' width='250' height='188' /></td>\n   * </tr></table>\n   * <code>l.eyeOffset = new Cartesian3(0.0, 8000000.0, 0.0);</code><br /><br />\n   * </div>\n   * </p>\n   * @memberof LabelGraphics.prototype\n   * @type {Property|undefined}\n   * @default Cartesian3.ZERO\n   */\n  eyeOffset: createPropertyDescriptor(\"eyeOffset\"),\n  /**\n   * Gets or sets the Property specifying the {@link HorizontalOrigin}.\n   * @memberof LabelGraphics.prototype\n   * @type {Property|undefined}\n   */\n  horizontalOrigin: createPropertyDescriptor(\"horizontalOrigin\"),\n  /**\n   * Gets or sets the Property specifying the {@link VerticalOrigin}.\n   * @memberof LabelGraphics.prototype\n   * @type {Property|undefined}\n   */\n  verticalOrigin: createPropertyDescriptor(\"verticalOrigin\"),\n  /**\n   * Gets or sets the Property specifying the {@link HeightReference}.\n   * @memberof LabelGraphics.prototype\n   * @type {Property|undefined}\n   * @default HeightReference.NONE\n   */\n  heightReference: createPropertyDescriptor(\"heightReference\"),\n  /**\n   * Gets or sets the Property specifying the fill {@link Color}.\n   * @memberof LabelGraphics.prototype\n   * @type {Property|undefined}\n   */\n  fillColor: createPropertyDescriptor(\"fillColor\"),\n  /**\n   * Gets or sets the Property specifying the outline {@link Color}.\n   * @memberof LabelGraphics.prototype\n   * @type {Property|undefined}\n   */\n  outlineColor: createPropertyDescriptor(\"outlineColor\"),\n  /**\n   * Gets or sets the numeric Property specifying the outline width.\n   * @memberof LabelGraphics.prototype\n   * @type {Property|undefined}\n   */\n  outlineWidth: createPropertyDescriptor(\"outlineWidth\"),\n  /**\n   * Gets or sets {@link NearFarScalar} Property specifying the translucency of the label based on the distance from the camera.\n   * A label's translucency will interpolate between the {@link NearFarScalar#nearValue} and\n   * {@link NearFarScalar#farValue} while the camera distance falls within the lower and upper bounds\n   * of the specified {@link NearFarScalar#near} and {@link NearFarScalar#far}.\n   * Outside of these ranges the label's translucency remains clamped to the nearest bound.\n   * @memberof LabelGraphics.prototype\n   * @type {Property|undefined}\n   */\n  translucencyByDistance: createPropertyDescriptor(\"translucencyByDistance\"),\n  /**\n   * Gets or sets {@link NearFarScalar} Property specifying the pixel offset of the label based on the distance from the camera.\n   * A label's pixel offset will interpolate between the {@link NearFarScalar#nearValue} and\n   * {@link NearFarScalar#farValue} while the camera distance falls within the lower and upper bounds\n   * of the specified {@link NearFarScalar#near} and {@link NearFarScalar#far}.\n   * Outside of these ranges the label's pixel offset remains clamped to the nearest bound.\n   * @memberof LabelGraphics.prototype\n   * @type {Property|undefined}\n   */\n  pixelOffsetScaleByDistance: createPropertyDescriptor(\"pixelOffsetScaleByDistance\"),\n  /**\n   * Gets or sets near and far scaling properties of a Label based on the label's distance from the camera.\n   * A label's scale will interpolate between the {@link NearFarScalar#nearValue} and\n   * {@link NearFarScalar#farValue} while the camera distance falls within the lower and upper bounds\n   * of the specified {@link NearFarScalar#near} and {@link NearFarScalar#far}.\n   * Outside of these ranges the label's scale remains clamped to the nearest bound.  If undefined,\n   * scaleByDistance will be disabled.\n   * @memberof LabelGraphics.prototype\n   * @type {Property|undefined}\n   */\n  scaleByDistance: createPropertyDescriptor(\"scaleByDistance\"),\n  /**\n   * Gets or sets the {@link DistanceDisplayCondition} Property specifying at what distance from the camera that this label will be displayed.\n   * @memberof LabelGraphics.prototype\n   * @type {Property|undefined}\n   */\n  distanceDisplayCondition: createPropertyDescriptor(\"distanceDisplayCondition\"),\n  /**\n   * Gets or sets the distance from the camera at which to disable the depth test to, for example, prevent clipping against terrain.\n   * When set to zero, the depth test is always applied. When set to Number.POSITIVE_INFINITY, the depth test is never applied.\n   * @memberof LabelGraphics.prototype\n   * @type {Property|undefined}\n   */\n  disableDepthTestDistance: createPropertyDescriptor(\"disableDepthTestDistance\")\n});\n\n/**\n * Duplicates this instance.\n *\n * @param {LabelGraphics} [result] The object onto which to store the result.\n * @returns {LabelGraphics} The modified result parameter or a new instance if one was not provided.\n */\nLabelGraphics.prototype.clone = function (result) {\n  if (!defined(result)) {\n    return new LabelGraphics(this);\n  }\n  result.show = this.show;\n  result.text = this.text;\n  result.font = this.font;\n  result.style = this.style;\n  result.scale = this.scale;\n  result.showBackground = this.showBackground;\n  result.backgroundColor = this.backgroundColor;\n  result.backgroundPadding = this.backgroundPadding;\n  result.pixelOffset = this.pixelOffset;\n  result.eyeOffset = this.eyeOffset;\n  result.horizontalOrigin = this.horizontalOrigin;\n  result.verticalOrigin = this.verticalOrigin;\n  result.heightReference = this.heightReference;\n  result.fillColor = this.fillColor;\n  result.outlineColor = this.outlineColor;\n  result.outlineWidth = this.outlineWidth;\n  result.translucencyByDistance = this.translucencyByDistance;\n  result.pixelOffsetScaleByDistance = this.pixelOffsetScaleByDistance;\n  result.scaleByDistance = this.scaleByDistance;\n  result.distanceDisplayCondition = this.distanceDisplayCondition;\n  result.disableDepthTestDistance = this.disableDepthTestDistance;\n  return result;\n};\n\n/**\n * Assigns each unassigned property on this object to the value\n * of the same property on the provided source object.\n *\n * @param {LabelGraphics} source The object to be merged into this object.\n */\nLabelGraphics.prototype.merge = function (source) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(source)) {\n    throw new DeveloperError(\"source is required.\");\n  }\n  //>>includeEnd('debug');\n\n  this.show = defaultValue(this.show, source.show);\n  this.text = defaultValue(this.text, source.text);\n  this.font = defaultValue(this.font, source.font);\n  this.style = defaultValue(this.style, source.style);\n  this.scale = defaultValue(this.scale, source.scale);\n  this.showBackground = defaultValue(this.showBackground, source.showBackground);\n  this.backgroundColor = defaultValue(this.backgroundColor, source.backgroundColor);\n  this.backgroundPadding = defaultValue(this.backgroundPadding, source.backgroundPadding);\n  this.pixelOffset = defaultValue(this.pixelOffset, source.pixelOffset);\n  this.eyeOffset = defaultValue(this.eyeOffset, source.eyeOffset);\n  this.horizontalOrigin = defaultValue(this.horizontalOrigin, source.horizontalOrigin);\n  this.verticalOrigin = defaultValue(this.verticalOrigin, source.verticalOrigin);\n  this.heightReference = defaultValue(this.heightReference, source.heightReference);\n  this.fillColor = defaultValue(this.fillColor, source.fillColor);\n  this.outlineColor = defaultValue(this.outlineColor, source.outlineColor);\n  this.outlineWidth = defaultValue(this.outlineWidth, source.outlineWidth);\n  this.translucencyByDistance = defaultValue(this.translucencyByDistance, source.translucencyByDistance);\n  this.pixelOffsetScaleByDistance = defaultValue(this.pixelOffsetScaleByDistance, source.pixelOffsetScaleByDistance);\n  this.scaleByDistance = defaultValue(this.scaleByDistance, source.scaleByDistance);\n  this.distanceDisplayCondition = defaultValue(this.distanceDisplayCondition, source.distanceDisplayCondition);\n  this.disableDepthTestDistance = defaultValue(this.disableDepthTestDistance, source.disableDepthTestDistance);\n};\nexport default LabelGraphics;","map":{"version":3,"names":["defaultValue","defined","DeveloperError","Event","createPropertyDescriptor","LabelGraphics","options","_definitionChanged","_show","undefined","_showSubscription","_text","_textSubscription","_font","_fontSubscription","_style","_styleSubscription","_scale","_scaleSubscription","_showBackground","_showBackgroundSubscription","_backgroundColor","_backgroundColorSubscription","_backgroundPadding","_backgroundPaddingSubscription","_pixelOffset","_pixelOffsetSubscription","_eyeOffset","_eyeOffsetSubscription","_horizontalOrigin","_horizontalOriginSubscription","_verticalOrigin","_verticalOriginSubscription","_heightReference","_heightReferenceSubscription","_fillColor","_fillColorSubscription","_outlineColor","_outlineColorSubscription","_outlineWidth","_outlineWidthSubscription","_translucencyByDistance","_translucencyByDistanceSubscription","_pixelOffsetScaleByDistance","_pixelOffsetScaleByDistanceSubscription","_scaleByDistance","_scaleByDistanceSubscription","_distanceDisplayCondition","_distanceDisplayConditionSubscription","_disableDepthTestDistance","_disableDepthTestDistanceSubscription","merge","EMPTY_OBJECT","Object","defineProperties","prototype","definitionChanged","get","show","text","font","style","scale","showBackground","backgroundColor","backgroundPadding","pixelOffset","eyeOffset","horizontalOrigin","verticalOrigin","heightReference","fillColor","outlineColor","outlineWidth","translucencyByDistance","pixelOffsetScaleByDistance","scaleByDistance","distanceDisplayCondition","disableDepthTestDistance","clone","result","source"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/engine/Source/DataSources/LabelGraphics.js"],"sourcesContent":["import defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport Event from \"../Core/Event.js\";\nimport createPropertyDescriptor from \"./createPropertyDescriptor.js\";\n\n/**\n * @typedef {object} LabelGraphics.ConstructorOptions\n *\n * Initialization options for the LabelGraphics constructor\n *\n * @property {Property | boolean} [show=true] A boolean Property specifying the visibility of the label.\n * @property {Property | string} [text] A Property specifying the text. Explicit newlines '\\n' are supported.\n * @property {Property | string} [font='30px sans-serif'] A Property specifying the CSS font.\n * @property {Property | LabelStyle} [style=LabelStyle.FILL] A Property specifying the {@link LabelStyle}.\n * @property {Property | number} [scale=1.0] A numeric Property specifying the scale to apply to the text.\n * @property {Property | boolean} [showBackground=false] A boolean Property specifying the visibility of the background behind the label.\n * @property {Property | Color} [backgroundColor=new Color(0.165, 0.165, 0.165, 0.8)] A Property specifying the background {@link Color}.\n * @property {Property | Cartesian2} [backgroundPadding=new Cartesian2(7, 5)] A {@link Cartesian2} Property specifying the horizontal and vertical background padding in pixels.\n * @property {Property | Cartesian2} [pixelOffset=Cartesian2.ZERO] A {@link Cartesian2} Property specifying the pixel offset.\n * @property {Property | Cartesian3} [eyeOffset=Cartesian3.ZERO] A {@link Cartesian3} Property specifying the eye offset.\n * @property {Property | HorizontalOrigin} [horizontalOrigin=HorizontalOrigin.CENTER] A Property specifying the {@link HorizontalOrigin}.\n * @property {Property | VerticalOrigin} [verticalOrigin=VerticalOrigin.CENTER] A Property specifying the {@link VerticalOrigin}.\n * @property {Property | HeightReference} [heightReference=HeightReference.NONE] A Property specifying what the height is relative to.\n * @property {Property | Color} [fillColor=Color.WHITE] A Property specifying the fill {@link Color}.\n * @property {Property | Color} [outlineColor=Color.BLACK] A Property specifying the outline {@link Color}.\n * @property {Property | number} [outlineWidth=1.0] A numeric Property specifying the outline width.\n * @property {Property | NearFarScalar} [translucencyByDistance] A {@link NearFarScalar} Property used to set translucency based on distance from the camera.\n * @property {Property | NearFarScalar} [pixelOffsetScaleByDistance] A {@link NearFarScalar} Property used to set pixelOffset based on distance from the camera.\n * @property {Property | NearFarScalar} [scaleByDistance] A {@link NearFarScalar} Property used to set scale based on distance from the camera.\n * @property {Property | DistanceDisplayCondition} [distanceDisplayCondition] A Property specifying at what distance from the camera that this label will be displayed.\n * @property {Property | number} [disableDepthTestDistance] A Property specifying the distance from the camera at which to disable the depth test to.\n */\n\n/**\n * Describes a two dimensional label located at the position of the containing {@link Entity}.\n * <p>\n * <div align='center'>\n * <img src='Images/Label.png' width='400' height='300' /><br />\n * Example labels\n * </div>\n * </p>\n *\n * @alias LabelGraphics\n * @constructor\n *\n * @param {LabelGraphics.ConstructorOptions} [options] Object describing initialization options\n *\n * @demo {@link https://sandcastle.cesium.com/index.html?src=Labels.html|Cesium Sandcastle Labels Demo}\n */\nfunction LabelGraphics(options) {\n  this._definitionChanged = new Event();\n  this._show = undefined;\n  this._showSubscription = undefined;\n  this._text = undefined;\n  this._textSubscription = undefined;\n  this._font = undefined;\n  this._fontSubscription = undefined;\n  this._style = undefined;\n  this._styleSubscription = undefined;\n  this._scale = undefined;\n  this._scaleSubscription = undefined;\n  this._showBackground = undefined;\n  this._showBackgroundSubscription = undefined;\n  this._backgroundColor = undefined;\n  this._backgroundColorSubscription = undefined;\n  this._backgroundPadding = undefined;\n  this._backgroundPaddingSubscription = undefined;\n  this._pixelOffset = undefined;\n  this._pixelOffsetSubscription = undefined;\n  this._eyeOffset = undefined;\n  this._eyeOffsetSubscription = undefined;\n  this._horizontalOrigin = undefined;\n  this._horizontalOriginSubscription = undefined;\n  this._verticalOrigin = undefined;\n  this._verticalOriginSubscription = undefined;\n  this._heightReference = undefined;\n  this._heightReferenceSubscription = undefined;\n  this._fillColor = undefined;\n  this._fillColorSubscription = undefined;\n  this._outlineColor = undefined;\n  this._outlineColorSubscription = undefined;\n  this._outlineWidth = undefined;\n  this._outlineWidthSubscription = undefined;\n  this._translucencyByDistance = undefined;\n  this._translucencyByDistanceSubscription = undefined;\n  this._pixelOffsetScaleByDistance = undefined;\n  this._pixelOffsetScaleByDistanceSubscription = undefined;\n  this._scaleByDistance = undefined;\n  this._scaleByDistanceSubscription = undefined;\n  this._distanceDisplayCondition = undefined;\n  this._distanceDisplayConditionSubscription = undefined;\n  this._disableDepthTestDistance = undefined;\n  this._disableDepthTestDistanceSubscription = undefined;\n\n  this.merge(defaultValue(options, defaultValue.EMPTY_OBJECT));\n}\n\nObject.defineProperties(LabelGraphics.prototype, {\n  /**\n   * Gets the event that is raised whenever a property or sub-property is changed or modified.\n   * @memberof LabelGraphics.prototype\n   *\n   * @type {Event}\n   * @readonly\n   */\n  definitionChanged: {\n    get: function () {\n      return this._definitionChanged;\n    },\n  },\n\n  /**\n   * Gets or sets the boolean Property specifying the visibility of the label.\n   * @memberof LabelGraphics.prototype\n   * @type {Property|undefined}\n   */\n  show: createPropertyDescriptor(\"show\"),\n\n  /**\n   * Gets or sets the string Property specifying the text of the label.\n   * Explicit newlines '\\n' are supported.\n   * @memberof LabelGraphics.prototype\n   * @type {Property|undefined}\n   */\n  text: createPropertyDescriptor(\"text\"),\n\n  /**\n   * Gets or sets the string Property specifying the font in CSS syntax.\n   * @memberof LabelGraphics.prototype\n   * @type {Property|undefined}\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/CSS/font|CSS font on MDN}\n   */\n  font: createPropertyDescriptor(\"font\"),\n\n  /**\n   * Gets or sets the Property specifying the {@link LabelStyle}.\n   * @memberof LabelGraphics.prototype\n   * @type {Property|undefined}\n   */\n  style: createPropertyDescriptor(\"style\"),\n\n  /**\n   * Gets or sets the numeric Property specifying the uniform scale to apply to the image.\n   * A scale greater than <code>1.0</code> enlarges the label while a scale less than <code>1.0</code> shrinks it.\n   * <p>\n   * <div align='center'>\n   * <img src='Images/Label.setScale.png' width='400' height='300' /><br/>\n   * From left to right in the above image, the scales are <code>0.5</code>, <code>1.0</code>,\n   * and <code>2.0</code>.\n   * </div>\n   * </p>\n   * @memberof LabelGraphics.prototype\n   * @type {Property|undefined}\n   * @default 1.0\n   */\n  scale: createPropertyDescriptor(\"scale\"),\n\n  /**\n   * Gets or sets the boolean Property specifying the visibility of the background behind the label.\n   * @memberof LabelGraphics.prototype\n   * @type {Property|undefined}\n   * @default false\n   */\n  showBackground: createPropertyDescriptor(\"showBackground\"),\n\n  /**\n   * Gets or sets the Property specifying the background {@link Color}.\n   * @memberof LabelGraphics.prototype\n   * @type {Property|undefined}\n   * @default new Color(0.165, 0.165, 0.165, 0.8)\n   */\n  backgroundColor: createPropertyDescriptor(\"backgroundColor\"),\n\n  /**\n   * Gets or sets the {@link Cartesian2} Property specifying the label's horizontal and vertical\n   * background padding in pixels.\n   * @memberof LabelGraphics.prototype\n   * @type {Property|undefined}\n   * @default new Cartesian2(7, 5)\n   */\n  backgroundPadding: createPropertyDescriptor(\"backgroundPadding\"),\n\n  /**\n   * Gets or sets the {@link Cartesian2} Property specifying the label's pixel offset in screen space\n   * from the origin of this label.  This is commonly used to align multiple labels and labels at\n   * the same position, e.g., an image and text.  The screen space origin is the top, left corner of the\n   * canvas; <code>x</code> increases from left to right, and <code>y</code> increases from top to bottom.\n   * <p>\n   * <div align='center'>\n   * <table border='0' cellpadding='5'><tr>\n   * <td align='center'><code>default</code><br/><img src='Images/Label.setPixelOffset.default.png' width='250' height='188' /></td>\n   * <td align='center'><code>l.pixeloffset = new Cartesian2(25, 75);</code><br/><img src='Images/Label.setPixelOffset.x50y-25.png' width='250' height='188' /></td>\n   * </tr></table>\n   * The label's origin is indicated by the yellow point.\n   * </div>\n   * </p>\n   * @memberof LabelGraphics.prototype\n   * @type {Property|undefined}\n   * @default Cartesian2.ZERO\n   */\n  pixelOffset: createPropertyDescriptor(\"pixelOffset\"),\n\n  /**\n   * Gets or sets the {@link Cartesian3} Property specifying the label's offset in eye coordinates.\n   * Eye coordinates is a left-handed coordinate system, where <code>x</code> points towards the viewer's\n   * right, <code>y</code> points up, and <code>z</code> points into the screen.\n   * <p>\n   * An eye offset is commonly used to arrange multiple labels or objects at the same position, e.g., to\n   * arrange a label above its corresponding 3D model.\n   * </p>\n   * Below, the label is positioned at the center of the Earth but an eye offset makes it always\n   * appear on top of the Earth regardless of the viewer's or Earth's orientation.\n   * <p>\n   * <div align='center'>\n   * <table border='0' cellpadding='5'><tr>\n   * <td align='center'><img src='Images/Billboard.setEyeOffset.one.png' width='250' height='188' /></td>\n   * <td align='center'><img src='Images/Billboard.setEyeOffset.two.png' width='250' height='188' /></td>\n   * </tr></table>\n   * <code>l.eyeOffset = new Cartesian3(0.0, 8000000.0, 0.0);</code><br /><br />\n   * </div>\n   * </p>\n   * @memberof LabelGraphics.prototype\n   * @type {Property|undefined}\n   * @default Cartesian3.ZERO\n   */\n  eyeOffset: createPropertyDescriptor(\"eyeOffset\"),\n\n  /**\n   * Gets or sets the Property specifying the {@link HorizontalOrigin}.\n   * @memberof LabelGraphics.prototype\n   * @type {Property|undefined}\n   */\n  horizontalOrigin: createPropertyDescriptor(\"horizontalOrigin\"),\n\n  /**\n   * Gets or sets the Property specifying the {@link VerticalOrigin}.\n   * @memberof LabelGraphics.prototype\n   * @type {Property|undefined}\n   */\n  verticalOrigin: createPropertyDescriptor(\"verticalOrigin\"),\n\n  /**\n   * Gets or sets the Property specifying the {@link HeightReference}.\n   * @memberof LabelGraphics.prototype\n   * @type {Property|undefined}\n   * @default HeightReference.NONE\n   */\n  heightReference: createPropertyDescriptor(\"heightReference\"),\n\n  /**\n   * Gets or sets the Property specifying the fill {@link Color}.\n   * @memberof LabelGraphics.prototype\n   * @type {Property|undefined}\n   */\n  fillColor: createPropertyDescriptor(\"fillColor\"),\n\n  /**\n   * Gets or sets the Property specifying the outline {@link Color}.\n   * @memberof LabelGraphics.prototype\n   * @type {Property|undefined}\n   */\n  outlineColor: createPropertyDescriptor(\"outlineColor\"),\n\n  /**\n   * Gets or sets the numeric Property specifying the outline width.\n   * @memberof LabelGraphics.prototype\n   * @type {Property|undefined}\n   */\n  outlineWidth: createPropertyDescriptor(\"outlineWidth\"),\n\n  /**\n   * Gets or sets {@link NearFarScalar} Property specifying the translucency of the label based on the distance from the camera.\n   * A label's translucency will interpolate between the {@link NearFarScalar#nearValue} and\n   * {@link NearFarScalar#farValue} while the camera distance falls within the lower and upper bounds\n   * of the specified {@link NearFarScalar#near} and {@link NearFarScalar#far}.\n   * Outside of these ranges the label's translucency remains clamped to the nearest bound.\n   * @memberof LabelGraphics.prototype\n   * @type {Property|undefined}\n   */\n  translucencyByDistance: createPropertyDescriptor(\"translucencyByDistance\"),\n\n  /**\n   * Gets or sets {@link NearFarScalar} Property specifying the pixel offset of the label based on the distance from the camera.\n   * A label's pixel offset will interpolate between the {@link NearFarScalar#nearValue} and\n   * {@link NearFarScalar#farValue} while the camera distance falls within the lower and upper bounds\n   * of the specified {@link NearFarScalar#near} and {@link NearFarScalar#far}.\n   * Outside of these ranges the label's pixel offset remains clamped to the nearest bound.\n   * @memberof LabelGraphics.prototype\n   * @type {Property|undefined}\n   */\n  pixelOffsetScaleByDistance: createPropertyDescriptor(\n    \"pixelOffsetScaleByDistance\",\n  ),\n\n  /**\n   * Gets or sets near and far scaling properties of a Label based on the label's distance from the camera.\n   * A label's scale will interpolate between the {@link NearFarScalar#nearValue} and\n   * {@link NearFarScalar#farValue} while the camera distance falls within the lower and upper bounds\n   * of the specified {@link NearFarScalar#near} and {@link NearFarScalar#far}.\n   * Outside of these ranges the label's scale remains clamped to the nearest bound.  If undefined,\n   * scaleByDistance will be disabled.\n   * @memberof LabelGraphics.prototype\n   * @type {Property|undefined}\n   */\n  scaleByDistance: createPropertyDescriptor(\"scaleByDistance\"),\n\n  /**\n   * Gets or sets the {@link DistanceDisplayCondition} Property specifying at what distance from the camera that this label will be displayed.\n   * @memberof LabelGraphics.prototype\n   * @type {Property|undefined}\n   */\n  distanceDisplayCondition: createPropertyDescriptor(\n    \"distanceDisplayCondition\",\n  ),\n\n  /**\n   * Gets or sets the distance from the camera at which to disable the depth test to, for example, prevent clipping against terrain.\n   * When set to zero, the depth test is always applied. When set to Number.POSITIVE_INFINITY, the depth test is never applied.\n   * @memberof LabelGraphics.prototype\n   * @type {Property|undefined}\n   */\n  disableDepthTestDistance: createPropertyDescriptor(\n    \"disableDepthTestDistance\",\n  ),\n});\n\n/**\n * Duplicates this instance.\n *\n * @param {LabelGraphics} [result] The object onto which to store the result.\n * @returns {LabelGraphics} The modified result parameter or a new instance if one was not provided.\n */\nLabelGraphics.prototype.clone = function (result) {\n  if (!defined(result)) {\n    return new LabelGraphics(this);\n  }\n  result.show = this.show;\n  result.text = this.text;\n  result.font = this.font;\n  result.style = this.style;\n  result.scale = this.scale;\n  result.showBackground = this.showBackground;\n  result.backgroundColor = this.backgroundColor;\n  result.backgroundPadding = this.backgroundPadding;\n  result.pixelOffset = this.pixelOffset;\n  result.eyeOffset = this.eyeOffset;\n  result.horizontalOrigin = this.horizontalOrigin;\n  result.verticalOrigin = this.verticalOrigin;\n  result.heightReference = this.heightReference;\n  result.fillColor = this.fillColor;\n  result.outlineColor = this.outlineColor;\n  result.outlineWidth = this.outlineWidth;\n  result.translucencyByDistance = this.translucencyByDistance;\n  result.pixelOffsetScaleByDistance = this.pixelOffsetScaleByDistance;\n  result.scaleByDistance = this.scaleByDistance;\n  result.distanceDisplayCondition = this.distanceDisplayCondition;\n  result.disableDepthTestDistance = this.disableDepthTestDistance;\n  return result;\n};\n\n/**\n * Assigns each unassigned property on this object to the value\n * of the same property on the provided source object.\n *\n * @param {LabelGraphics} source The object to be merged into this object.\n */\nLabelGraphics.prototype.merge = function (source) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(source)) {\n    throw new DeveloperError(\"source is required.\");\n  }\n  //>>includeEnd('debug');\n\n  this.show = defaultValue(this.show, source.show);\n  this.text = defaultValue(this.text, source.text);\n  this.font = defaultValue(this.font, source.font);\n  this.style = defaultValue(this.style, source.style);\n  this.scale = defaultValue(this.scale, source.scale);\n  this.showBackground = defaultValue(\n    this.showBackground,\n    source.showBackground,\n  );\n  this.backgroundColor = defaultValue(\n    this.backgroundColor,\n    source.backgroundColor,\n  );\n  this.backgroundPadding = defaultValue(\n    this.backgroundPadding,\n    source.backgroundPadding,\n  );\n  this.pixelOffset = defaultValue(this.pixelOffset, source.pixelOffset);\n  this.eyeOffset = defaultValue(this.eyeOffset, source.eyeOffset);\n  this.horizontalOrigin = defaultValue(\n    this.horizontalOrigin,\n    source.horizontalOrigin,\n  );\n  this.verticalOrigin = defaultValue(\n    this.verticalOrigin,\n    source.verticalOrigin,\n  );\n  this.heightReference = defaultValue(\n    this.heightReference,\n    source.heightReference,\n  );\n  this.fillColor = defaultValue(this.fillColor, source.fillColor);\n  this.outlineColor = defaultValue(this.outlineColor, source.outlineColor);\n  this.outlineWidth = defaultValue(this.outlineWidth, source.outlineWidth);\n  this.translucencyByDistance = defaultValue(\n    this.translucencyByDistance,\n    source.translucencyByDistance,\n  );\n  this.pixelOffsetScaleByDistance = defaultValue(\n    this.pixelOffsetScaleByDistance,\n    source.pixelOffsetScaleByDistance,\n  );\n  this.scaleByDistance = defaultValue(\n    this.scaleByDistance,\n    source.scaleByDistance,\n  );\n  this.distanceDisplayCondition = defaultValue(\n    this.distanceDisplayCondition,\n    source.distanceDisplayCondition,\n  );\n  this.disableDepthTestDistance = defaultValue(\n    this.disableDepthTestDistance,\n    source.disableDepthTestDistance,\n  );\n};\nexport default LabelGraphics;\n"],"mappings":"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xD,wBAAwB,CAAC,MAAM,CAAC;EAEtC;AACF;AACA;AACA;AACA;EACEyD,KAAK,EAAEzD,wBAAwB,CAAC,OAAO,CAAC;EAExC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE0D,KAAK,EAAE1D,wBAAwB,CAAC,OAAO,CAAC;EAExC;AACF;AACA;AACA;AACA;AACA;EACE2D,cAAc,EAAE3D,wBAAwB,CAAC,gBAAgB,CAAC;EAE1D;AACF;AACA;AACA;AACA;AACA;EACE4D,eAAe,EAAE5D,wBAAwB,CAAC,iBAAiB,CAAC;EAE5D;AACF;AACA;AACA;AACA;AACA;AACA;EACE6D,iBAAiB,EAAE7D,wBAAwB,CAAC,mBAAmB,CAAC;EAEhE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE8D,WAAW,EAAE9D,wBAAwB,CAAC,aAAa,CAAC;EAEpD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE+D,SAAS,EAAE/D,wBAAwB,CAAC,WAAW,CAAC;EAEhD;AACF;AACA;AACA;AACA;EACEgE,gBAAgB,EAAEhE,wBAAwB,CAAC,kBAAkB,CAAC;EAE9D;AACF;AACA;AACA;AACA;EACEiE,cAAc,EAAEjE,wBAAwB,CAAC,gBAAgB,CAAC;EAE1D;AACF;AACA;AACA;AACA;AACA;EACEkE,eAAe,EAAElE,wBAAwB,CAAC,iBAAiB,CAAC;EAE5D;AACF;AACA;AACA;AACA;EACEmE,SAAS,EAAEnE,wBAAwB,CAAC,WAAW,CAAC;EAEhD;AACF;AACA;AACA;AACA;EACEoE,YAAY,EAAEpE,wBAAwB,CAAC,cAAc,CAAC;EAEtD;AACF;AACA;AACA;AACA;EACEqE,YAAY,EAAErE,wBAAwB,CAAC,cAAc,CAAC;EAEtD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEsE,sBAAsB,EAA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}