{"ast":null,"code":"import WebGLConstants from \"../Core/WebGLConstants.js\";\n\n/**\n * Determines how two pixels' values are combined.\n *\n * @enum {number}\n */\nconst BlendEquation = {\n  /**\n   * Pixel values are added componentwise.  This is used in additive blending for translucency.\n   *\n   * @type {number}\n   * @constant\n   */\n  ADD: WebGLConstants.FUNC_ADD,\n  /**\n   * Pixel values are subtracted componentwise (source - destination).  This is used in alpha blending for translucency.\n   *\n   * @type {number}\n   * @constant\n   */\n  SUBTRACT: WebGLConstants.FUNC_SUBTRACT,\n  /**\n   * Pixel values are subtracted componentwise (destination - source).\n   *\n   * @type {number}\n   * @constant\n   */\n  REVERSE_SUBTRACT: WebGLConstants.FUNC_REVERSE_SUBTRACT,\n  /**\n   * Pixel values are given to the minimum function (min(source, destination)).\n   *\n   * This equation operates on each pixel color component.\n   *\n   * @type {number}\n   * @constant\n   */\n  MIN: WebGLConstants.MIN,\n  /**\n   * Pixel values are given to the maximum function (max(source, destination)).\n   *\n   * This equation operates on each pixel color component.\n   *\n   * @type {number}\n   * @constant\n   */\n  MAX: WebGLConstants.MAX\n};\nexport default Object.freeze(BlendEquation);","map":{"version":3,"names":["WebGLConstants","BlendEquation","ADD","FUNC_ADD","SUBTRACT","FUNC_SUBTRACT","REVERSE_SUBTRACT","FUNC_REVERSE_SUBTRACT","MIN","MAX","Object","freeze"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/engine/Source/Scene/BlendEquation.js"],"sourcesContent":["import WebGLConstants from \"../Core/WebGLConstants.js\";\n\n/**\n * Determines how two pixels' values are combined.\n *\n * @enum {number}\n */\nconst BlendEquation = {\n  /**\n   * Pixel values are added componentwise.  This is used in additive blending for translucency.\n   *\n   * @type {number}\n   * @constant\n   */\n  ADD: WebGLConstants.FUNC_ADD,\n\n  /**\n   * Pixel values are subtracted componentwise (source - destination).  This is used in alpha blending for translucency.\n   *\n   * @type {number}\n   * @constant\n   */\n  SUBTRACT: WebGLConstants.FUNC_SUBTRACT,\n\n  /**\n   * Pixel values are subtracted componentwise (destination - source).\n   *\n   * @type {number}\n   * @constant\n   */\n  REVERSE_SUBTRACT: WebGLConstants.FUNC_REVERSE_SUBTRACT,\n\n  /**\n   * Pixel values are given to the minimum function (min(source, destination)).\n   *\n   * This equation operates on each pixel color component.\n   *\n   * @type {number}\n   * @constant\n   */\n  MIN: WebGLConstants.MIN,\n\n  /**\n   * Pixel values are given to the maximum function (max(source, destination)).\n   *\n   * This equation operates on each pixel color component.\n   *\n   * @type {number}\n   * @constant\n   */\n  MAX: WebGLConstants.MAX,\n};\nexport default Object.freeze(BlendEquation);\n"],"mappings":"AAAA,OAAOA,cAAc,MAAM,2BAA2B;;AAEtD;AACA;AACA;AACA;AACA;AACA,MAAMC,aAAa,GAAG;EACpB;AACF;AACA;AACA;AACA;AACA;EACEC,GAAG,EAAEF,cAAc,CAACG,QAAQ;EAE5B;AACF;AACA;AACA;AACA;AACA;EACEC,QAAQ,EAAEJ,cAAc,CAACK,aAAa;EAEtC;AACF;AACA;AACA;AACA;AACA;EACEC,gBAAgB,EAAEN,cAAc,CAACO,qBAAqB;EAEtD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACEC,GAAG,EAAER,cAAc,CAACQ,GAAG;EAEvB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACEC,GAAG,EAAET,cAAc,CAACS;AACtB,CAAC;AACD,eAAeC,MAAM,CAACC,MAAM,CAACV,aAAa,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}