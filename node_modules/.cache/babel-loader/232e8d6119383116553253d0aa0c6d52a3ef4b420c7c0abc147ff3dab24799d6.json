{"ast":null,"code":"import { Cartesian3, defined, destroyObject, DebugModelMatrixPrimitive, DeveloperError, PerformanceDisplay, Ray, Rectangle, ScreenSpaceEventHandler, ScreenSpaceEventType, TileCoordinatesImageryProvider } from \"@cesium/engine\";\nimport knockout from \"../ThirdParty/knockout.js\";\nimport createCommand from \"../createCommand.js\";\nfunction frustumStatisticsToString(statistics) {\n  let str;\n  if (defined(statistics)) {\n    str = \"Command Statistics\";\n    const com = statistics.commandsInFrustums;\n    for (const n in com) {\n      if (com.hasOwnProperty(n)) {\n        let num = parseInt(n, 10);\n        let s;\n        if (num === 7) {\n          s = \"1, 2 and 3\";\n        } else {\n          const f = [];\n          for (let i = 2; i >= 0; i--) {\n            const p = Math.pow(2, i);\n            if (num >= p) {\n              f.push(i + 1);\n              num -= p;\n            }\n          }\n          s = f.reverse().join(\" and \");\n        }\n        str += `<br>&nbsp;&nbsp;&nbsp;&nbsp;${com[n]} in frustum ${s}`;\n      }\n    }\n    str += `<br>Total: ${statistics.totalCommands}`;\n  }\n  return str;\n}\nfunction boundDepthFrustum(lower, upper, proposed) {\n  let bounded = Math.min(proposed, upper);\n  bounded = Math.max(bounded, lower);\n  return bounded;\n}\nconst scratchPickRay = new Ray();\nconst scratchPickCartesian = new Cartesian3();\n\n/**\n * The view model for {@link CesiumInspector}.\n * @alias CesiumInspectorViewModel\n * @constructor\n *\n * @param {Scene} scene The scene instance to use.\n * @param {Element} performanceContainer The instance to use for performance container.\n */\nfunction CesiumInspectorViewModel(scene, performanceContainer) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(scene)) {\n    throw new DeveloperError(\"scene is required\");\n  }\n  if (!defined(performanceContainer)) {\n    throw new DeveloperError(\"performanceContainer is required\");\n  }\n  //>>includeEnd('debug');\n\n  const that = this;\n  const canvas = scene.canvas;\n  const eventHandler = new ScreenSpaceEventHandler(canvas);\n  this._eventHandler = eventHandler;\n  this._scene = scene;\n  this._canvas = canvas;\n  this._primitive = undefined;\n  this._tile = undefined;\n  this._modelMatrixPrimitive = undefined;\n  this._performanceDisplay = undefined;\n  this._performanceContainer = performanceContainer;\n  const globe = this._scene.globe;\n  globe.depthTestAgainstTerrain = true;\n\n  /**\n   * Gets or sets the show frustums state.  This property is observable.\n   * @type {boolean}\n   * @default false\n   */\n  this.frustums = false;\n\n  /**\n   * Gets or sets the show frustum planes state.  This property is observable.\n   * @type {boolean}\n   * @default false\n   */\n  this.frustumPlanes = false;\n\n  /**\n   * Gets or sets the show performance display state.  This property is observable.\n   * @type {boolean}\n   * @default false\n   */\n  this.performance = false;\n\n  /**\n   * Gets or sets the shader cache text.  This property is observable.\n   * @type {string}\n   * @default ''\n   */\n  this.shaderCacheText = \"\";\n\n  /**\n   * Gets or sets the show primitive bounding sphere state.  This property is observable.\n   * @type {boolean}\n   * @default false\n   */\n  this.primitiveBoundingSphere = false;\n\n  /**\n   * Gets or sets the show primitive reference frame state.  This property is observable.\n   * @type {boolean}\n   * @default false\n   */\n  this.primitiveReferenceFrame = false;\n\n  /**\n   * Gets or sets the filter primitive state.  This property is observable.\n   * @type {boolean}\n   * @default false\n   */\n  this.filterPrimitive = false;\n\n  /**\n   * Gets or sets the show tile bounding sphere state.  This property is observable.\n   * @type {boolean}\n   * @default false\n   */\n  this.tileBoundingSphere = false;\n\n  /**\n   * Gets or sets the filter tile state.  This property is observable.\n   * @type {boolean}\n   * @default false\n   */\n  this.filterTile = false;\n\n  /**\n   * Gets or sets the show wireframe state.  This property is observable.\n   * @type {boolean}\n   * @default false\n   */\n  this.wireframe = false;\n\n  /**\n   * Gets or sets the index of the depth frustum to display.  This property is observable.\n   * @type {number}\n   * @default 1\n   */\n  this.depthFrustum = 1;\n  this._numberOfFrustums = 1;\n\n  /**\n   * Gets or sets the suspend updates state.  This property is observable.\n   * @type {boolean}\n   * @default false\n   */\n  this.suspendUpdates = false;\n\n  /**\n   * Gets or sets the show tile coordinates state.  This property is observable.\n   * @type {boolean}\n   * @default false\n   */\n  this.tileCoordinates = false;\n\n  /**\n   * Gets or sets the frustum statistic text.  This property is observable.\n   * @type {string}\n   * @default ''\n   */\n  this.frustumStatisticText = false;\n\n  /**\n   * Gets or sets the selected tile information text.  This property is observable.\n   * @type {string}\n   * @default ''\n   */\n  this.tileText = \"\";\n\n  /**\n   * Gets if a primitive has been selected.  This property is observable.\n   * @type {boolean}\n   * @default false\n   */\n  this.hasPickedPrimitive = false;\n\n  /**\n   * Gets if a tile has been selected.  This property is observable\n   * @type {boolean}\n   * @default false\n   */\n  this.hasPickedTile = false;\n\n  /**\n   * Gets if the picking primitive command is active.  This property is observable.\n   * @type {boolean}\n   * @default false\n   */\n  this.pickPrimitiveActive = false;\n\n  /**\n   * Gets if the picking tile command is active.  This property is observable.\n   * @type {boolean}\n   * @default false\n   */\n  this.pickTileActive = false;\n\n  /**\n   * Gets or sets if the cesium inspector drop down is visible.  This property is observable.\n   * @type {boolean}\n   * @default true\n   */\n  this.dropDownVisible = true;\n\n  /**\n   * Gets or sets if the general section is visible.  This property is observable.\n   * @type {boolean}\n   * @default true\n   */\n  this.generalVisible = true;\n\n  /**\n   * Gets or sets if the primitive section is visible.  This property is observable.\n   * @type {boolean}\n   * @default false\n   */\n  this.primitivesVisible = false;\n\n  /**\n   * Gets or sets if the terrain section is visible.  This property is observable.\n   * @type {boolean}\n   * @default false\n   */\n  this.terrainVisible = false;\n\n  /**\n   * Gets or sets the index of the depth frustum text.  This property is observable.\n   * @type {string}\n   * @default ''\n   */\n  this.depthFrustumText = \"\";\n  knockout.track(this, [\"frustums\", \"frustumPlanes\", \"performance\", \"shaderCacheText\", \"primitiveBoundingSphere\", \"primitiveReferenceFrame\", \"filterPrimitive\", \"tileBoundingSphere\", \"filterTile\", \"wireframe\", \"depthFrustum\", \"suspendUpdates\", \"tileCoordinates\", \"frustumStatisticText\", \"tileText\", \"hasPickedPrimitive\", \"hasPickedTile\", \"pickPrimitiveActive\", \"pickTileActive\", \"dropDownVisible\", \"generalVisible\", \"primitivesVisible\", \"terrainVisible\", \"depthFrustumText\"]);\n  this._toggleDropDown = createCommand(function () {\n    that.dropDownVisible = !that.dropDownVisible;\n  });\n  this._toggleGeneral = createCommand(function () {\n    that.generalVisible = !that.generalVisible;\n  });\n  this._togglePrimitives = createCommand(function () {\n    that.primitivesVisible = !that.primitivesVisible;\n  });\n  this._toggleTerrain = createCommand(function () {\n    that.terrainVisible = !that.terrainVisible;\n  });\n  this._frustumsSubscription = knockout.getObservable(this, \"frustums\").subscribe(function (val) {\n    that._scene.debugShowFrustums = val;\n    that._scene.requestRender();\n  });\n  this._frustumPlanesSubscription = knockout.getObservable(this, \"frustumPlanes\").subscribe(function (val) {\n    that._scene.debugShowFrustumPlanes = val;\n    that._scene.requestRender();\n  });\n  this._performanceSubscription = knockout.getObservable(this, \"performance\").subscribe(function (val) {\n    if (val) {\n      that._performanceDisplay = new PerformanceDisplay({\n        container: that._performanceContainer\n      });\n    } else {\n      that._performanceContainer.innerHTML = \"\";\n    }\n  });\n  this._showPrimitiveBoundingSphere = createCommand(function () {\n    that._primitive.debugShowBoundingVolume = that.primitiveBoundingSphere;\n    that._scene.requestRender();\n    return true;\n  });\n  this._primitiveBoundingSphereSubscription = knockout.getObservable(this, \"primitiveBoundingSphere\").subscribe(function () {\n    that._showPrimitiveBoundingSphere();\n  });\n  this._showPrimitiveReferenceFrame = createCommand(function () {\n    if (that.primitiveReferenceFrame) {\n      const modelMatrix = that._primitive.modelMatrix;\n      that._modelMatrixPrimitive = new DebugModelMatrixPrimitive({\n        modelMatrix: modelMatrix\n      });\n      that._scene.primitives.add(that._modelMatrixPrimitive);\n    } else if (defined(that._modelMatrixPrimitive)) {\n      that._scene.primitives.remove(that._modelMatrixPrimitive);\n      that._modelMatrixPrimitive = undefined;\n    }\n    that._scene.requestRender();\n    return true;\n  });\n  this._primitiveReferenceFrameSubscription = knockout.getObservable(this, \"primitiveReferenceFrame\").subscribe(function () {\n    that._showPrimitiveReferenceFrame();\n  });\n  this._doFilterPrimitive = createCommand(function () {\n    if (that.filterPrimitive) {\n      that._scene.debugCommandFilter = function (command) {\n        if (defined(that._modelMatrixPrimitive) && command.owner === that._modelMatrixPrimitive._primitive) {\n          return true;\n        } else if (defined(that._primitive)) {\n          return command.owner === that._primitive || command.owner === that._primitive._billboardCollection || command.owner.primitive === that._primitive;\n        }\n        return false;\n      };\n    } else {\n      that._scene.debugCommandFilter = undefined;\n    }\n    return true;\n  });\n  this._filterPrimitiveSubscription = knockout.getObservable(this, \"filterPrimitive\").subscribe(function () {\n    that._doFilterPrimitive();\n    that._scene.requestRender();\n  });\n  this._wireframeSubscription = knockout.getObservable(this, \"wireframe\").subscribe(function (val) {\n    globe._surface.tileProvider._debug.wireframe = val;\n    that._scene.requestRender();\n  });\n  this._depthFrustumSubscription = knockout.getObservable(this, \"depthFrustum\").subscribe(function (val) {\n    that._scene.debugShowDepthFrustum = val;\n    that._scene.requestRender();\n  });\n  this._incrementDepthFrustum = createCommand(function () {\n    const next = that.depthFrustum + 1;\n    that.depthFrustum = boundDepthFrustum(1, that._numberOfFrustums, next);\n    that._scene.requestRender();\n    return true;\n  });\n  this._decrementDepthFrustum = createCommand(function () {\n    const next = that.depthFrustum - 1;\n    that.depthFrustum = boundDepthFrustum(1, that._numberOfFrustums, next);\n    that._scene.requestRender();\n    return true;\n  });\n  this._suspendUpdatesSubscription = knockout.getObservable(this, \"suspendUpdates\").subscribe(function (val) {\n    globe._surface._debug.suspendLodUpdate = val;\n    if (!val) {\n      that.filterTile = false;\n    }\n  });\n  let tileBoundariesLayer;\n  this._showTileCoordinates = createCommand(function () {\n    if (that.tileCoordinates && !defined(tileBoundariesLayer)) {\n      tileBoundariesLayer = scene.imageryLayers.addImageryProvider(new TileCoordinatesImageryProvider({\n        tilingScheme: scene.terrainProvider.tilingScheme\n      }));\n    } else if (!that.tileCoordinates && defined(tileBoundariesLayer)) {\n      scene.imageryLayers.remove(tileBoundariesLayer);\n      tileBoundariesLayer = undefined;\n    }\n    return true;\n  });\n  this._tileCoordinatesSubscription = knockout.getObservable(this, \"tileCoordinates\").subscribe(function () {\n    that._showTileCoordinates();\n    that._scene.requestRender();\n  });\n  this._tileBoundingSphereSubscription = knockout.getObservable(this, \"tileBoundingSphere\").subscribe(function () {\n    that._showTileBoundingSphere();\n    that._scene.requestRender();\n  });\n  this._showTileBoundingSphere = createCommand(function () {\n    if (that.tileBoundingSphere) {\n      globe._surface.tileProvider._debug.boundingSphereTile = that._tile;\n    } else {\n      globe._surface.tileProvider._debug.boundingSphereTile = undefined;\n    }\n    that._scene.requestRender();\n    return true;\n  });\n  this._doFilterTile = createCommand(function () {\n    if (!that.filterTile) {\n      that.suspendUpdates = false;\n    } else {\n      that.suspendUpdates = true;\n      globe._surface._tilesToRender = [];\n      if (defined(that._tile) && that._tile.renderable) {\n        globe._surface._tilesToRender.push(that._tile);\n      }\n    }\n    return true;\n  });\n  this._filterTileSubscription = knockout.getObservable(this, \"filterTile\").subscribe(function () {\n    that.doFilterTile();\n    that._scene.requestRender();\n  });\n  function pickPrimitive(e) {\n    const newPick = that._scene.pick({\n      x: e.position.x,\n      y: e.position.y\n    });\n    if (defined(newPick)) {\n      that.primitive = defined(newPick.collection) ? newPick.collection : newPick.primitive;\n    }\n    that._scene.requestRender();\n    that.pickPrimitiveActive = false;\n  }\n  this._pickPrimitive = createCommand(function () {\n    that.pickPrimitiveActive = !that.pickPrimitiveActive;\n  });\n  this._pickPrimitiveActiveSubscription = knockout.getObservable(this, \"pickPrimitiveActive\").subscribe(function (val) {\n    if (val) {\n      eventHandler.setInputAction(pickPrimitive, ScreenSpaceEventType.LEFT_CLICK);\n    } else {\n      eventHandler.removeInputAction(ScreenSpaceEventType.LEFT_CLICK);\n    }\n  });\n  function selectTile(e) {\n    let selectedTile;\n    const ellipsoid = globe.ellipsoid;\n    const ray = that._scene.camera.getPickRay(e.position, scratchPickRay);\n    const cartesian = globe.pick(ray, that._scene, scratchPickCartesian);\n    if (defined(cartesian)) {\n      const cartographic = ellipsoid.cartesianToCartographic(cartesian);\n      const tilesRendered = globe._surface.tileProvider._tilesToRenderByTextureCount;\n      for (let textureCount = 0; !selectedTile && textureCount < tilesRendered.length; ++textureCount) {\n        const tilesRenderedByTextureCount = tilesRendered[textureCount];\n        if (!defined(tilesRenderedByTextureCount)) {\n          continue;\n        }\n        for (let tileIndex = 0; !selectedTile && tileIndex < tilesRenderedByTextureCount.length; ++tileIndex) {\n          const tile = tilesRenderedByTextureCount[tileIndex];\n          if (Rectangle.contains(tile.rectangle, cartographic)) {\n            selectedTile = tile;\n          }\n        }\n      }\n    }\n    that.tile = selectedTile;\n    that.pickTileActive = false;\n  }\n  this._pickTile = createCommand(function () {\n    that.pickTileActive = !that.pickTileActive;\n  });\n  this._pickTileActiveSubscription = knockout.getObservable(this, \"pickTileActive\").subscribe(function (val) {\n    if (val) {\n      eventHandler.setInputAction(selectTile, ScreenSpaceEventType.LEFT_CLICK);\n    } else {\n      eventHandler.removeInputAction(ScreenSpaceEventType.LEFT_CLICK);\n    }\n  });\n  this._removePostRenderEvent = scene.postRender.addEventListener(function () {\n    that._update();\n  });\n}\nObject.defineProperties(CesiumInspectorViewModel.prototype, {\n  /**\n   * Gets the scene to control.\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Scene}\n   */\n  scene: {\n    get: function () {\n      return this._scene;\n    }\n  },\n  /**\n   * Gets the container of the PerformanceDisplay\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Element}\n   */\n  performanceContainer: {\n    get: function () {\n      return this._performanceContainer;\n    }\n  },\n  /**\n   * Gets the command to toggle the visibility of the drop down.\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Command}\n   */\n  toggleDropDown: {\n    get: function () {\n      return this._toggleDropDown;\n    }\n  },\n  /**\n   * Gets the command to toggle the visibility of a BoundingSphere for a primitive\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Command}\n   */\n  showPrimitiveBoundingSphere: {\n    get: function () {\n      return this._showPrimitiveBoundingSphere;\n    }\n  },\n  /**\n   * Gets the command to toggle the visibility of a {@link DebugModelMatrixPrimitive} for the model matrix of a primitive\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Command}\n   */\n  showPrimitiveReferenceFrame: {\n    get: function () {\n      return this._showPrimitiveReferenceFrame;\n    }\n  },\n  /**\n   * Gets the command to toggle a filter that renders only a selected primitive\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Command}\n   */\n  doFilterPrimitive: {\n    get: function () {\n      return this._doFilterPrimitive;\n    }\n  },\n  /**\n   * Gets the command to increment the depth frustum index to be shown\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Command}\n   */\n  incrementDepthFrustum: {\n    get: function () {\n      return this._incrementDepthFrustum;\n    }\n  },\n  /**\n   * Gets the command to decrement the depth frustum index to be shown\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Command}\n   */\n  decrementDepthFrustum: {\n    get: function () {\n      return this._decrementDepthFrustum;\n    }\n  },\n  /**\n   * Gets the command to toggle the visibility of tile coordinates\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Command}\n   */\n  showTileCoordinates: {\n    get: function () {\n      return this._showTileCoordinates;\n    }\n  },\n  /**\n   * Gets the command to toggle the visibility of a BoundingSphere for a selected tile\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Command}\n   */\n  showTileBoundingSphere: {\n    get: function () {\n      return this._showTileBoundingSphere;\n    }\n  },\n  /**\n   * Gets the command to toggle a filter that renders only a selected tile\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Command}\n   */\n  doFilterTile: {\n    get: function () {\n      return this._doFilterTile;\n    }\n  },\n  /**\n   * Gets the command to expand and collapse the general section\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Command}\n   */\n  toggleGeneral: {\n    get: function () {\n      return this._toggleGeneral;\n    }\n  },\n  /**\n   * Gets the command to expand and collapse the primitives section\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Command}\n   */\n  togglePrimitives: {\n    get: function () {\n      return this._togglePrimitives;\n    }\n  },\n  /**\n   * Gets the command to expand and collapse the terrain section\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Command}\n   */\n  toggleTerrain: {\n    get: function () {\n      return this._toggleTerrain;\n    }\n  },\n  /**\n   * Gets the command to pick a primitive\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Command}\n   */\n  pickPrimitive: {\n    get: function () {\n      return this._pickPrimitive;\n    }\n  },\n  /**\n   * Gets the command to pick a tile\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Command}\n   */\n  pickTile: {\n    get: function () {\n      return this._pickTile;\n    }\n  },\n  /**\n   * Gets the command to pick a tile\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Command}\n   */\n  selectParent: {\n    get: function () {\n      const that = this;\n      return createCommand(function () {\n        that.tile = that.tile.parent;\n      });\n    }\n  },\n  /**\n   * Gets the command to pick a tile\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Command}\n   */\n  selectNW: {\n    get: function () {\n      const that = this;\n      return createCommand(function () {\n        that.tile = that.tile.northwestChild;\n      });\n    }\n  },\n  /**\n   * Gets the command to pick a tile\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Command}\n   */\n  selectNE: {\n    get: function () {\n      const that = this;\n      return createCommand(function () {\n        that.tile = that.tile.northeastChild;\n      });\n    }\n  },\n  /**\n   * Gets the command to pick a tile\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Command}\n   */\n  selectSW: {\n    get: function () {\n      const that = this;\n      return createCommand(function () {\n        that.tile = that.tile.southwestChild;\n      });\n    }\n  },\n  /**\n   * Gets the command to pick a tile\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Command}\n   */\n  selectSE: {\n    get: function () {\n      const that = this;\n      return createCommand(function () {\n        that.tile = that.tile.southeastChild;\n      });\n    }\n  },\n  /**\n   * Gets or sets the current selected primitive\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Command}\n   */\n  primitive: {\n    get: function () {\n      return this._primitive;\n    },\n    set: function (newPrimitive) {\n      const oldPrimitive = this._primitive;\n      if (newPrimitive !== oldPrimitive) {\n        this.hasPickedPrimitive = true;\n        if (defined(oldPrimitive)) {\n          oldPrimitive.debugShowBoundingVolume = false;\n        }\n        this._scene.debugCommandFilter = undefined;\n        if (defined(this._modelMatrixPrimitive)) {\n          this._scene.primitives.remove(this._modelMatrixPrimitive);\n          this._modelMatrixPrimitive = undefined;\n        }\n        this._primitive = newPrimitive;\n        newPrimitive.show = false;\n        setTimeout(function () {\n          newPrimitive.show = true;\n        }, 50);\n        this.showPrimitiveBoundingSphere();\n        this.showPrimitiveReferenceFrame();\n        this.doFilterPrimitive();\n      }\n    }\n  },\n  /**\n   * Gets or sets the current selected tile\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Command}\n   */\n  tile: {\n    get: function () {\n      return this._tile;\n    },\n    set: function (newTile) {\n      if (defined(newTile)) {\n        this.hasPickedTile = true;\n        const oldTile = this._tile;\n        if (newTile !== oldTile) {\n          this.tileText = `L: ${newTile.level} X: ${newTile.x} Y: ${newTile.y}`;\n          this.tileText += `<br>SW corner: ${newTile.rectangle.west}, ${newTile.rectangle.south}`;\n          this.tileText += `<br>NE corner: ${newTile.rectangle.east}, ${newTile.rectangle.north}`;\n          const data = newTile.data;\n          if (defined(data) && defined(data.tileBoundingRegion)) {\n            this.tileText += `<br>Min: ${data.tileBoundingRegion.minimumHeight} Max: ${data.tileBoundingRegion.maximumHeight}`;\n          } else {\n            this.tileText += \"<br>(Tile is not loaded)\";\n          }\n        }\n        this._tile = newTile;\n        this.showTileBoundingSphere();\n        this.doFilterTile();\n      } else {\n        this.hasPickedTile = false;\n        this._tile = undefined;\n      }\n    }\n  }\n});\n\n/**\n * Updates the view model\n * @private\n */\nCesiumInspectorViewModel.prototype._update = function () {\n  if (this.frustums) {\n    this.frustumStatisticText = frustumStatisticsToString(this._scene.debugFrustumStatistics);\n  }\n\n  // Determine the number of frustums being used.\n  const numberOfFrustums = this._scene.numberOfFrustums;\n  this._numberOfFrustums = numberOfFrustums;\n  // Bound the frustum to be displayed.\n  this.depthFrustum = boundDepthFrustum(1, numberOfFrustums, this.depthFrustum);\n  // Update the displayed text.\n  this.depthFrustumText = `${this.depthFrustum} of ${numberOfFrustums}`;\n  if (this.performance) {\n    this._performanceDisplay.update();\n  }\n  if (this.primitiveReferenceFrame) {\n    this._modelMatrixPrimitive.modelMatrix = this._primitive.modelMatrix;\n  }\n  this.shaderCacheText = `Cached shaders: ${this._scene.context.shaderCache.numberOfShaders}`;\n};\n\n/**\n * @returns {boolean} true if the object has been destroyed, false otherwise.\n */\nCesiumInspectorViewModel.prototype.isDestroyed = function () {\n  return false;\n};\n\n/**\n * Destroys the widget.  Should be called if permanently\n * removing the widget from layout.\n */\nCesiumInspectorViewModel.prototype.destroy = function () {\n  this._eventHandler.destroy();\n  this._removePostRenderEvent();\n  this._frustumsSubscription.dispose();\n  this._frustumPlanesSubscription.dispose();\n  this._performanceSubscription.dispose();\n  this._primitiveBoundingSphereSubscription.dispose();\n  this._primitiveReferenceFrameSubscription.dispose();\n  this._filterPrimitiveSubscription.dispose();\n  this._wireframeSubscription.dispose();\n  this._depthFrustumSubscription.dispose();\n  this._suspendUpdatesSubscription.dispose();\n  this._tileCoordinatesSubscription.dispose();\n  this._tileBoundingSphereSubscription.dispose();\n  this._filterTileSubscription.dispose();\n  this._pickPrimitiveActiveSubscription.dispose();\n  this._pickTileActiveSubscription.dispose();\n  return destroyObject(this);\n};\nexport default CesiumInspectorViewModel;","map":{"version":3,"names":["Cartesian3","defined","destroyObject","DebugModelMatrixPrimitive","DeveloperError","PerformanceDisplay","Ray","Rectangle","ScreenSpaceEventHandler","ScreenSpaceEventType","TileCoordinatesImageryProvider","knockout","createCommand","frustumStatisticsToString","statistics","str","com","commandsInFrustums","n","hasOwnProperty","num","parseInt","s","f","i","p","Math","pow","push","reverse","join","totalCommands","boundDepthFrustum","lower","upper","proposed","bounded","min","max","scratchPickRay","scratchPickCartesian","CesiumInspectorViewModel","scene","performanceContainer","that","canvas","eventHandler","_eventHandler","_scene","_canvas","_primitive","undefined","_tile","_modelMatrixPrimitive","_performanceDisplay","_performanceContainer","globe","depthTestAgainstTerrain","frustums","frustumPlanes","performance","shaderCacheText","primitiveBoundingSphere","primitiveReferenceFrame","filterPrimitive","tileBoundingSphere","filterTile","wireframe","depthFrustum","_numberOfFrustums","suspendUpdates","tileCoordinates","frustumStatisticText","tileText","hasPickedPrimitive","hasPickedTile","pickPrimitiveActive","pickTileActive","dropDownVisible","generalVisible","primitivesVisible","terrainVisible","depthFrustumText","track","_toggleDropDown","_toggleGeneral","_togglePrimitives","_toggleTerrain","_frustumsSubscription","getObservable","subscribe","val","debugShowFrustums","requestRender","_frustumPlanesSubscription","debugShowFrustumPlanes","_performanceSubscription","container","innerHTML","_showPrimitiveBoundingSphere","debugShowBoundingVolume","_primitiveBoundingSphereSubscription","_showPrimitiveReferenceFrame","modelMatrix","primitives","add","remove","_primitiveReferenceFrameSubscription","_doFilterPrimitive","debugCommandFilter","command","owner","_billboardCollection","primitive","_filterPrimitiveSubscription","_wireframeSubscription","_surface","tileProvider","_debug","_depthFrustumSubscription","debugShowDepthFrustum","_incrementDepthFrustum","next","_decrementDepthFrustum","_suspendUpdatesSubscription","suspendLodUpdate","tileBoundariesLayer","_showTileCoordinates","imageryLayers","addImageryProvider","tilingScheme","terrainProvider","_tileCoordinatesSubscription","_tileBoundingSphereSubscription","_showTileBoundingSphere","boundingSphereTile","_doFilterTile","_tilesToRender","renderable","_filterTileSubscription","doFilterTile","pickPrimitive","e","newPick","pick","x","position","y","collection","_pickPrimitive","_pickPrimitiveActiveSubscription","setInputAction","LEFT_CLICK","removeInputAction","selectTile","selectedTile","ellipsoid","ray","camera","getPickRay","cartesian","cartographic","cartesianToCartographic","tilesRendered","_tilesToRenderByTextureCount","textureCount","length","tilesRenderedByTextureCount","tileIndex","tile","contains","rectangle","_pickTile","_pickTileActiveSubscription","_removePostRenderEvent","postRender","addEventListener","_update","Object","defineProperties","prototype","get","toggleDropDown","showPrimitiveBoundingSphere","showPrimitiveReferenceFrame","doFilterPrimitive","incrementDepthFrustum","decrementDepthFrustum","showTileCoordinates","showTileBoundingSphere","toggleGeneral","togglePrimitives","toggleTerrain","pickTile","selectParent","parent","selectNW","northwestChild","selectNE","northeastChild","selectSW","southwestChild","selectSE","southeastChild","set","newPrimitive","oldPrimitive","show","setTimeout","newTile","oldTile","level","west","south","east","north","data","tileBoundingRegion","minimumHeight","maximumHeight","debugFrustumStatistics","numberOfFrustums","update","context","shaderCache","numberOfShaders","isDestroyed","destroy","dispose"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/widgets/Source/CesiumInspector/CesiumInspectorViewModel.js"],"sourcesContent":["import {\n  Cartesian3,\n  defined,\n  destroyObject,\n  DebugModelMatrixPrimitive,\n  DeveloperError,\n  PerformanceDisplay,\n  Ray,\n  Rectangle,\n  ScreenSpaceEventHandler,\n  ScreenSpaceEventType,\n  TileCoordinatesImageryProvider,\n} from \"@cesium/engine\";\nimport knockout from \"../ThirdParty/knockout.js\";\nimport createCommand from \"../createCommand.js\";\n\nfunction frustumStatisticsToString(statistics) {\n  let str;\n  if (defined(statistics)) {\n    str = \"Command Statistics\";\n    const com = statistics.commandsInFrustums;\n    for (const n in com) {\n      if (com.hasOwnProperty(n)) {\n        let num = parseInt(n, 10);\n        let s;\n        if (num === 7) {\n          s = \"1, 2 and 3\";\n        } else {\n          const f = [];\n          for (let i = 2; i >= 0; i--) {\n            const p = Math.pow(2, i);\n            if (num >= p) {\n              f.push(i + 1);\n              num -= p;\n            }\n          }\n          s = f.reverse().join(\" and \");\n        }\n        str += `<br>&nbsp;&nbsp;&nbsp;&nbsp;${com[n]} in frustum ${s}`;\n      }\n    }\n    str += `<br>Total: ${statistics.totalCommands}`;\n  }\n\n  return str;\n}\n\nfunction boundDepthFrustum(lower, upper, proposed) {\n  let bounded = Math.min(proposed, upper);\n  bounded = Math.max(bounded, lower);\n  return bounded;\n}\n\nconst scratchPickRay = new Ray();\nconst scratchPickCartesian = new Cartesian3();\n\n/**\n * The view model for {@link CesiumInspector}.\n * @alias CesiumInspectorViewModel\n * @constructor\n *\n * @param {Scene} scene The scene instance to use.\n * @param {Element} performanceContainer The instance to use for performance container.\n */\nfunction CesiumInspectorViewModel(scene, performanceContainer) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(scene)) {\n    throw new DeveloperError(\"scene is required\");\n  }\n\n  if (!defined(performanceContainer)) {\n    throw new DeveloperError(\"performanceContainer is required\");\n  }\n  //>>includeEnd('debug');\n\n  const that = this;\n  const canvas = scene.canvas;\n  const eventHandler = new ScreenSpaceEventHandler(canvas);\n  this._eventHandler = eventHandler;\n  this._scene = scene;\n  this._canvas = canvas;\n  this._primitive = undefined;\n  this._tile = undefined;\n  this._modelMatrixPrimitive = undefined;\n  this._performanceDisplay = undefined;\n  this._performanceContainer = performanceContainer;\n\n  const globe = this._scene.globe;\n  globe.depthTestAgainstTerrain = true;\n\n  /**\n   * Gets or sets the show frustums state.  This property is observable.\n   * @type {boolean}\n   * @default false\n   */\n  this.frustums = false;\n\n  /**\n   * Gets or sets the show frustum planes state.  This property is observable.\n   * @type {boolean}\n   * @default false\n   */\n  this.frustumPlanes = false;\n\n  /**\n   * Gets or sets the show performance display state.  This property is observable.\n   * @type {boolean}\n   * @default false\n   */\n  this.performance = false;\n\n  /**\n   * Gets or sets the shader cache text.  This property is observable.\n   * @type {string}\n   * @default ''\n   */\n  this.shaderCacheText = \"\";\n\n  /**\n   * Gets or sets the show primitive bounding sphere state.  This property is observable.\n   * @type {boolean}\n   * @default false\n   */\n  this.primitiveBoundingSphere = false;\n\n  /**\n   * Gets or sets the show primitive reference frame state.  This property is observable.\n   * @type {boolean}\n   * @default false\n   */\n  this.primitiveReferenceFrame = false;\n\n  /**\n   * Gets or sets the filter primitive state.  This property is observable.\n   * @type {boolean}\n   * @default false\n   */\n  this.filterPrimitive = false;\n\n  /**\n   * Gets or sets the show tile bounding sphere state.  This property is observable.\n   * @type {boolean}\n   * @default false\n   */\n  this.tileBoundingSphere = false;\n\n  /**\n   * Gets or sets the filter tile state.  This property is observable.\n   * @type {boolean}\n   * @default false\n   */\n  this.filterTile = false;\n\n  /**\n   * Gets or sets the show wireframe state.  This property is observable.\n   * @type {boolean}\n   * @default false\n   */\n  this.wireframe = false;\n\n  /**\n   * Gets or sets the index of the depth frustum to display.  This property is observable.\n   * @type {number}\n   * @default 1\n   */\n  this.depthFrustum = 1;\n  this._numberOfFrustums = 1;\n\n  /**\n   * Gets or sets the suspend updates state.  This property is observable.\n   * @type {boolean}\n   * @default false\n   */\n  this.suspendUpdates = false;\n\n  /**\n   * Gets or sets the show tile coordinates state.  This property is observable.\n   * @type {boolean}\n   * @default false\n   */\n  this.tileCoordinates = false;\n\n  /**\n   * Gets or sets the frustum statistic text.  This property is observable.\n   * @type {string}\n   * @default ''\n   */\n  this.frustumStatisticText = false;\n\n  /**\n   * Gets or sets the selected tile information text.  This property is observable.\n   * @type {string}\n   * @default ''\n   */\n  this.tileText = \"\";\n\n  /**\n   * Gets if a primitive has been selected.  This property is observable.\n   * @type {boolean}\n   * @default false\n   */\n  this.hasPickedPrimitive = false;\n\n  /**\n   * Gets if a tile has been selected.  This property is observable\n   * @type {boolean}\n   * @default false\n   */\n  this.hasPickedTile = false;\n\n  /**\n   * Gets if the picking primitive command is active.  This property is observable.\n   * @type {boolean}\n   * @default false\n   */\n  this.pickPrimitiveActive = false;\n\n  /**\n   * Gets if the picking tile command is active.  This property is observable.\n   * @type {boolean}\n   * @default false\n   */\n  this.pickTileActive = false;\n\n  /**\n   * Gets or sets if the cesium inspector drop down is visible.  This property is observable.\n   * @type {boolean}\n   * @default true\n   */\n  this.dropDownVisible = true;\n\n  /**\n   * Gets or sets if the general section is visible.  This property is observable.\n   * @type {boolean}\n   * @default true\n   */\n  this.generalVisible = true;\n\n  /**\n   * Gets or sets if the primitive section is visible.  This property is observable.\n   * @type {boolean}\n   * @default false\n   */\n  this.primitivesVisible = false;\n\n  /**\n   * Gets or sets if the terrain section is visible.  This property is observable.\n   * @type {boolean}\n   * @default false\n   */\n  this.terrainVisible = false;\n\n  /**\n   * Gets or sets the index of the depth frustum text.  This property is observable.\n   * @type {string}\n   * @default ''\n   */\n  this.depthFrustumText = \"\";\n\n  knockout.track(this, [\n    \"frustums\",\n    \"frustumPlanes\",\n    \"performance\",\n    \"shaderCacheText\",\n    \"primitiveBoundingSphere\",\n    \"primitiveReferenceFrame\",\n    \"filterPrimitive\",\n    \"tileBoundingSphere\",\n    \"filterTile\",\n    \"wireframe\",\n    \"depthFrustum\",\n    \"suspendUpdates\",\n    \"tileCoordinates\",\n    \"frustumStatisticText\",\n    \"tileText\",\n    \"hasPickedPrimitive\",\n    \"hasPickedTile\",\n    \"pickPrimitiveActive\",\n    \"pickTileActive\",\n    \"dropDownVisible\",\n    \"generalVisible\",\n    \"primitivesVisible\",\n    \"terrainVisible\",\n    \"depthFrustumText\",\n  ]);\n\n  this._toggleDropDown = createCommand(function () {\n    that.dropDownVisible = !that.dropDownVisible;\n  });\n\n  this._toggleGeneral = createCommand(function () {\n    that.generalVisible = !that.generalVisible;\n  });\n\n  this._togglePrimitives = createCommand(function () {\n    that.primitivesVisible = !that.primitivesVisible;\n  });\n\n  this._toggleTerrain = createCommand(function () {\n    that.terrainVisible = !that.terrainVisible;\n  });\n\n  this._frustumsSubscription = knockout\n    .getObservable(this, \"frustums\")\n    .subscribe(function (val) {\n      that._scene.debugShowFrustums = val;\n      that._scene.requestRender();\n    });\n\n  this._frustumPlanesSubscription = knockout\n    .getObservable(this, \"frustumPlanes\")\n    .subscribe(function (val) {\n      that._scene.debugShowFrustumPlanes = val;\n      that._scene.requestRender();\n    });\n\n  this._performanceSubscription = knockout\n    .getObservable(this, \"performance\")\n    .subscribe(function (val) {\n      if (val) {\n        that._performanceDisplay = new PerformanceDisplay({\n          container: that._performanceContainer,\n        });\n      } else {\n        that._performanceContainer.innerHTML = \"\";\n      }\n    });\n\n  this._showPrimitiveBoundingSphere = createCommand(function () {\n    that._primitive.debugShowBoundingVolume = that.primitiveBoundingSphere;\n    that._scene.requestRender();\n    return true;\n  });\n\n  this._primitiveBoundingSphereSubscription = knockout\n    .getObservable(this, \"primitiveBoundingSphere\")\n    .subscribe(function () {\n      that._showPrimitiveBoundingSphere();\n    });\n\n  this._showPrimitiveReferenceFrame = createCommand(function () {\n    if (that.primitiveReferenceFrame) {\n      const modelMatrix = that._primitive.modelMatrix;\n      that._modelMatrixPrimitive = new DebugModelMatrixPrimitive({\n        modelMatrix: modelMatrix,\n      });\n      that._scene.primitives.add(that._modelMatrixPrimitive);\n    } else if (defined(that._modelMatrixPrimitive)) {\n      that._scene.primitives.remove(that._modelMatrixPrimitive);\n      that._modelMatrixPrimitive = undefined;\n    }\n    that._scene.requestRender();\n    return true;\n  });\n\n  this._primitiveReferenceFrameSubscription = knockout\n    .getObservable(this, \"primitiveReferenceFrame\")\n    .subscribe(function () {\n      that._showPrimitiveReferenceFrame();\n    });\n\n  this._doFilterPrimitive = createCommand(function () {\n    if (that.filterPrimitive) {\n      that._scene.debugCommandFilter = function (command) {\n        if (\n          defined(that._modelMatrixPrimitive) &&\n          command.owner === that._modelMatrixPrimitive._primitive\n        ) {\n          return true;\n        } else if (defined(that._primitive)) {\n          return (\n            command.owner === that._primitive ||\n            command.owner === that._primitive._billboardCollection ||\n            command.owner.primitive === that._primitive\n          );\n        }\n        return false;\n      };\n    } else {\n      that._scene.debugCommandFilter = undefined;\n    }\n    return true;\n  });\n\n  this._filterPrimitiveSubscription = knockout\n    .getObservable(this, \"filterPrimitive\")\n    .subscribe(function () {\n      that._doFilterPrimitive();\n      that._scene.requestRender();\n    });\n\n  this._wireframeSubscription = knockout\n    .getObservable(this, \"wireframe\")\n    .subscribe(function (val) {\n      globe._surface.tileProvider._debug.wireframe = val;\n      that._scene.requestRender();\n    });\n\n  this._depthFrustumSubscription = knockout\n    .getObservable(this, \"depthFrustum\")\n    .subscribe(function (val) {\n      that._scene.debugShowDepthFrustum = val;\n      that._scene.requestRender();\n    });\n\n  this._incrementDepthFrustum = createCommand(function () {\n    const next = that.depthFrustum + 1;\n    that.depthFrustum = boundDepthFrustum(1, that._numberOfFrustums, next);\n    that._scene.requestRender();\n    return true;\n  });\n\n  this._decrementDepthFrustum = createCommand(function () {\n    const next = that.depthFrustum - 1;\n    that.depthFrustum = boundDepthFrustum(1, that._numberOfFrustums, next);\n    that._scene.requestRender();\n    return true;\n  });\n\n  this._suspendUpdatesSubscription = knockout\n    .getObservable(this, \"suspendUpdates\")\n    .subscribe(function (val) {\n      globe._surface._debug.suspendLodUpdate = val;\n      if (!val) {\n        that.filterTile = false;\n      }\n    });\n\n  let tileBoundariesLayer;\n  this._showTileCoordinates = createCommand(function () {\n    if (that.tileCoordinates && !defined(tileBoundariesLayer)) {\n      tileBoundariesLayer = scene.imageryLayers.addImageryProvider(\n        new TileCoordinatesImageryProvider({\n          tilingScheme: scene.terrainProvider.tilingScheme,\n        }),\n      );\n    } else if (!that.tileCoordinates && defined(tileBoundariesLayer)) {\n      scene.imageryLayers.remove(tileBoundariesLayer);\n      tileBoundariesLayer = undefined;\n    }\n    return true;\n  });\n\n  this._tileCoordinatesSubscription = knockout\n    .getObservable(this, \"tileCoordinates\")\n    .subscribe(function () {\n      that._showTileCoordinates();\n      that._scene.requestRender();\n    });\n\n  this._tileBoundingSphereSubscription = knockout\n    .getObservable(this, \"tileBoundingSphere\")\n    .subscribe(function () {\n      that._showTileBoundingSphere();\n      that._scene.requestRender();\n    });\n\n  this._showTileBoundingSphere = createCommand(function () {\n    if (that.tileBoundingSphere) {\n      globe._surface.tileProvider._debug.boundingSphereTile = that._tile;\n    } else {\n      globe._surface.tileProvider._debug.boundingSphereTile = undefined;\n    }\n    that._scene.requestRender();\n    return true;\n  });\n\n  this._doFilterTile = createCommand(function () {\n    if (!that.filterTile) {\n      that.suspendUpdates = false;\n    } else {\n      that.suspendUpdates = true;\n\n      globe._surface._tilesToRender = [];\n\n      if (defined(that._tile) && that._tile.renderable) {\n        globe._surface._tilesToRender.push(that._tile);\n      }\n    }\n    return true;\n  });\n\n  this._filterTileSubscription = knockout\n    .getObservable(this, \"filterTile\")\n    .subscribe(function () {\n      that.doFilterTile();\n      that._scene.requestRender();\n    });\n\n  function pickPrimitive(e) {\n    const newPick = that._scene.pick({\n      x: e.position.x,\n      y: e.position.y,\n    });\n    if (defined(newPick)) {\n      that.primitive = defined(newPick.collection)\n        ? newPick.collection\n        : newPick.primitive;\n    }\n\n    that._scene.requestRender();\n    that.pickPrimitiveActive = false;\n  }\n\n  this._pickPrimitive = createCommand(function () {\n    that.pickPrimitiveActive = !that.pickPrimitiveActive;\n  });\n\n  this._pickPrimitiveActiveSubscription = knockout\n    .getObservable(this, \"pickPrimitiveActive\")\n    .subscribe(function (val) {\n      if (val) {\n        eventHandler.setInputAction(\n          pickPrimitive,\n          ScreenSpaceEventType.LEFT_CLICK,\n        );\n      } else {\n        eventHandler.removeInputAction(ScreenSpaceEventType.LEFT_CLICK);\n      }\n    });\n\n  function selectTile(e) {\n    let selectedTile;\n    const ellipsoid = globe.ellipsoid;\n\n    const ray = that._scene.camera.getPickRay(e.position, scratchPickRay);\n    const cartesian = globe.pick(ray, that._scene, scratchPickCartesian);\n\n    if (defined(cartesian)) {\n      const cartographic = ellipsoid.cartesianToCartographic(cartesian);\n      const tilesRendered =\n        globe._surface.tileProvider._tilesToRenderByTextureCount;\n      for (\n        let textureCount = 0;\n        !selectedTile && textureCount < tilesRendered.length;\n        ++textureCount\n      ) {\n        const tilesRenderedByTextureCount = tilesRendered[textureCount];\n        if (!defined(tilesRenderedByTextureCount)) {\n          continue;\n        }\n\n        for (\n          let tileIndex = 0;\n          !selectedTile && tileIndex < tilesRenderedByTextureCount.length;\n          ++tileIndex\n        ) {\n          const tile = tilesRenderedByTextureCount[tileIndex];\n          if (Rectangle.contains(tile.rectangle, cartographic)) {\n            selectedTile = tile;\n          }\n        }\n      }\n    }\n\n    that.tile = selectedTile;\n\n    that.pickTileActive = false;\n  }\n\n  this._pickTile = createCommand(function () {\n    that.pickTileActive = !that.pickTileActive;\n  });\n\n  this._pickTileActiveSubscription = knockout\n    .getObservable(this, \"pickTileActive\")\n    .subscribe(function (val) {\n      if (val) {\n        eventHandler.setInputAction(\n          selectTile,\n          ScreenSpaceEventType.LEFT_CLICK,\n        );\n      } else {\n        eventHandler.removeInputAction(ScreenSpaceEventType.LEFT_CLICK);\n      }\n    });\n\n  this._removePostRenderEvent = scene.postRender.addEventListener(function () {\n    that._update();\n  });\n}\n\nObject.defineProperties(CesiumInspectorViewModel.prototype, {\n  /**\n   * Gets the scene to control.\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Scene}\n   */\n  scene: {\n    get: function () {\n      return this._scene;\n    },\n  },\n\n  /**\n   * Gets the container of the PerformanceDisplay\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Element}\n   */\n  performanceContainer: {\n    get: function () {\n      return this._performanceContainer;\n    },\n  },\n\n  /**\n   * Gets the command to toggle the visibility of the drop down.\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Command}\n   */\n  toggleDropDown: {\n    get: function () {\n      return this._toggleDropDown;\n    },\n  },\n\n  /**\n   * Gets the command to toggle the visibility of a BoundingSphere for a primitive\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Command}\n   */\n  showPrimitiveBoundingSphere: {\n    get: function () {\n      return this._showPrimitiveBoundingSphere;\n    },\n  },\n\n  /**\n   * Gets the command to toggle the visibility of a {@link DebugModelMatrixPrimitive} for the model matrix of a primitive\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Command}\n   */\n  showPrimitiveReferenceFrame: {\n    get: function () {\n      return this._showPrimitiveReferenceFrame;\n    },\n  },\n\n  /**\n   * Gets the command to toggle a filter that renders only a selected primitive\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Command}\n   */\n  doFilterPrimitive: {\n    get: function () {\n      return this._doFilterPrimitive;\n    },\n  },\n\n  /**\n   * Gets the command to increment the depth frustum index to be shown\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Command}\n   */\n  incrementDepthFrustum: {\n    get: function () {\n      return this._incrementDepthFrustum;\n    },\n  },\n\n  /**\n   * Gets the command to decrement the depth frustum index to be shown\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Command}\n   */\n  decrementDepthFrustum: {\n    get: function () {\n      return this._decrementDepthFrustum;\n    },\n  },\n\n  /**\n   * Gets the command to toggle the visibility of tile coordinates\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Command}\n   */\n  showTileCoordinates: {\n    get: function () {\n      return this._showTileCoordinates;\n    },\n  },\n\n  /**\n   * Gets the command to toggle the visibility of a BoundingSphere for a selected tile\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Command}\n   */\n  showTileBoundingSphere: {\n    get: function () {\n      return this._showTileBoundingSphere;\n    },\n  },\n\n  /**\n   * Gets the command to toggle a filter that renders only a selected tile\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Command}\n   */\n  doFilterTile: {\n    get: function () {\n      return this._doFilterTile;\n    },\n  },\n\n  /**\n   * Gets the command to expand and collapse the general section\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Command}\n   */\n  toggleGeneral: {\n    get: function () {\n      return this._toggleGeneral;\n    },\n  },\n\n  /**\n   * Gets the command to expand and collapse the primitives section\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Command}\n   */\n  togglePrimitives: {\n    get: function () {\n      return this._togglePrimitives;\n    },\n  },\n\n  /**\n   * Gets the command to expand and collapse the terrain section\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Command}\n   */\n  toggleTerrain: {\n    get: function () {\n      return this._toggleTerrain;\n    },\n  },\n\n  /**\n   * Gets the command to pick a primitive\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Command}\n   */\n  pickPrimitive: {\n    get: function () {\n      return this._pickPrimitive;\n    },\n  },\n\n  /**\n   * Gets the command to pick a tile\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Command}\n   */\n  pickTile: {\n    get: function () {\n      return this._pickTile;\n    },\n  },\n\n  /**\n   * Gets the command to pick a tile\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Command}\n   */\n  selectParent: {\n    get: function () {\n      const that = this;\n      return createCommand(function () {\n        that.tile = that.tile.parent;\n      });\n    },\n  },\n\n  /**\n   * Gets the command to pick a tile\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Command}\n   */\n  selectNW: {\n    get: function () {\n      const that = this;\n      return createCommand(function () {\n        that.tile = that.tile.northwestChild;\n      });\n    },\n  },\n\n  /**\n   * Gets the command to pick a tile\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Command}\n   */\n  selectNE: {\n    get: function () {\n      const that = this;\n      return createCommand(function () {\n        that.tile = that.tile.northeastChild;\n      });\n    },\n  },\n\n  /**\n   * Gets the command to pick a tile\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Command}\n   */\n  selectSW: {\n    get: function () {\n      const that = this;\n      return createCommand(function () {\n        that.tile = that.tile.southwestChild;\n      });\n    },\n  },\n\n  /**\n   * Gets the command to pick a tile\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Command}\n   */\n  selectSE: {\n    get: function () {\n      const that = this;\n      return createCommand(function () {\n        that.tile = that.tile.southeastChild;\n      });\n    },\n  },\n\n  /**\n   * Gets or sets the current selected primitive\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Command}\n   */\n  primitive: {\n    get: function () {\n      return this._primitive;\n    },\n    set: function (newPrimitive) {\n      const oldPrimitive = this._primitive;\n      if (newPrimitive !== oldPrimitive) {\n        this.hasPickedPrimitive = true;\n        if (defined(oldPrimitive)) {\n          oldPrimitive.debugShowBoundingVolume = false;\n        }\n        this._scene.debugCommandFilter = undefined;\n        if (defined(this._modelMatrixPrimitive)) {\n          this._scene.primitives.remove(this._modelMatrixPrimitive);\n          this._modelMatrixPrimitive = undefined;\n        }\n        this._primitive = newPrimitive;\n        newPrimitive.show = false;\n        setTimeout(function () {\n          newPrimitive.show = true;\n        }, 50);\n        this.showPrimitiveBoundingSphere();\n        this.showPrimitiveReferenceFrame();\n        this.doFilterPrimitive();\n      }\n    },\n  },\n\n  /**\n   * Gets or sets the current selected tile\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Command}\n   */\n  tile: {\n    get: function () {\n      return this._tile;\n    },\n    set: function (newTile) {\n      if (defined(newTile)) {\n        this.hasPickedTile = true;\n        const oldTile = this._tile;\n        if (newTile !== oldTile) {\n          this.tileText = `L: ${newTile.level} X: ${newTile.x} Y: ${newTile.y}`;\n          this.tileText += `<br>SW corner: ${newTile.rectangle.west}, ${newTile.rectangle.south}`;\n          this.tileText += `<br>NE corner: ${newTile.rectangle.east}, ${newTile.rectangle.north}`;\n          const data = newTile.data;\n          if (defined(data) && defined(data.tileBoundingRegion)) {\n            this.tileText += `<br>Min: ${data.tileBoundingRegion.minimumHeight} Max: ${data.tileBoundingRegion.maximumHeight}`;\n          } else {\n            this.tileText += \"<br>(Tile is not loaded)\";\n          }\n        }\n        this._tile = newTile;\n        this.showTileBoundingSphere();\n        this.doFilterTile();\n      } else {\n        this.hasPickedTile = false;\n        this._tile = undefined;\n      }\n    },\n  },\n});\n\n/**\n * Updates the view model\n * @private\n */\nCesiumInspectorViewModel.prototype._update = function () {\n  if (this.frustums) {\n    this.frustumStatisticText = frustumStatisticsToString(\n      this._scene.debugFrustumStatistics,\n    );\n  }\n\n  // Determine the number of frustums being used.\n  const numberOfFrustums = this._scene.numberOfFrustums;\n  this._numberOfFrustums = numberOfFrustums;\n  // Bound the frustum to be displayed.\n  this.depthFrustum = boundDepthFrustum(1, numberOfFrustums, this.depthFrustum);\n  // Update the displayed text.\n  this.depthFrustumText = `${this.depthFrustum} of ${numberOfFrustums}`;\n\n  if (this.performance) {\n    this._performanceDisplay.update();\n  }\n  if (this.primitiveReferenceFrame) {\n    this._modelMatrixPrimitive.modelMatrix = this._primitive.modelMatrix;\n  }\n\n  this.shaderCacheText = `Cached shaders: ${this._scene.context.shaderCache.numberOfShaders}`;\n};\n\n/**\n * @returns {boolean} true if the object has been destroyed, false otherwise.\n */\nCesiumInspectorViewModel.prototype.isDestroyed = function () {\n  return false;\n};\n\n/**\n * Destroys the widget.  Should be called if permanently\n * removing the widget from layout.\n */\nCesiumInspectorViewModel.prototype.destroy = function () {\n  this._eventHandler.destroy();\n  this._removePostRenderEvent();\n  this._frustumsSubscription.dispose();\n  this._frustumPlanesSubscription.dispose();\n  this._performanceSubscription.dispose();\n  this._primitiveBoundingSphereSubscription.dispose();\n  this._primitiveReferenceFrameSubscription.dispose();\n  this._filterPrimitiveSubscription.dispose();\n  this._wireframeSubscription.dispose();\n  this._depthFrustumSubscription.dispose();\n  this._suspendUpdatesSubscription.dispose();\n  this._tileCoordinatesSubscription.dispose();\n  this._tileBoundingSphereSubscription.dispose();\n  this._filterTileSubscription.dispose();\n  this._pickPrimitiveActiveSubscription.dispose();\n  this._pickTileActiveSubscription.dispose();\n  return destroyObject(this);\n};\nexport default CesiumInspectorViewModel;\n"],"mappings":"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ACA;EACE,IAAI,CAACC,uBAAuB,GAAG,KAAK;;EAEpC;AACF;AACA;AACA;AACA;EACE,IAAI,CAACC,uBAAuB,GAAG,KAAK;;EAEpC;AACF;AACA;AACA;AACA;EACE,IAAI,CAACC,eAAe,GAAG,KAAK;;EAE5B;AACF;AACA;AACA;AACA;EACE,IAAI,CAACC,kBAAkB,GAAG,KAAK;;EAE/B;AACF;AACA;AACA;AACA;EACE,IAAI,CAACC,UAAU,GAAG,KAAK;;EAEvB;AACF;AACA;AACA;AACA;EACE,IAAI,CAACC,SAAS,GAAG,KAAK;;EAEtB;AACF;AACA;AACA;AACA;EACE,IAAI,CAACC,YAAY,GAAG,CAAC;EACrB,IAAI,CAACC,iBAAiB,GAAG,CAAC;;EAE1B;AACF;AACA;AACA;AACA;EACE,IAAI,CAACC,cAAc,GAAG,KAAK;;EAE3B;AACF;AACA;AACA;AACA;EACE,IAAI,CAACC,eAAe,GAAG,KAAK;;EAE5B;AACF;AACA;AACA;AACA;EACE,IAAI,CAACC,oBAAoB,GAAG,KAAK;;EAEjC;AACF;AACA;AACA;AACA;EACE,IAAI,CAACC,QAAQ,GAAG,EAAE;;EAElB;AACF;AACA;AACA;AACA;EACE,IAAI,CAACC,kBAAkB,GAAG,KAAK;;EAE/B;AACF;AACA;AACA;AACA;EACE,IAAI,CAACC,aAAa,GAAG,KAAK;;EAE1B;AACF;AACA;AACA;AACA;EACE,IAAI,CAACC,mBAAmB,GAAG,KAAK;;EAEhC;AACF;AACA;AACA;AACA;EACE,IAAI,CAACC,cAAc,GAAG,KAAK;;EAE3B;AACF;AACA;AACA;AACA;EACE,IAAI,CAACC,eAAe,GAAG,IAAI;;EAE3B;AACF;AACA;AACA;AACA;EACE,IAAI,CAACC,cAAc,GAAG,IAAI;;EAE1B;AACF;AACA;AACA;AACA;EACE,IAAI,CAACC,iBAAiB,GAAG,KAAK;;EAE9B;AACF;AACA;AACA;AACA;EACE,IAAI,CAACC,cAAc,GAAG,KAAK;;EAE3B;AACF;AACA;AACA;AACA;EACE,IAAI,CAACC,gBAAgB,GAAG,EAAE;EAE1BvE,QAAQ,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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}