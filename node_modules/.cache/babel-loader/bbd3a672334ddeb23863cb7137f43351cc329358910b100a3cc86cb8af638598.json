{"ast":null,"code":"import defined from \"../Core/defined.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport Event from \"../Core/Event.js\";\nimport DataSource from \"./DataSource.js\";\nimport EntityCluster from \"./EntityCluster.js\";\nimport EntityCollection from \"./EntityCollection.js\";\n\n/**\n * A {@link DataSource} implementation which can be used to manually manage a group of entities.\n *\n * @alias CustomDataSource\n * @constructor\n *\n * @param {string} [name] A human-readable name for this instance.\n *\n * @example\n * const dataSource = new Cesium.CustomDataSource('myData');\n *\n * const entity = dataSource.entities.add({\n *    position : Cesium.Cartesian3.fromDegrees(1, 2, 0),\n *    billboard : {\n *        image : 'image.png'\n *    }\n * });\n *\n * viewer.dataSources.add(dataSource);\n */\nfunction CustomDataSource(name) {\n  this._name = name;\n  this._clock = undefined;\n  this._changed = new Event();\n  this._error = new Event();\n  this._isLoading = false;\n  this._loading = new Event();\n  this._entityCollection = new EntityCollection(this);\n  this._entityCluster = new EntityCluster();\n}\nObject.defineProperties(CustomDataSource.prototype, {\n  /**\n   * Gets or sets a human-readable name for this instance.\n   * @memberof CustomDataSource.prototype\n   * @type {string}\n   */\n  name: {\n    get: function () {\n      return this._name;\n    },\n    set: function (value) {\n      if (this._name !== value) {\n        this._name = value;\n        this._changed.raiseEvent(this);\n      }\n    }\n  },\n  /**\n   * Gets or sets the clock for this instance.\n   * @memberof CustomDataSource.prototype\n   * @type {DataSourceClock}\n   */\n  clock: {\n    get: function () {\n      return this._clock;\n    },\n    set: function (value) {\n      if (this._clock !== value) {\n        this._clock = value;\n        this._changed.raiseEvent(this);\n      }\n    }\n  },\n  /**\n   * Gets the collection of {@link Entity} instances.\n   * @memberof CustomDataSource.prototype\n   * @type {EntityCollection}\n   */\n  entities: {\n    get: function () {\n      return this._entityCollection;\n    }\n  },\n  /**\n   * Gets or sets whether the data source is currently loading data.\n   * @memberof CustomDataSource.prototype\n   * @type {boolean}\n   */\n  isLoading: {\n    get: function () {\n      return this._isLoading;\n    },\n    set: function (value) {\n      DataSource.setLoading(this, value);\n    }\n  },\n  /**\n   * Gets an event that will be raised when the underlying data changes.\n   * @memberof CustomDataSource.prototype\n   * @type {Event}\n   */\n  changedEvent: {\n    get: function () {\n      return this._changed;\n    }\n  },\n  /**\n   * Gets an event that will be raised if an error is encountered during processing.\n   * @memberof CustomDataSource.prototype\n   * @type {Event}\n   */\n  errorEvent: {\n    get: function () {\n      return this._error;\n    }\n  },\n  /**\n   * Gets an event that will be raised when the data source either starts or stops loading.\n   * @memberof CustomDataSource.prototype\n   * @type {Event}\n   */\n  loadingEvent: {\n    get: function () {\n      return this._loading;\n    }\n  },\n  /**\n   * Gets whether or not this data source should be displayed.\n   * @memberof CustomDataSource.prototype\n   * @type {boolean}\n   */\n  show: {\n    get: function () {\n      return this._entityCollection.show;\n    },\n    set: function (value) {\n      this._entityCollection.show = value;\n    }\n  },\n  /**\n   * Gets or sets the clustering options for this data source. This object can be shared between multiple data sources.\n   *\n   * @memberof CustomDataSource.prototype\n   * @type {EntityCluster}\n   */\n  clustering: {\n    get: function () {\n      return this._entityCluster;\n    },\n    set: function (value) {\n      //>>includeStart('debug', pragmas.debug);\n      if (!defined(value)) {\n        throw new DeveloperError(\"value must be defined.\");\n      }\n      //>>includeEnd('debug');\n      this._entityCluster = value;\n    }\n  }\n});\n\n/**\n * Updates the data source to the provided time.  This function is optional and\n * is not required to be implemented.  It is provided for data sources which\n * retrieve data based on the current animation time or scene state.\n * If implemented, update will be called by {@link DataSourceDisplay} once a frame.\n *\n * @param {JulianDate} time The simulation time.\n * @returns {boolean} True if this data source is ready to be displayed at the provided time, false otherwise.\n */\nCustomDataSource.prototype.update = function (time) {\n  return true;\n};\nexport default CustomDataSource;","map":{"version":3,"names":["defined","DeveloperError","Event","DataSource","EntityCluster","EntityCollection","CustomDataSource","name","_name","_clock","undefined","_changed","_error","_isLoading","_loading","_entityCollection","_entityCluster","Object","defineProperties","prototype","get","set","value","raiseEvent","clock","entities","isLoading","setLoading","changedEvent","errorEvent","loadingEvent","show","clustering","update","time"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/engine/Source/DataSources/CustomDataSource.js"],"sourcesContent":["import defined from \"../Core/defined.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport Event from \"../Core/Event.js\";\nimport DataSource from \"./DataSource.js\";\nimport EntityCluster from \"./EntityCluster.js\";\nimport EntityCollection from \"./EntityCollection.js\";\n\n/**\n * A {@link DataSource} implementation which can be used to manually manage a group of entities.\n *\n * @alias CustomDataSource\n * @constructor\n *\n * @param {string} [name] A human-readable name for this instance.\n *\n * @example\n * const dataSource = new Cesium.CustomDataSource('myData');\n *\n * const entity = dataSource.entities.add({\n *    position : Cesium.Cartesian3.fromDegrees(1, 2, 0),\n *    billboard : {\n *        image : 'image.png'\n *    }\n * });\n *\n * viewer.dataSources.add(dataSource);\n */\nfunction CustomDataSource(name) {\n  this._name = name;\n  this._clock = undefined;\n  this._changed = new Event();\n  this._error = new Event();\n  this._isLoading = false;\n  this._loading = new Event();\n  this._entityCollection = new EntityCollection(this);\n  this._entityCluster = new EntityCluster();\n}\n\nObject.defineProperties(CustomDataSource.prototype, {\n  /**\n   * Gets or sets a human-readable name for this instance.\n   * @memberof CustomDataSource.prototype\n   * @type {string}\n   */\n  name: {\n    get: function () {\n      return this._name;\n    },\n    set: function (value) {\n      if (this._name !== value) {\n        this._name = value;\n        this._changed.raiseEvent(this);\n      }\n    },\n  },\n  /**\n   * Gets or sets the clock for this instance.\n   * @memberof CustomDataSource.prototype\n   * @type {DataSourceClock}\n   */\n  clock: {\n    get: function () {\n      return this._clock;\n    },\n    set: function (value) {\n      if (this._clock !== value) {\n        this._clock = value;\n        this._changed.raiseEvent(this);\n      }\n    },\n  },\n  /**\n   * Gets the collection of {@link Entity} instances.\n   * @memberof CustomDataSource.prototype\n   * @type {EntityCollection}\n   */\n  entities: {\n    get: function () {\n      return this._entityCollection;\n    },\n  },\n  /**\n   * Gets or sets whether the data source is currently loading data.\n   * @memberof CustomDataSource.prototype\n   * @type {boolean}\n   */\n  isLoading: {\n    get: function () {\n      return this._isLoading;\n    },\n    set: function (value) {\n      DataSource.setLoading(this, value);\n    },\n  },\n  /**\n   * Gets an event that will be raised when the underlying data changes.\n   * @memberof CustomDataSource.prototype\n   * @type {Event}\n   */\n  changedEvent: {\n    get: function () {\n      return this._changed;\n    },\n  },\n  /**\n   * Gets an event that will be raised if an error is encountered during processing.\n   * @memberof CustomDataSource.prototype\n   * @type {Event}\n   */\n  errorEvent: {\n    get: function () {\n      return this._error;\n    },\n  },\n  /**\n   * Gets an event that will be raised when the data source either starts or stops loading.\n   * @memberof CustomDataSource.prototype\n   * @type {Event}\n   */\n  loadingEvent: {\n    get: function () {\n      return this._loading;\n    },\n  },\n  /**\n   * Gets whether or not this data source should be displayed.\n   * @memberof CustomDataSource.prototype\n   * @type {boolean}\n   */\n  show: {\n    get: function () {\n      return this._entityCollection.show;\n    },\n    set: function (value) {\n      this._entityCollection.show = value;\n    },\n  },\n\n  /**\n   * Gets or sets the clustering options for this data source. This object can be shared between multiple data sources.\n   *\n   * @memberof CustomDataSource.prototype\n   * @type {EntityCluster}\n   */\n  clustering: {\n    get: function () {\n      return this._entityCluster;\n    },\n    set: function (value) {\n      //>>includeStart('debug', pragmas.debug);\n      if (!defined(value)) {\n        throw new DeveloperError(\"value must be defined.\");\n      }\n      //>>includeEnd('debug');\n      this._entityCluster = value;\n    },\n  },\n});\n\n/**\n * Updates the data source to the provided time.  This function is optional and\n * is not required to be implemented.  It is provided for data sources which\n * retrieve data based on the current animation time or scene state.\n * If implemented, update will be called by {@link DataSourceDisplay} once a frame.\n *\n * @param {JulianDate} time The simulation time.\n * @returns {boolean} True if this data source is ready to be displayed at the provided time, false otherwise.\n */\nCustomDataSource.prototype.update = function (time) {\n  return true;\n};\n\nexport default CustomDataSource;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}