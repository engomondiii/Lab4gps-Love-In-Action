{"ast":null,"code":"import defined from \"../Core/defined.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport Event from \"../Core/Event.js\";\nimport JulianDate from \"../Core/JulianDate.js\";\n\n/**\n * A {@link Property} whose value is lazily evaluated by a callback function.\n *\n * @alias CallbackProperty\n * @constructor\n *\n * @param {CallbackProperty.Callback} callback The function to be called when the property is evaluated.\n * @param {boolean} isConstant <code>true</code> when the callback function returns the same value every time, <code>false</code> if the value will change.\n */\nfunction CallbackProperty(callback, isConstant) {\n  this._callback = undefined;\n  this._isConstant = undefined;\n  this._definitionChanged = new Event();\n  this.setCallback(callback, isConstant);\n}\nObject.defineProperties(CallbackProperty.prototype, {\n  /**\n   * Gets a value indicating if this property is constant.\n   * @memberof CallbackProperty.prototype\n   *\n   * @type {boolean}\n   * @readonly\n   */\n  isConstant: {\n    get: function () {\n      return this._isConstant;\n    }\n  },\n  /**\n   * Gets the event that is raised whenever the definition of this property changes.\n   * The definition is changed whenever setCallback is called.\n   * @memberof CallbackProperty.prototype\n   *\n   * @type {Event}\n   * @readonly\n   */\n  definitionChanged: {\n    get: function () {\n      return this._definitionChanged;\n    }\n  }\n});\nconst timeScratch = new JulianDate();\n\n/**\n * Gets the value of the property.\n *\n * @param {JulianDate} [time=JulianDate.now()] The time for which to retrieve the value. If omitted, the current system time is used.\n * @param {object} [result] The object to store the value into, if omitted, a new instance is created and returned.\n * @returns {object} The modified result parameter or a new instance if the result parameter was not supplied or is unsupported.\n */\nCallbackProperty.prototype.getValue = function (time, result) {\n  if (!defined(time)) {\n    time = JulianDate.now(timeScratch);\n  }\n  return this._callback(time, result);\n};\n\n/**\n * Sets the callback to be used.\n *\n * @param {CallbackProperty.Callback} callback The function to be called when the property is evaluated.\n * @param {boolean} isConstant <code>true</code> when the callback function returns the same value every time, <code>false</code> if the value will change.\n */\nCallbackProperty.prototype.setCallback = function (callback, isConstant) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(callback)) {\n    throw new DeveloperError(\"callback is required.\");\n  }\n  if (!defined(isConstant)) {\n    throw new DeveloperError(\"isConstant is required.\");\n  }\n  //>>includeEnd('debug');\n\n  const changed = this._callback !== callback || this._isConstant !== isConstant;\n  this._callback = callback;\n  this._isConstant = isConstant;\n  if (changed) {\n    this._definitionChanged.raiseEvent(this);\n  }\n};\n\n/**\n * Compares this property to the provided property and returns\n * <code>true</code> if they are equal, <code>false</code> otherwise.\n *\n * @param {Property} [other] The other property.\n * @returns {boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\n */\nCallbackProperty.prototype.equals = function (other) {\n  return this === other || other instanceof CallbackProperty && this._callback === other._callback && this._isConstant === other._isConstant;\n};\n\n/**\n * A function that returns the value of the property.\n * @callback CallbackProperty.Callback\n *\n * @param {JulianDate} [time=JulianDate.now()] The time for which to retrieve the value. If omitted, the current system time is used.\n * @param {object} [result] The object to store the value into. If omitted, the function must create and return a new instance.\n * @returns {object} The modified result parameter, or a new instance if the result parameter was not supplied or is unsupported.\n */\nexport default CallbackProperty;","map":{"version":3,"names":["defined","DeveloperError","Event","JulianDate","CallbackProperty","callback","isConstant","_callback","undefined","_isConstant","_definitionChanged","setCallback","Object","defineProperties","prototype","get","definitionChanged","timeScratch","getValue","time","result","now","changed","raiseEvent","equals","other"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/engine/Source/DataSources/CallbackProperty.js"],"sourcesContent":["import defined from \"../Core/defined.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport Event from \"../Core/Event.js\";\nimport JulianDate from \"../Core/JulianDate.js\";\n\n/**\n * A {@link Property} whose value is lazily evaluated by a callback function.\n *\n * @alias CallbackProperty\n * @constructor\n *\n * @param {CallbackProperty.Callback} callback The function to be called when the property is evaluated.\n * @param {boolean} isConstant <code>true</code> when the callback function returns the same value every time, <code>false</code> if the value will change.\n */\nfunction CallbackProperty(callback, isConstant) {\n  this._callback = undefined;\n  this._isConstant = undefined;\n  this._definitionChanged = new Event();\n  this.setCallback(callback, isConstant);\n}\n\nObject.defineProperties(CallbackProperty.prototype, {\n  /**\n   * Gets a value indicating if this property is constant.\n   * @memberof CallbackProperty.prototype\n   *\n   * @type {boolean}\n   * @readonly\n   */\n  isConstant: {\n    get: function () {\n      return this._isConstant;\n    },\n  },\n  /**\n   * Gets the event that is raised whenever the definition of this property changes.\n   * The definition is changed whenever setCallback is called.\n   * @memberof CallbackProperty.prototype\n   *\n   * @type {Event}\n   * @readonly\n   */\n  definitionChanged: {\n    get: function () {\n      return this._definitionChanged;\n    },\n  },\n});\n\nconst timeScratch = new JulianDate();\n\n/**\n * Gets the value of the property.\n *\n * @param {JulianDate} [time=JulianDate.now()] The time for which to retrieve the value. If omitted, the current system time is used.\n * @param {object} [result] The object to store the value into, if omitted, a new instance is created and returned.\n * @returns {object} The modified result parameter or a new instance if the result parameter was not supplied or is unsupported.\n */\nCallbackProperty.prototype.getValue = function (time, result) {\n  if (!defined(time)) {\n    time = JulianDate.now(timeScratch);\n  }\n  return this._callback(time, result);\n};\n\n/**\n * Sets the callback to be used.\n *\n * @param {CallbackProperty.Callback} callback The function to be called when the property is evaluated.\n * @param {boolean} isConstant <code>true</code> when the callback function returns the same value every time, <code>false</code> if the value will change.\n */\nCallbackProperty.prototype.setCallback = function (callback, isConstant) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(callback)) {\n    throw new DeveloperError(\"callback is required.\");\n  }\n  if (!defined(isConstant)) {\n    throw new DeveloperError(\"isConstant is required.\");\n  }\n  //>>includeEnd('debug');\n\n  const changed =\n    this._callback !== callback || this._isConstant !== isConstant;\n\n  this._callback = callback;\n  this._isConstant = isConstant;\n\n  if (changed) {\n    this._definitionChanged.raiseEvent(this);\n  }\n};\n\n/**\n * Compares this property to the provided property and returns\n * <code>true</code> if they are equal, <code>false</code> otherwise.\n *\n * @param {Property} [other] The other property.\n * @returns {boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\n */\nCallbackProperty.prototype.equals = function (other) {\n  return (\n    this === other ||\n    (other instanceof CallbackProperty &&\n      this._callback === other._callback &&\n      this._isConstant === other._isConstant)\n  );\n};\n\n/**\n * A function that returns the value of the property.\n * @callback CallbackProperty.Callback\n *\n * @param {JulianDate} [time=JulianDate.now()] The time for which to retrieve the value. If omitted, the current system time is used.\n * @param {object} [result] The object to store the value into. If omitted, the function must create and return a new instance.\n * @returns {object} The modified result parameter, or a new instance if the result parameter was not supplied or is unsupported.\n */\nexport default CallbackProperty;\n"],"mappings":"AAAA,OAAOA,OAAO,MAAM,oBAAoB;AACxC,OAAOC,cAAc,MAAM,2BAA2B;AACtD,OAAOC,KAAK,MAAM,kBAAkB;AACpC,OAAOC,UAAU,MAAM,uBAAuB;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,gBAAgBA,CAACC,QAAQ,EAAEC,UAAU,EAAE;EAC9C,IAAI,CAACC,SAAS,GAAGC,SAAS;EAC1B,IAAI,CAACC,WAAW,GAAGD,SAAS;EAC5B,IAAI,CAACE,kBAAkB,GAAG,IAAIR,KAAK,CAAC,CAAC;EACrC,IAAI,CAACS,WAAW,CAACN,QAAQ,EAAEC,UAAU,CAAC;AACxC;AAEAM,MAAM,CAACC,gBAAgB,CAACT,gBAAgB,CAACU,SAAS,EAAE;EAClD;AACF;AACA;AACA;AACA;AACA;AACA;EACER,UAAU,EAAE;IACVS,GAAG,EAAE,SAAAA,CAAA,EAAY;MACf,OAAO,IAAI,CAACN,WAAW;IACzB;EACF,CAAC;EACD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACEO,iBAAiB,EAAE;IACjBD,GAAG,EAAE,SAAAA,CAAA,EAAY;MACf,OAAO,IAAI,CAACL,kBAAkB;IAChC;EACF;AACF,CAAC,CAAC;AAEF,MAAMO,WAAW,GAAG,IAAId,UAAU,CAAC,CAAC;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,gBAAgB,CAACU,SAAS,CAACI,QAAQ,GAAG,UAAUC,IAAI,EAAEC,MAAM,EAAE;EAC5D,IAAI,CAACpB,OAAO,CAACmB,IAAI,CAAC,EAAE;IAClBA,IAAI,GAAGhB,UAAU,CAACkB,GAAG,CAACJ,WAAW,CAAC;EACpC;EACA,OAAO,IAAI,CAACV,SAAS,CAACY,IAAI,EAAEC,MAAM,CAAC;AACrC,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACAhB,gBAAgB,CAACU,SAAS,CAACH,WAAW,GAAG,UAAUN,QAAQ,EAAEC,UAAU,EAAE;EACvE;EACA,IAAI,CAACN,OAAO,CAACK,QAAQ,CAAC,EAAE;IACtB,MAAM,IAAIJ,cAAc,CAAC,uBAAuB,CAAC;EACnD;EACA,IAAI,CAACD,OAAO,CAACM,UAAU,CAAC,EAAE;IACxB,MAAM,IAAIL,cAAc,CAAC,yBAAyB,CAAC;EACrD;EACA;;EAEA,MAAMqB,OAAO,GACX,IAAI,CAACf,SAAS,KAAKF,QAAQ,IAAI,IAAI,CAACI,WAAW,KAAKH,UAAU;EAEhE,IAAI,CAACC,SAAS,GAAGF,QAAQ;EACzB,IAAI,CAACI,WAAW,GAAGH,UAAU;EAE7B,IAAIgB,OAAO,EAAE;IACX,IAAI,CAACZ,kBAAkB,CAACa,UAAU,CAAC,IAAI,CAAC;EAC1C;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACAnB,gBAAgB,CAACU,SAAS,CAACU,MAAM,GAAG,UAAUC,KAAK,EAAE;EACnD,OACE,IAAI,KAAKA,KAAK,IACbA,KAAK,YAAYrB,gBAAgB,IAChC,IAAI,CAACG,SAAS,KAAKkB,KAAK,CAAClB,SAAS,IAClC,IAAI,CAACE,WAAW,KAAKgB,KAAK,CAAChB,WAAY;AAE7C,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAeL,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}