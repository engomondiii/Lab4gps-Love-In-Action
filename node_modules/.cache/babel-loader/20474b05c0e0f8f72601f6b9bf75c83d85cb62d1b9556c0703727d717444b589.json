{"ast":null,"code":"/**\n * Creates a {@link createBillboardPointCallback.CanvasFunction} that will create a canvas with a point.\n *\n * @param {number} centerAlpha The alpha of the center of the point. The value must be in the range [0.0, 1.0].\n * @param {string} cssColor The CSS color string.\n * @param {string} cssOutlineColor The CSS color of the point outline.\n * @param {number} cssOutlineWidth The width of the outline in pixels.\n * @param {number} pixelSize The size of the point in pixels.\n * @return {createBillboardPointCallback.CanvasFunction} The function that will return a canvas with the point drawn on it.\n *\n * @private\n */\nfunction createBillboardPointCallback(centerAlpha, cssColor, cssOutlineColor, cssOutlineWidth, pixelSize) {\n  return function () {\n    const canvas = document.createElement(\"canvas\");\n    const length = pixelSize + 2 * cssOutlineWidth;\n    canvas.height = canvas.width = length;\n    const context2D = canvas.getContext(\"2d\");\n    context2D.clearRect(0, 0, length, length);\n    if (cssOutlineWidth !== 0) {\n      context2D.beginPath();\n      context2D.arc(length / 2, length / 2, length / 2, 0, 2 * Math.PI, true);\n      context2D.closePath();\n      context2D.fillStyle = cssOutlineColor;\n      context2D.fill();\n      // Punch a hole in the center if needed.\n      if (centerAlpha < 1.0) {\n        context2D.save();\n        context2D.globalCompositeOperation = \"destination-out\";\n        context2D.beginPath();\n        context2D.arc(length / 2, length / 2, pixelSize / 2, 0, 2 * Math.PI, true);\n        context2D.closePath();\n        context2D.fillStyle = \"black\";\n        context2D.fill();\n        context2D.restore();\n      }\n    }\n    context2D.beginPath();\n    context2D.arc(length / 2, length / 2, pixelSize / 2, 0, 2 * Math.PI, true);\n    context2D.closePath();\n    context2D.fillStyle = cssColor;\n    context2D.fill();\n    return canvas;\n  };\n}\n\n/**\n * A function that returns a canvas containing an image of a point.\n * @callback createBillboardPointCallback.CanvasFunction\n * @returns {HTMLCanvasElement} The result of the calculation.\n */\nexport default createBillboardPointCallback;","map":{"version":3,"names":["createBillboardPointCallback","centerAlpha","cssColor","cssOutlineColor","cssOutlineWidth","pixelSize","canvas","document","createElement","length","height","width","context2D","getContext","clearRect","beginPath","arc","Math","PI","closePath","fillStyle","fill","save","globalCompositeOperation","restore"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/engine/Source/Scene/createBillboardPointCallback.js"],"sourcesContent":["/**\n * Creates a {@link createBillboardPointCallback.CanvasFunction} that will create a canvas with a point.\n *\n * @param {number} centerAlpha The alpha of the center of the point. The value must be in the range [0.0, 1.0].\n * @param {string} cssColor The CSS color string.\n * @param {string} cssOutlineColor The CSS color of the point outline.\n * @param {number} cssOutlineWidth The width of the outline in pixels.\n * @param {number} pixelSize The size of the point in pixels.\n * @return {createBillboardPointCallback.CanvasFunction} The function that will return a canvas with the point drawn on it.\n *\n * @private\n */\nfunction createBillboardPointCallback(\n  centerAlpha,\n  cssColor,\n  cssOutlineColor,\n  cssOutlineWidth,\n  pixelSize,\n) {\n  return function () {\n    const canvas = document.createElement(\"canvas\");\n\n    const length = pixelSize + 2 * cssOutlineWidth;\n    canvas.height = canvas.width = length;\n\n    const context2D = canvas.getContext(\"2d\");\n    context2D.clearRect(0, 0, length, length);\n\n    if (cssOutlineWidth !== 0) {\n      context2D.beginPath();\n      context2D.arc(length / 2, length / 2, length / 2, 0, 2 * Math.PI, true);\n      context2D.closePath();\n      context2D.fillStyle = cssOutlineColor;\n      context2D.fill();\n      // Punch a hole in the center if needed.\n      if (centerAlpha < 1.0) {\n        context2D.save();\n        context2D.globalCompositeOperation = \"destination-out\";\n        context2D.beginPath();\n        context2D.arc(\n          length / 2,\n          length / 2,\n          pixelSize / 2,\n          0,\n          2 * Math.PI,\n          true,\n        );\n        context2D.closePath();\n        context2D.fillStyle = \"black\";\n        context2D.fill();\n        context2D.restore();\n      }\n    }\n\n    context2D.beginPath();\n    context2D.arc(length / 2, length / 2, pixelSize / 2, 0, 2 * Math.PI, true);\n    context2D.closePath();\n    context2D.fillStyle = cssColor;\n    context2D.fill();\n\n    return canvas;\n  };\n}\n\n/**\n * A function that returns a canvas containing an image of a point.\n * @callback createBillboardPointCallback.CanvasFunction\n * @returns {HTMLCanvasElement} The result of the calculation.\n */\nexport default createBillboardPointCallback;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,4BAA4BA,CACnCC,WAAW,EACXC,QAAQ,EACRC,eAAe,EACfC,eAAe,EACfC,SAAS,EACT;EACA,OAAO,YAAY;IACjB,MAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;IAE/C,MAAMC,MAAM,GAAGJ,SAAS,GAAG,CAAC,GAAGD,eAAe;IAC9CE,MAAM,CAACI,MAAM,GAAGJ,MAAM,CAACK,KAAK,GAAGF,MAAM;IAErC,MAAMG,SAAS,GAAGN,MAAM,CAACO,UAAU,CAAC,IAAI,CAAC;IACzCD,SAAS,CAACE,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEL,MAAM,EAAEA,MAAM,CAAC;IAEzC,IAAIL,eAAe,KAAK,CAAC,EAAE;MACzBQ,SAAS,CAACG,SAAS,CAAC,CAAC;MACrBH,SAAS,CAACI,GAAG,CAACP,MAAM,GAAG,CAAC,EAAEA,MAAM,GAAG,CAAC,EAAEA,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,GAAGQ,IAAI,CAACC,EAAE,EAAE,IAAI,CAAC;MACvEN,SAAS,CAACO,SAAS,CAAC,CAAC;MACrBP,SAAS,CAACQ,SAAS,GAAGjB,eAAe;MACrCS,SAAS,CAACS,IAAI,CAAC,CAAC;MAChB;MACA,IAAIpB,WAAW,GAAG,GAAG,EAAE;QACrBW,SAAS,CAACU,IAAI,CAAC,CAAC;QAChBV,SAAS,CAACW,wBAAwB,GAAG,iBAAiB;QACtDX,SAAS,CAACG,SAAS,CAAC,CAAC;QACrBH,SAAS,CAACI,GAAG,CACXP,MAAM,GAAG,CAAC,EACVA,MAAM,GAAG,CAAC,EACVJ,SAAS,GAAG,CAAC,EACb,CAAC,EACD,CAAC,GAAGY,IAAI,CAACC,EAAE,EACX,IACF,CAAC;QACDN,SAAS,CAACO,SAAS,CAAC,CAAC;QACrBP,SAAS,CAACQ,SAAS,GAAG,OAAO;QAC7BR,SAAS,CAACS,IAAI,CAAC,CAAC;QAChBT,SAAS,CAACY,OAAO,CAAC,CAAC;MACrB;IACF;IAEAZ,SAAS,CAACG,SAAS,CAAC,CAAC;IACrBH,SAAS,CAACI,GAAG,CAACP,MAAM,GAAG,CAAC,EAAEA,MAAM,GAAG,CAAC,EAAEJ,SAAS,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,GAAGY,IAAI,CAACC,EAAE,EAAE,IAAI,CAAC;IAC1EN,SAAS,CAACO,SAAS,CAAC,CAAC;IACrBP,SAAS,CAACQ,SAAS,GAAGlB,QAAQ;IAC9BU,SAAS,CAACS,IAAI,CAAC,CAAC;IAEhB,OAAOf,MAAM;EACf,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAeN,4BAA4B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}