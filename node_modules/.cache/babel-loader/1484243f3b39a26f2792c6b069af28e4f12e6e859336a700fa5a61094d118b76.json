{"ast":null,"code":"import Matrix4 from \"../../Core/Matrix4.js\";\nimport Check from \"../../Core/Check.js\";\nimport defaultValue from \"../../Core/defaultValue.js\";\n\n/**\n * An in-memory representation of a skin that affects nodes in the {@link ModelSceneGraph}.\n * Skins should only be initialized after all of the {@link ModelRuntimeNode}s have been instantiated\n * by the scene graph.\n *\n * @param {object} options An object containing the following options:\n * @param {ModelComponents.Skin} options.skin The corresponding skin components from the 3D model\n * @param {ModelSceneGraph} options.sceneGraph The scene graph this skin belongs to.\n *\n * @alias ModelSkin\n * @constructor\n *\n * @private\n */\nfunction ModelSkin(options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n  //>>includeStart('debug', pragmas.debug);\n  Check.typeOf.object(\"options.skin\", options.skin);\n  Check.typeOf.object(\"options.sceneGraph\", options.sceneGraph);\n  //>>includeEnd('debug');\n\n  this._sceneGraph = options.sceneGraph;\n  const skin = options.skin;\n  this._skin = skin;\n  this._inverseBindMatrices = undefined;\n  this._joints = [];\n  this._jointMatrices = [];\n  initialize(this);\n}\nObject.defineProperties(ModelSkin.prototype, {\n  /**\n   * The internal skin this runtime skin represents.\n   *\n   * @memberof ModelSkin.prototype\n   * @type {ModelComponents.Skin}\n   * @readonly\n   *\n   * @private\n   */\n  skin: {\n    get: function () {\n      return this._skin;\n    }\n  },\n  /**\n   * The scene graph this skin belongs to.\n   *\n   * @memberof ModelSkin.prototype\n   * @type {ModelSceneGraph}\n   * @readonly\n   *\n   * @private\n   */\n  sceneGraph: {\n    get: function () {\n      return this._sceneGraph;\n    }\n  },\n  /**\n   * The inverse bind matrices of the skin.\n   *\n   * @memberof ModelSkin.prototype\n   * @type {Matrix4[]}\n   * @readonly\n   *\n   * @private\n   */\n  inverseBindMatrices: {\n    get: function () {\n      return this._inverseBindMatrices;\n    }\n  },\n  /**\n   * The joints of the skin.\n   *\n   * @memberof ModelSkin.prototype\n   * @type {ModelRuntimeNode[]}\n   * @readonly\n   *\n   * @private\n   */\n  joints: {\n    get: function () {\n      return this._joints;\n    }\n  },\n  /**\n   * The joint matrices for the skin, where each joint matrix is computed as\n   * jointMatrix = jointWorldTransform * inverseBindMatrix.\n   *\n   * Each node that references this skin is responsible for pre-multiplying its inverse\n   * world transform to the joint matrices for its own use.\n   *\n   * @memberof ModelSkin.prototype\n   * @type {Matrix4[]}\n   * @readonly\n   *\n   * @private\n   */\n  jointMatrices: {\n    get: function () {\n      return this._jointMatrices;\n    }\n  }\n});\nfunction initialize(runtimeSkin) {\n  const skin = runtimeSkin.skin;\n  const inverseBindMatrices = skin.inverseBindMatrices;\n  runtimeSkin._inverseBindMatrices = inverseBindMatrices;\n  const joints = skin.joints;\n  const length = joints.length;\n  const runtimeNodes = runtimeSkin.sceneGraph._runtimeNodes;\n  const runtimeJoints = runtimeSkin.joints;\n  const runtimeJointMatrices = runtimeSkin._jointMatrices;\n  for (let i = 0; i < length; i++) {\n    const jointIndex = joints[i].index;\n    const runtimeNode = runtimeNodes[jointIndex];\n    runtimeJoints.push(runtimeNode);\n    const inverseBindMatrix = inverseBindMatrices[i];\n    const jointMatrix = computeJointMatrix(runtimeNode, inverseBindMatrix, new Matrix4());\n    runtimeJointMatrices.push(jointMatrix);\n  }\n}\nfunction computeJointMatrix(joint, inverseBindMatrix, result) {\n  const jointWorldTransform = Matrix4.multiplyTransformation(joint.transformToRoot, joint.transform, result);\n  result = Matrix4.multiplyTransformation(jointWorldTransform, inverseBindMatrix, result);\n  return result;\n}\n\n/**\n * Updates the joint matrices for the skin.\n *\n * @private\n */\nModelSkin.prototype.updateJointMatrices = function () {\n  const jointMatrices = this._jointMatrices;\n  const length = jointMatrices.length;\n  for (let i = 0; i < length; i++) {\n    const joint = this.joints[i];\n    const inverseBindMatrix = this.inverseBindMatrices[i];\n    jointMatrices[i] = computeJointMatrix(joint, inverseBindMatrix, jointMatrices[i]);\n  }\n};\nexport default ModelSkin;","map":{"version":3,"names":["Matrix4","Check","defaultValue","ModelSkin","options","EMPTY_OBJECT","typeOf","object","skin","sceneGraph","_sceneGraph","_skin","_inverseBindMatrices","undefined","_joints","_jointMatrices","initialize","Object","defineProperties","prototype","get","inverseBindMatrices","joints","jointMatrices","runtimeSkin","length","runtimeNodes","_runtimeNodes","runtimeJoints","runtimeJointMatrices","i","jointIndex","index","runtimeNode","push","inverseBindMatrix","jointMatrix","computeJointMatrix","joint","result","jointWorldTransform","multiplyTransformation","transformToRoot","transform","updateJointMatrices"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/engine/Source/Scene/Model/ModelSkin.js"],"sourcesContent":["import Matrix4 from \"../../Core/Matrix4.js\";\nimport Check from \"../../Core/Check.js\";\nimport defaultValue from \"../../Core/defaultValue.js\";\n\n/**\n * An in-memory representation of a skin that affects nodes in the {@link ModelSceneGraph}.\n * Skins should only be initialized after all of the {@link ModelRuntimeNode}s have been instantiated\n * by the scene graph.\n *\n * @param {object} options An object containing the following options:\n * @param {ModelComponents.Skin} options.skin The corresponding skin components from the 3D model\n * @param {ModelSceneGraph} options.sceneGraph The scene graph this skin belongs to.\n *\n * @alias ModelSkin\n * @constructor\n *\n * @private\n */\nfunction ModelSkin(options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n  //>>includeStart('debug', pragmas.debug);\n  Check.typeOf.object(\"options.skin\", options.skin);\n  Check.typeOf.object(\"options.sceneGraph\", options.sceneGraph);\n  //>>includeEnd('debug');\n\n  this._sceneGraph = options.sceneGraph;\n  const skin = options.skin;\n\n  this._skin = skin;\n\n  this._inverseBindMatrices = undefined;\n  this._joints = [];\n  this._jointMatrices = [];\n\n  initialize(this);\n}\n\nObject.defineProperties(ModelSkin.prototype, {\n  /**\n   * The internal skin this runtime skin represents.\n   *\n   * @memberof ModelSkin.prototype\n   * @type {ModelComponents.Skin}\n   * @readonly\n   *\n   * @private\n   */\n  skin: {\n    get: function () {\n      return this._skin;\n    },\n  },\n\n  /**\n   * The scene graph this skin belongs to.\n   *\n   * @memberof ModelSkin.prototype\n   * @type {ModelSceneGraph}\n   * @readonly\n   *\n   * @private\n   */\n  sceneGraph: {\n    get: function () {\n      return this._sceneGraph;\n    },\n  },\n\n  /**\n   * The inverse bind matrices of the skin.\n   *\n   * @memberof ModelSkin.prototype\n   * @type {Matrix4[]}\n   * @readonly\n   *\n   * @private\n   */\n  inverseBindMatrices: {\n    get: function () {\n      return this._inverseBindMatrices;\n    },\n  },\n\n  /**\n   * The joints of the skin.\n   *\n   * @memberof ModelSkin.prototype\n   * @type {ModelRuntimeNode[]}\n   * @readonly\n   *\n   * @private\n   */\n  joints: {\n    get: function () {\n      return this._joints;\n    },\n  },\n\n  /**\n   * The joint matrices for the skin, where each joint matrix is computed as\n   * jointMatrix = jointWorldTransform * inverseBindMatrix.\n   *\n   * Each node that references this skin is responsible for pre-multiplying its inverse\n   * world transform to the joint matrices for its own use.\n   *\n   * @memberof ModelSkin.prototype\n   * @type {Matrix4[]}\n   * @readonly\n   *\n   * @private\n   */\n  jointMatrices: {\n    get: function () {\n      return this._jointMatrices;\n    },\n  },\n});\n\nfunction initialize(runtimeSkin) {\n  const skin = runtimeSkin.skin;\n  const inverseBindMatrices = skin.inverseBindMatrices;\n  runtimeSkin._inverseBindMatrices = inverseBindMatrices;\n\n  const joints = skin.joints;\n  const length = joints.length;\n\n  const runtimeNodes = runtimeSkin.sceneGraph._runtimeNodes;\n  const runtimeJoints = runtimeSkin.joints;\n  const runtimeJointMatrices = runtimeSkin._jointMatrices;\n  for (let i = 0; i < length; i++) {\n    const jointIndex = joints[i].index;\n    const runtimeNode = runtimeNodes[jointIndex];\n    runtimeJoints.push(runtimeNode);\n\n    const inverseBindMatrix = inverseBindMatrices[i];\n    const jointMatrix = computeJointMatrix(\n      runtimeNode,\n      inverseBindMatrix,\n      new Matrix4(),\n    );\n    runtimeJointMatrices.push(jointMatrix);\n  }\n}\n\nfunction computeJointMatrix(joint, inverseBindMatrix, result) {\n  const jointWorldTransform = Matrix4.multiplyTransformation(\n    joint.transformToRoot,\n    joint.transform,\n    result,\n  );\n\n  result = Matrix4.multiplyTransformation(\n    jointWorldTransform,\n    inverseBindMatrix,\n    result,\n  );\n\n  return result;\n}\n\n/**\n * Updates the joint matrices for the skin.\n *\n * @private\n */\nModelSkin.prototype.updateJointMatrices = function () {\n  const jointMatrices = this._jointMatrices;\n  const length = jointMatrices.length;\n  for (let i = 0; i < length; i++) {\n    const joint = this.joints[i];\n    const inverseBindMatrix = this.inverseBindMatrices[i];\n    jointMatrices[i] = computeJointMatrix(\n      joint,\n      inverseBindMatrix,\n      jointMatrices[i],\n    );\n  }\n};\n\nexport default ModelSkin;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}