{"ast":null,"code":"import Check from \"../../Core/Check.js\";\nimport defaultValue from \"../../Core/defaultValue.js\";\nimport defined from \"../../Core/defined.js\";\nimport PrimitiveType from \"../../Core/PrimitiveType.js\";\nimport SceneMode from \"../SceneMode.js\";\nimport AlphaPipelineStage from \"./AlphaPipelineStage.js\";\nimport BatchTexturePipelineStage from \"./BatchTexturePipelineStage.js\";\nimport ClassificationPipelineStage from \"./ClassificationPipelineStage.js\";\nimport CPUStylingPipelineStage from \"./CPUStylingPipelineStage.js\";\nimport CustomShaderMode from \"./CustomShaderMode.js\";\nimport CustomShaderPipelineStage from \"./CustomShaderPipelineStage.js\";\nimport DequantizationPipelineStage from \"./DequantizationPipelineStage.js\";\nimport FeatureIdPipelineStage from \"./FeatureIdPipelineStage.js\";\nimport GeometryPipelineStage from \"./GeometryPipelineStage.js\";\nimport LightingPipelineStage from \"./LightingPipelineStage.js\";\nimport MaterialPipelineStage from \"./MaterialPipelineStage.js\";\nimport MetadataPickingPipelineStage from \"./MetadataPickingPipelineStage.js\";\nimport MetadataPipelineStage from \"./MetadataPipelineStage.js\";\nimport ModelUtility from \"./ModelUtility.js\";\nimport MorphTargetsPipelineStage from \"./MorphTargetsPipelineStage.js\";\nimport PickingPipelineStage from \"./PickingPipelineStage.js\";\nimport PointCloudStylingPipelineStage from \"./PointCloudStylingPipelineStage.js\";\nimport PrimitiveOutlinePipelineStage from \"./PrimitiveOutlinePipelineStage.js\";\nimport PrimitiveStatisticsPipelineStage from \"./PrimitiveStatisticsPipelineStage.js\";\nimport SceneMode2DPipelineStage from \"./SceneMode2DPipelineStage.js\";\nimport SelectedFeatureIdPipelineStage from \"./SelectedFeatureIdPipelineStage.js\";\nimport SkinningPipelineStage from \"./SkinningPipelineStage.js\";\nimport VerticalExaggerationPipelineStage from \"./VerticalExaggerationPipelineStage.js\";\nimport WireframePipelineStage from \"./WireframePipelineStage.js\";\n\n/**\n * In memory representation of a single primitive, that is, a primitive\n * and its corresponding mesh.\n *\n * @param {object} options An object containing the following options:\n * @param {ModelComponents.Primitive} options.primitive The primitive component.\n * @param {ModelComponents.Node} options.node The node that this primitive belongs to.\n * @param {Model} options.model The {@link Model} this primitive belongs to.\n *\n * @alias ModelRuntimePrimitive\n * @constructor\n *\n * @private\n */\nfunction ModelRuntimePrimitive(options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n  const primitive = options.primitive;\n  const node = options.node;\n  const model = options.model;\n  //>>includeStart('debug', pragmas.debug);\n  Check.typeOf.object(\"options.primitive\", primitive);\n  Check.typeOf.object(\"options.node\", node);\n  Check.typeOf.object(\"options.model\", model);\n  //>>includeEnd('debug');\n\n  /**\n   * The primitive component associated with this primitive.\n   *\n   * @type {ModelComponents.Primitive}\n   *\n   * @private\n   */\n  this.primitive = primitive;\n\n  /**\n   * A reference to the node this primitive belongs to.\n   *\n   * @type {ModelComponents.Node}\n   *\n   * @private\n   */\n  this.node = node;\n\n  /**\n   * A reference to the model\n   *\n   * @type {Model}\n   *\n   * @private\n   */\n  this.model = model;\n\n  /**\n   * Pipeline stages to apply to this primitive. This\n   * is an array of classes, each with a static method called\n   * <code>process()</code>\n   *\n   * @type {Object[]}\n   * @readonly\n   *\n   * @private\n   */\n  this.pipelineStages = [];\n\n  /**\n   * The generated {@link ModelDrawCommand} or {@link ClassificationModelDrawCommand}\n   * associated with this primitive.\n   *\n   * @type {ModelDrawCommand|ClassificationModelDrawCommand}\n   *\n   * @private\n   */\n  this.drawCommand = undefined;\n\n  /**\n   * The bounding sphere of this primitive in object-space.\n   *\n   * @type {BoundingSphere}\n   *\n   * @private\n   */\n  this.boundingSphere = undefined;\n\n  /**\n   * The bounding sphere of this primitive in 2D world space.\n   *\n   * @type {BoundingSphere}\n   *\n   * @private\n   */\n  this.boundingSphere2D = undefined;\n\n  /**\n   * A buffer containing the primitive's positions projected to 2D world\n   * coordinates. This is generated by SceneMode2DPipelineStage and used for\n   * rendering in 2D / CV mode. The memory is managed by Model; this is just\n   * a reference.\n   *\n   * @type {Buffer}\n   *\n   * @private\n   */\n  this.positionBuffer2D = undefined;\n\n  /**\n   * An array containing the lengths of the vertex batches for classification.\n   * Vertices with the same feature ID are batched together, and each batch is\n   * drawn with a different draw command in order to properly classify other\n   * assets.\n   * <p>\n   * This is generated by ClassificationPipelineStage. The memory is managed by\n   * Model; this is just a reference.\n   * </p>\n   *\n   * @type {number[]}\n   *\n   * @private\n   */\n  this.batchLengths = undefined;\n\n  /**\n   * An array containing the offsets of the vertex batches for classification.\n   * Vertices with the same feature ID are batched together, and each batch is\n   * drawn with a different draw command in order to properly classify other\n   * assets.\n   * <p>\n   * This is generated by ClassificationPipelineStage. The memory is managed by\n   * Model; this is just a reference.\n   * </p>\n   *\n   * @type {number[]}\n   *\n   * @private\n   */\n  this.batchOffsets = undefined;\n\n  /**\n   * Update stages to apply to this primitive.\n   *\n   * @type {Object[]}\n   * @readonly\n   *\n   * @private\n   */\n  this.updateStages = [];\n}\n\n/**\n * Configure the primitive pipeline stages. If the pipeline needs to be re-run,\n * call this method again to ensure the correct sequence of pipeline stages are\n * used.\n *\n * @param {FrameState} frameState The frame state.\n *\n * @private\n */\nModelRuntimePrimitive.prototype.configurePipeline = function (frameState) {\n  const pipelineStages = this.pipelineStages;\n  pipelineStages.length = 0;\n  const primitive = this.primitive;\n  const node = this.node;\n  const model = this.model;\n  const customShader = model.customShader;\n  const style = model.style;\n  const useWebgl2 = frameState.context.webgl2;\n  const mode = frameState.mode;\n  const use2D = mode !== SceneMode.SCENE3D && !frameState.scene3DOnly && model._projectTo2D;\n  const hasVerticalExaggeration = frameState.verticalExaggeration !== 1.0 && model.hasVerticalExaggeration;\n  const hasMorphTargets = defined(primitive.morphTargets) && primitive.morphTargets.length > 0;\n  const hasSkinning = defined(node.skin);\n  const hasCustomShader = defined(customShader);\n  const hasCustomFragmentShader = hasCustomShader && defined(customShader.fragmentShaderText);\n  const materialsEnabled = !hasCustomFragmentShader || customShader.mode !== CustomShaderMode.REPLACE_MATERIAL;\n  const hasQuantization = ModelUtility.hasQuantizedAttributes(primitive.attributes);\n  const generateWireframeIndices = model.debugWireframe && PrimitiveType.isTriangles(primitive.primitiveType) && (\n  // Generating index buffers for wireframes is always possible in WebGL2.\n  // However, this will only work in WebGL1 if the model was constructed with\n  // enableDebugWireframe set to true.\n  model._enableDebugWireframe || useWebgl2);\n  const pointCloudShading = model.pointCloudShading;\n  const hasAttenuation = defined(pointCloudShading) && pointCloudShading.attenuation;\n  const hasPointCloudBackFaceCulling = defined(pointCloudShading) && pointCloudShading.backFaceCulling;\n  const hasPointCloudStyle = primitive.primitiveType === PrimitiveType.POINTS && (defined(style) || hasAttenuation || hasPointCloudBackFaceCulling);\n  const hasOutlines = model._enableShowOutline && defined(primitive.outlineCoordinates);\n  const featureIdFlags = inspectFeatureIds(model, node, primitive);\n  const hasClassification = defined(model.classificationType);\n\n  // Start of pipeline -----------------------------------------------------\n  if (use2D) {\n    pipelineStages.push(SceneMode2DPipelineStage);\n  }\n  pipelineStages.push(GeometryPipelineStage);\n  if (generateWireframeIndices) {\n    pipelineStages.push(WireframePipelineStage);\n  }\n  if (hasClassification) {\n    pipelineStages.push(ClassificationPipelineStage);\n  }\n  if (hasMorphTargets) {\n    pipelineStages.push(MorphTargetsPipelineStage);\n  }\n  if (hasSkinning) {\n    pipelineStages.push(SkinningPipelineStage);\n  }\n  if (hasPointCloudStyle) {\n    pipelineStages.push(PointCloudStylingPipelineStage);\n  }\n  if (hasQuantization) {\n    pipelineStages.push(DequantizationPipelineStage);\n  }\n  if (materialsEnabled) {\n    pipelineStages.push(MaterialPipelineStage);\n  }\n\n  // These stages are always run to ensure structs\n  // are declared to avoid compilation errors.\n  pipelineStages.push(FeatureIdPipelineStage);\n  pipelineStages.push(MetadataPipelineStage);\n  pipelineStages.push(MetadataPickingPipelineStage);\n  if (featureIdFlags.hasPropertyTable) {\n    pipelineStages.push(SelectedFeatureIdPipelineStage);\n    pipelineStages.push(BatchTexturePipelineStage);\n    pipelineStages.push(CPUStylingPipelineStage);\n  }\n  if (hasVerticalExaggeration) {\n    pipelineStages.push(VerticalExaggerationPipelineStage);\n  }\n  if (hasCustomShader) {\n    pipelineStages.push(CustomShaderPipelineStage);\n  }\n  pipelineStages.push(LightingPipelineStage);\n  if (model.allowPicking) {\n    pipelineStages.push(PickingPipelineStage);\n  }\n  if (hasOutlines) {\n    pipelineStages.push(PrimitiveOutlinePipelineStage);\n  }\n  pipelineStages.push(AlphaPipelineStage);\n  pipelineStages.push(PrimitiveStatisticsPipelineStage);\n  return;\n};\nfunction inspectFeatureIds(model, node, primitive) {\n  let featureIds;\n  // Check instances first, as this is the most specific type of\n  // feature ID\n  if (defined(node.instances)) {\n    featureIds = ModelUtility.getFeatureIdsByLabel(node.instances.featureIds, model.instanceFeatureIdLabel);\n    if (defined(featureIds)) {\n      return {\n        hasFeatureIds: true,\n        hasPropertyTable: defined(featureIds.propertyTableId)\n      };\n    }\n  }\n  featureIds = ModelUtility.getFeatureIdsByLabel(primitive.featureIds, model.featureIdLabel);\n  if (defined(featureIds)) {\n    return {\n      hasFeatureIds: true,\n      hasPropertyTable: defined(featureIds.propertyTableId)\n    };\n  }\n  return {\n    hasFeatureIds: false,\n    hasPropertyTable: false\n  };\n}\nexport default ModelRuntimePrimitive;","map":{"version":3,"names":["Check","defaultValue","defined","PrimitiveType","SceneMode","AlphaPipelineStage","BatchTexturePipelineStage","ClassificationPipelineStage","CPUStylingPipelineStage","CustomShaderMode","CustomShaderPipelineStage","DequantizationPipelineStage","FeatureIdPipelineStage","GeometryPipelineStage","LightingPipelineStage","MaterialPipelineStage","MetadataPickingPipelineStage","MetadataPipelineStage","ModelUtility","MorphTargetsPipelineStage","PickingPipelineStage","PointCloudStylingPipelineStage","PrimitiveOutlinePipelineStage","PrimitiveStatisticsPipelineStage","SceneMode2DPipelineStage","SelectedFeatureIdPipelineStage","SkinningPipelineStage","VerticalExaggerationPipelineStage","WireframePipelineStage","ModelRuntimePrimitive","options","EMPTY_OBJECT","primitive","node","model","typeOf","object","pipelineStages","drawCommand","undefined","boundingSphere","boundingSphere2D","positionBuffer2D","batchLengths","batchOffsets","updateStages","prototype","configurePipeline","frameState","length","customShader","style","useWebgl2","context","webgl2","mode","use2D","SCENE3D","scene3DOnly","_projectTo2D","hasVerticalExaggeration","verticalExaggeration","hasMorphTargets","morphTargets","hasSkinning","skin","hasCustomShader","hasCustomFragmentShader","fragmentShaderText","materialsEnabled","REPLACE_MATERIAL","hasQuantization","hasQuantizedAttributes","attributes","generateWireframeIndices","debugWireframe","isTriangles","primitiveType","_enableDebugWireframe","pointCloudShading","hasAttenuation","attenuation","hasPointCloudBackFaceCulling","backFaceCulling","hasPointCloudStyle","POINTS","hasOutlines","_enableShowOutline","outlineCoordinates","featureIdFlags","inspectFeatureIds","hasClassification","classificationType","push","hasPropertyTable","allowPicking","featureIds","instances","getFeatureIdsByLabel","instanceFeatureIdLabel","hasFeatureIds","propertyTableId","featureIdLabel"],"sources":["/Users/mac/Desktop/IWL_Fresh_Start/Lab4gps-Love-In-Action/node_modules/@cesium/engine/Source/Scene/Model/ModelRuntimePrimitive.js"],"sourcesContent":["import Check from \"../../Core/Check.js\";\nimport defaultValue from \"../../Core/defaultValue.js\";\nimport defined from \"../../Core/defined.js\";\nimport PrimitiveType from \"../../Core/PrimitiveType.js\";\nimport SceneMode from \"../SceneMode.js\";\nimport AlphaPipelineStage from \"./AlphaPipelineStage.js\";\nimport BatchTexturePipelineStage from \"./BatchTexturePipelineStage.js\";\nimport ClassificationPipelineStage from \"./ClassificationPipelineStage.js\";\nimport CPUStylingPipelineStage from \"./CPUStylingPipelineStage.js\";\nimport CustomShaderMode from \"./CustomShaderMode.js\";\nimport CustomShaderPipelineStage from \"./CustomShaderPipelineStage.js\";\nimport DequantizationPipelineStage from \"./DequantizationPipelineStage.js\";\nimport FeatureIdPipelineStage from \"./FeatureIdPipelineStage.js\";\nimport GeometryPipelineStage from \"./GeometryPipelineStage.js\";\nimport LightingPipelineStage from \"./LightingPipelineStage.js\";\nimport MaterialPipelineStage from \"./MaterialPipelineStage.js\";\nimport MetadataPickingPipelineStage from \"./MetadataPickingPipelineStage.js\";\nimport MetadataPipelineStage from \"./MetadataPipelineStage.js\";\nimport ModelUtility from \"./ModelUtility.js\";\nimport MorphTargetsPipelineStage from \"./MorphTargetsPipelineStage.js\";\nimport PickingPipelineStage from \"./PickingPipelineStage.js\";\nimport PointCloudStylingPipelineStage from \"./PointCloudStylingPipelineStage.js\";\nimport PrimitiveOutlinePipelineStage from \"./PrimitiveOutlinePipelineStage.js\";\nimport PrimitiveStatisticsPipelineStage from \"./PrimitiveStatisticsPipelineStage.js\";\nimport SceneMode2DPipelineStage from \"./SceneMode2DPipelineStage.js\";\nimport SelectedFeatureIdPipelineStage from \"./SelectedFeatureIdPipelineStage.js\";\nimport SkinningPipelineStage from \"./SkinningPipelineStage.js\";\nimport VerticalExaggerationPipelineStage from \"./VerticalExaggerationPipelineStage.js\";\nimport WireframePipelineStage from \"./WireframePipelineStage.js\";\n\n/**\n * In memory representation of a single primitive, that is, a primitive\n * and its corresponding mesh.\n *\n * @param {object} options An object containing the following options:\n * @param {ModelComponents.Primitive} options.primitive The primitive component.\n * @param {ModelComponents.Node} options.node The node that this primitive belongs to.\n * @param {Model} options.model The {@link Model} this primitive belongs to.\n *\n * @alias ModelRuntimePrimitive\n * @constructor\n *\n * @private\n */\nfunction ModelRuntimePrimitive(options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n\n  const primitive = options.primitive;\n  const node = options.node;\n  const model = options.model;\n  //>>includeStart('debug', pragmas.debug);\n  Check.typeOf.object(\"options.primitive\", primitive);\n  Check.typeOf.object(\"options.node\", node);\n  Check.typeOf.object(\"options.model\", model);\n  //>>includeEnd('debug');\n\n  /**\n   * The primitive component associated with this primitive.\n   *\n   * @type {ModelComponents.Primitive}\n   *\n   * @private\n   */\n  this.primitive = primitive;\n\n  /**\n   * A reference to the node this primitive belongs to.\n   *\n   * @type {ModelComponents.Node}\n   *\n   * @private\n   */\n  this.node = node;\n\n  /**\n   * A reference to the model\n   *\n   * @type {Model}\n   *\n   * @private\n   */\n  this.model = model;\n\n  /**\n   * Pipeline stages to apply to this primitive. This\n   * is an array of classes, each with a static method called\n   * <code>process()</code>\n   *\n   * @type {Object[]}\n   * @readonly\n   *\n   * @private\n   */\n  this.pipelineStages = [];\n\n  /**\n   * The generated {@link ModelDrawCommand} or {@link ClassificationModelDrawCommand}\n   * associated with this primitive.\n   *\n   * @type {ModelDrawCommand|ClassificationModelDrawCommand}\n   *\n   * @private\n   */\n  this.drawCommand = undefined;\n\n  /**\n   * The bounding sphere of this primitive in object-space.\n   *\n   * @type {BoundingSphere}\n   *\n   * @private\n   */\n  this.boundingSphere = undefined;\n\n  /**\n   * The bounding sphere of this primitive in 2D world space.\n   *\n   * @type {BoundingSphere}\n   *\n   * @private\n   */\n  this.boundingSphere2D = undefined;\n\n  /**\n   * A buffer containing the primitive's positions projected to 2D world\n   * coordinates. This is generated by SceneMode2DPipelineStage and used for\n   * rendering in 2D / CV mode. The memory is managed by Model; this is just\n   * a reference.\n   *\n   * @type {Buffer}\n   *\n   * @private\n   */\n  this.positionBuffer2D = undefined;\n\n  /**\n   * An array containing the lengths of the vertex batches for classification.\n   * Vertices with the same feature ID are batched together, and each batch is\n   * drawn with a different draw command in order to properly classify other\n   * assets.\n   * <p>\n   * This is generated by ClassificationPipelineStage. The memory is managed by\n   * Model; this is just a reference.\n   * </p>\n   *\n   * @type {number[]}\n   *\n   * @private\n   */\n  this.batchLengths = undefined;\n\n  /**\n   * An array containing the offsets of the vertex batches for classification.\n   * Vertices with the same feature ID are batched together, and each batch is\n   * drawn with a different draw command in order to properly classify other\n   * assets.\n   * <p>\n   * This is generated by ClassificationPipelineStage. The memory is managed by\n   * Model; this is just a reference.\n   * </p>\n   *\n   * @type {number[]}\n   *\n   * @private\n   */\n  this.batchOffsets = undefined;\n\n  /**\n   * Update stages to apply to this primitive.\n   *\n   * @type {Object[]}\n   * @readonly\n   *\n   * @private\n   */\n  this.updateStages = [];\n}\n\n/**\n * Configure the primitive pipeline stages. If the pipeline needs to be re-run,\n * call this method again to ensure the correct sequence of pipeline stages are\n * used.\n *\n * @param {FrameState} frameState The frame state.\n *\n * @private\n */\nModelRuntimePrimitive.prototype.configurePipeline = function (frameState) {\n  const pipelineStages = this.pipelineStages;\n  pipelineStages.length = 0;\n\n  const primitive = this.primitive;\n  const node = this.node;\n  const model = this.model;\n\n  const customShader = model.customShader;\n  const style = model.style;\n\n  const useWebgl2 = frameState.context.webgl2;\n  const mode = frameState.mode;\n  const use2D =\n    mode !== SceneMode.SCENE3D && !frameState.scene3DOnly && model._projectTo2D;\n  const hasVerticalExaggeration =\n    frameState.verticalExaggeration !== 1.0 && model.hasVerticalExaggeration;\n\n  const hasMorphTargets =\n    defined(primitive.morphTargets) && primitive.morphTargets.length > 0;\n  const hasSkinning = defined(node.skin);\n  const hasCustomShader = defined(customShader);\n  const hasCustomFragmentShader =\n    hasCustomShader && defined(customShader.fragmentShaderText);\n  const materialsEnabled =\n    !hasCustomFragmentShader ||\n    customShader.mode !== CustomShaderMode.REPLACE_MATERIAL;\n  const hasQuantization = ModelUtility.hasQuantizedAttributes(\n    primitive.attributes,\n  );\n  const generateWireframeIndices =\n    model.debugWireframe &&\n    PrimitiveType.isTriangles(primitive.primitiveType) &&\n    // Generating index buffers for wireframes is always possible in WebGL2.\n    // However, this will only work in WebGL1 if the model was constructed with\n    // enableDebugWireframe set to true.\n    (model._enableDebugWireframe || useWebgl2);\n\n  const pointCloudShading = model.pointCloudShading;\n  const hasAttenuation =\n    defined(pointCloudShading) && pointCloudShading.attenuation;\n  const hasPointCloudBackFaceCulling =\n    defined(pointCloudShading) && pointCloudShading.backFaceCulling;\n  const hasPointCloudStyle =\n    primitive.primitiveType === PrimitiveType.POINTS &&\n    (defined(style) || hasAttenuation || hasPointCloudBackFaceCulling);\n\n  const hasOutlines =\n    model._enableShowOutline && defined(primitive.outlineCoordinates);\n\n  const featureIdFlags = inspectFeatureIds(model, node, primitive);\n\n  const hasClassification = defined(model.classificationType);\n\n  // Start of pipeline -----------------------------------------------------\n  if (use2D) {\n    pipelineStages.push(SceneMode2DPipelineStage);\n  }\n\n  pipelineStages.push(GeometryPipelineStage);\n\n  if (generateWireframeIndices) {\n    pipelineStages.push(WireframePipelineStage);\n  }\n\n  if (hasClassification) {\n    pipelineStages.push(ClassificationPipelineStage);\n  }\n\n  if (hasMorphTargets) {\n    pipelineStages.push(MorphTargetsPipelineStage);\n  }\n\n  if (hasSkinning) {\n    pipelineStages.push(SkinningPipelineStage);\n  }\n\n  if (hasPointCloudStyle) {\n    pipelineStages.push(PointCloudStylingPipelineStage);\n  }\n\n  if (hasQuantization) {\n    pipelineStages.push(DequantizationPipelineStage);\n  }\n\n  if (materialsEnabled) {\n    pipelineStages.push(MaterialPipelineStage);\n  }\n\n  // These stages are always run to ensure structs\n  // are declared to avoid compilation errors.\n  pipelineStages.push(FeatureIdPipelineStage);\n  pipelineStages.push(MetadataPipelineStage);\n  pipelineStages.push(MetadataPickingPipelineStage);\n\n  if (featureIdFlags.hasPropertyTable) {\n    pipelineStages.push(SelectedFeatureIdPipelineStage);\n    pipelineStages.push(BatchTexturePipelineStage);\n    pipelineStages.push(CPUStylingPipelineStage);\n  }\n\n  if (hasVerticalExaggeration) {\n    pipelineStages.push(VerticalExaggerationPipelineStage);\n  }\n\n  if (hasCustomShader) {\n    pipelineStages.push(CustomShaderPipelineStage);\n  }\n\n  pipelineStages.push(LightingPipelineStage);\n\n  if (model.allowPicking) {\n    pipelineStages.push(PickingPipelineStage);\n  }\n\n  if (hasOutlines) {\n    pipelineStages.push(PrimitiveOutlinePipelineStage);\n  }\n\n  pipelineStages.push(AlphaPipelineStage);\n\n  pipelineStages.push(PrimitiveStatisticsPipelineStage);\n\n  return;\n};\n\nfunction inspectFeatureIds(model, node, primitive) {\n  let featureIds;\n  // Check instances first, as this is the most specific type of\n  // feature ID\n  if (defined(node.instances)) {\n    featureIds = ModelUtility.getFeatureIdsByLabel(\n      node.instances.featureIds,\n      model.instanceFeatureIdLabel,\n    );\n\n    if (defined(featureIds)) {\n      return {\n        hasFeatureIds: true,\n        hasPropertyTable: defined(featureIds.propertyTableId),\n      };\n    }\n  }\n\n  featureIds = ModelUtility.getFeatureIdsByLabel(\n    primitive.featureIds,\n    model.featureIdLabel,\n  );\n  if (defined(featureIds)) {\n    return {\n      hasFeatureIds: true,\n      hasPropertyTable: defined(featureIds.propertyTableId),\n    };\n  }\n\n  return {\n    hasFeatureIds: false,\n    hasPropertyTable: false,\n  };\n}\n\nexport default ModelRuntimePrimitive;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,qBAAqB;AACvC,OAAOC,YAAY,MAAM,4BAA4B;AACrD,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,aAAa,MAAM,6BAA6B;AACvD,OAAOC,SAAS,MAAM,iBAAiB;AACvC,OAAOC,kBAAkB,MAAM,yBAAyB;AACxD,OAAOC,yBAAyB,MAAM,gCAAgC;AACtE,OAAOC,2BAA2B,MAAM,kCAAkC;AAC1E,OAAOC,uBAAuB,MAAM,8BAA8B;AAClE,OAAOC,gBAAgB,MAAM,uBAAuB;AACpD,OAAOC,yBAAyB,MAAM,gCAAgC;AACtE,OAAOC,2BAA2B,MAAM,kCAAkC;AAC1E,OAAOC,sBAAsB,MAAM,6BAA6B;AAChE,OAAOC,qBAAqB,MAAM,4BAA4B;AAC9D,OAAOC,qBAAqB,MAAM,4BAA4B;AAC9D,OAAOC,qBAAqB,MAAM,4BAA4B;AAC9D,OAAOC,4BAA4B,MAAM,mCAAmC;AAC5E,OAAOC,qBAAqB,MAAM,4BAA4B;AAC9D,OAAOC,YAAY,MAAM,mBAAmB;AAC5C,OAAOC,yBAAyB,MAAM,gCAAgC;AACtE,OAAOC,oBAAoB,MAAM,2BAA2B;AAC5D,OAAOC,8BAA8B,MAAM,qCAAqC;AAChF,OAAOC,6BAA6B,MAAM,oCAAoC;AAC9E,OAAOC,gCAAgC,MAAM,uCAAuC;AACpF,OAAOC,wBAAwB,MAAM,+BAA+B;AACpE,OAAOC,8BAA8B,MAAM,qCAAqC;AAChF,OAAOC,qBAAqB,MAAM,4BAA4B;AAC9D,OAAOC,iCAAiC,MAAM,wCAAwC;AACtF,OAAOC,sBAAsB,MAAM,6BAA6B;;AAEhE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,qBAAqBA,CAACC,OAAO,EAAE;EACtCA,OAAO,GAAG7B,YAAY,CAAC6B,OAAO,EAAE7B,YAAY,CAAC8B,YAAY,CAAC;EAE1D,MAAMC,SAAS,GAAGF,OAAO,CAACE,SAAS;EACnC,MAAMC,IAAI,GAAGH,OAAO,CAACG,IAAI;EACzB,MAAMC,KAAK,GAAGJ,OAAO,CAACI,KAAK;EAC3B;EACAlC,KAAK,CAACmC,MAAM,CAACC,MAAM,CAAC,mBAAmB,EAAEJ,SAAS,CAAC;EACnDhC,KAAK,CAACmC,MAAM,CAACC,MAAM,CAAC,cAAc,EAAEH,IAAI,CAAC;EACzCjC,KAAK,CAACmC,MAAM,CAACC,MAAM,CAAC,eAAe,EAAEF,KAAK,CAAC;EAC3C;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;EACE,IAAI,CAACF,SAAS,GAAGA,SAAS;;EAE1B;AACF;AACA;AACA;AACA;AACA;AACA;EACE,IAAI,CAACC,IAAI,GAAGA,IAAI;;EAEhB;AACF;AACA;AACA;AACA;AACA;AACA;EACE,IAAI,CAACC,KAAK,GAAGA,KAAK;;EAElB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,IAAI,CAACG,cAAc,GAAG,EAAE;;EAExB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACE,IAAI,CAACC,WAAW,GAAGC,SAAS;;EAE5B;AACF;AACA;AACA;AACA;AACA;AACA;EACE,IAAI,CAACC,cAAc,GAAGD,SAAS;;EAE/B;AACF;AACA;AACA;AACA;AACA;AACA;EACE,IAAI,CAACE,gBAAgB,GAAGF,SAAS;;EAEjC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,IAAI,CAACG,gBAAgB,GAAGH,SAAS;;EAEjC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,IAAI,CAACI,YAAY,GAAGJ,SAAS;;EAE7B;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,IAAI,CAACK,YAAY,GAAGL,SAAS;;EAE7B;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACE,IAAI,CAACM,YAAY,GAAG,EAAE;AACxB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAhB,qBAAqB,CAACiB,SAAS,CAACC,iBAAiB,GAAG,UAAUC,UAAU,EAAE;EACxE,MAAMX,cAAc,GAAG,IAAI,CAACA,cAAc;EAC1CA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}